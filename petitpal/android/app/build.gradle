plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

// Apply Firebase plugins conditionally
def googleServicesFile = file('google-services.json')
if (googleServicesFile.exists()) {
    apply plugin: 'com.google.gms.google-services'
    apply plugin: 'com.google.firebase.crashlytics'
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0.0'
}

android {
    namespace "com.petitpal.app"
    compileSdk 35  // Updated to fix plugin compatibility
    ndkVersion "27.0.12077973"  // CRITICAL: Pinned NDK version to avoid build errors

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId "com.petitpal.app"
        minSdkVersion 23  // Required for Firebase & modern features
        targetSdkVersion 34
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        
        // Multidex support for Firebase
        multiDexEnabled true
        
        // Proguard configuration
        proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
    }

    signingConfigs {
        release {
            // TODO: Configure release signing
            // keyAlias keystoreProperties['keyAlias']
            // keyPassword keystoreProperties['keyPassword']
            // storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            // storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.debug  // Change to signingConfigs.release for production
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        
        debug {
            applicationIdSuffix ".debug"
            debuggable true
            minifyEnabled false
        }
    }

    packagingOptions {
        pickFirst '**/libc++_shared.so'
        pickFirst '**/libjsc.so'
    }

    // Lint configuration for seniors-focused app
    lintOptions {
        disable 'InvalidPackage', 'UnusedResources'
        checkReleaseBuilds true
        abortOnError false
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    
    // AndroidX dependencies
    implementation 'androidx.core:core-ktx:1.13.1'
    implementation 'androidx.multidex:multidex:2.0.1'
    
    // Firebase dependencies (only when google-services.json exists)
    if (googleServicesFile.exists()) {
        // Firebase BoM - ensures compatible versions
        implementation platform('com.google.firebase:firebase-bom:33.6.0')
        implementation 'com.google.firebase:firebase-analytics-ktx'
        implementation 'com.google.firebase:firebase-crashlytics-ktx'
        implementation 'com.google.firebase:firebase-core'
    }
    
    // For file sharing
    implementation 'androidx.core:core:1.13.1'
}