From 4d55577c53a32791d0770952f9b24846e4a835fa Mon Sep 17 00:00:00 2001
From: gen <a@b.c>
Date: Sat, 16 Aug 2025 21:38:55 +0800
Subject: [PATCH] PetitPal MVP initial commit

---
 .gitignore                                    |  140 +-
 BUILD_CONFIG.md                               |    1 +
 README.md                                     |    1 +
 cloudflare-worker/worker.js                   |  273 +--
 cloudflare-worker/wrangler.toml               |   14 +-
 create_petitpal_mvp.sh                        | 2056 +++++++++++++++++
 docs/ARCHITECTURE.md                          |   14 +-
 docs/BUILD_CONFIG.md                          |   16 +-
 docs/CUSTOMIZATION_GUIDE.md                   |   14 +-
 docs/DEPLOYMENT_CHECKLIST.md                  |    8 +-
 docs/MERGE_NOTES.md                           |   18 +-
 docs/MIGRATION_TO_SUPABASE.md                 |   20 +-
 docs/PetitPal_API_Spec.md                     |    1 +
 docs/README.md                                |   44 +-
 docs/README_B1.md                             |   33 +
 docs/README_B1_1.md                           |   12 +
 docs/README_MVP.md                            |   34 +
 docs/SETUP_GUIDE.md                           |   42 +-
 docs/TROUBLESHOOTING.md                       |    1 +
 petitpal/.gitignore                           |   90 +-
 petitpal/.metadata                            |   90 +-
 petitpal/README.md                            |    6 +-
 petitpal/analysis_options.yaml                |    9 +-
 petitpal/android/.gitignore                   |   28 +-
 petitpal/android/app/build.gradle             |  125 +-
 petitpal/android/app/proguard-rules.pro       |    1 +
 .../android/app/src/debug/AndroidManifest.xml |   14 +-
 .../android/app/src/main/AndroidManifest.xml  |  160 +-
 .../kotlin/com/petitpal/app/MainActivity.kt   |    7 +-
 .../res/drawable-v21/launch_background.xml    |   24 +-
 .../main/res/drawable/launch_background.xml   |   22 +-
 .../src/main/res/mipmap-hdpi/ic_launcher.png  |  Bin 544 -> 72 bytes
 .../src/main/res/mipmap-mdpi/ic_launcher.png  |  Bin 442 -> 72 bytes
 .../src/main/res/mipmap-xhdpi/ic_launcher.png |  Bin 721 -> 72 bytes
 .../main/res/mipmap-xxhdpi/ic_launcher.png    |  Bin 1031 -> 72 bytes
 .../main/res/mipmap-xxxhdpi/ic_launcher.png   |  Bin 1443 -> 72 bytes
 .../app/src/main/res/values-night/styles.xml  |   16 +-
 .../app/src/main/res/values/styles.xml        |   36 +-
 .../app/src/main/res/xml/backup_rules.xml     |    6 +-
 .../main/res/xml/data_extraction_rules.xml    |   24 +-
 .../app/src/profile/AndroidManifest.xml       |   14 +-
 petitpal/android/build.gradle                 |   31 +-
 petitpal/android/gradle.properties            |    4 +-
 .../gradle/wrapper/gradle-wrapper.properties  |   10 +-
 petitpal/android/settings.gradle              |   26 +-
 petitpal/assets/config/onboarding.json        |   42 +-
 petitpal/assets/config/provider_setup.json    |   74 +-
 petitpal/assets/images/.gitkeep               |    4 +-
 .../themes/theme_voice_descriptions.json      |    7 +-
 petitpal/assets/themes/themes.json            |  141 +-
 petitpal/create_project_structure.bat         |   88 +-
 petitpal/ios/.gitignore                       |   68 +-
 petitpal/ios/Flutter/AppFrameworkInfo.plist   |   52 +-
 petitpal/ios/Flutter/Debug.xcconfig           |    2 +-
 petitpal/ios/Flutter/Release.xcconfig         |    2 +-
 petitpal/ios/Runner.xcodeproj/project.pbxproj | 1232 +++++-----
 .../contents.xcworkspacedata                  |   14 +-
 .../xcshareddata/IDEWorkspaceChecks.plist     |   16 +-
 .../xcshareddata/WorkspaceSettings.xcsettings |   16 +-
 .../xcshareddata/xcschemes/Runner.xcscheme    |  202 +-
 .../contents.xcworkspacedata                  |   14 +-
 .../xcshareddata/IDEWorkspaceChecks.plist     |   16 +-
 .../xcshareddata/WorkspaceSettings.xcsettings |   16 +-
 petitpal/ios/Runner/AppDelegate.swift         |   26 +-
 .../AppIcon.appiconset/Contents.json          |  244 +-
 .../LaunchImage.imageset/Contents.json        |   46 +-
 .../LaunchImage.imageset/README.md            |    8 +-
 .../Runner/Base.lproj/LaunchScreen.storyboard |   74 +-
 .../ios/Runner/Base.lproj/Main.storyboard     |   52 +-
 petitpal/ios/Runner/Info.plist                |   98 +-
 petitpal/ios/Runner/Runner-Bridging-Header.h  |    2 +-
 petitpal/ios/RunnerTests/RunnerTests.swift    |   24 +-
 petitpal/lib/app_router.dart                  |    1 +
 petitpal/lib/config/analytics_events.dart     |   42 +-
 petitpal/lib/config/api_config.dart           |   22 +-
 petitpal/lib/config/app_config.dart           |    8 +-
 petitpal/lib/config/launch_config.dart        |   27 +-
 petitpal/lib/config/strings_config.dart       |   62 +-
 petitpal/lib/config/theme_config.dart         |  284 +--
 petitpal/lib/core/services/.gitkeep           |    2 +-
 .../lib/core/services/analytics_service.dart  |  682 +++---
 petitpal/lib/core/services/worker_api.dart    |  508 ++--
 petitpal/lib/firebase_options_stub.dart       |    6 +
 petitpal/lib/main.dart                        |  243 +-
 petitpal/lib/main_common.dart                 |   68 +-
 petitpal/lib/main_dev.dart                    |   28 +-
 petitpal/lib/main_prod.dart                   |   26 +-
 petitpal/lib/main_staging.dart                |   26 +-
 petitpal/lib/providers/app_provider.dart      |  238 +-
 petitpal/lib/providers/family_provider.dart   |  325 +--
 petitpal/lib/providers/theme_provider.dart    |  233 +-
 petitpal/lib/providers/voice_provider.dart    |  350 +--
 petitpal/lib/router/app_router.dart.txt       | 1458 ++++++------
 petitpal/lib/src/analytics/analytics.dart     |   12 +-
 .../lib/src/analytics/analytics_events.dart   |   89 +
 petitpal/lib/src/analytics/events.dart        |   11 +-
 petitpal/lib/src/analytics/sentry_boot.dart   |   22 +-
 petitpal/lib/src/debug/debug_menu.dart        |   38 +-
 petitpal/lib/src/family/accept_invite.dart    |   30 +-
 .../lib/src/family/accept_invite_screen.dart  |    1 +
 .../src/family/family_dashboard_screen.dart   |    1 +
 .../lib/src/family/family_hub_screen.dart     |    1 +
 .../lib/src/family/family_member_card.dart    |   75 +
 petitpal/lib/src/family/family_screen.dart    |  720 +++---
 petitpal/lib/src/family/invite.dart           |   62 +-
 petitpal/lib/src/family/invite_screen.dart    |    1 +
 petitpal/lib/src/home/home_screen.dart        |  293 +--
 .../lib/src/onboarding/onboarding_screen.dart |  205 +-
 .../lib/src/providers/provider_setup.dart     |   96 +-
 .../src/providers/provider_setup_screen.dart  |    1 +
 petitpal/lib/src/providers/providers.dart     |    1 +
 .../lib/src/providers/providers_screen.dart   |   30 +-
 petitpal/lib/src/security/keystore.dart       |   29 +-
 petitpal/lib/src/theme/registry.dart          |  110 +-
 .../lib/src/theme/theme_preview_screen.dart   |  389 +---
 petitpal/lib/src/voice/talk_button.dart       |   30 +-
 petitpal/lib/src/voice/voice_controller.dart  |    1 +
 petitpal/lib/src/voice/voice_screen.dart      |  275 +--
 petitpal/lib/src/widgets/.gitkeep             |    2 +-
 petitpal/lib/src/widgets/error_widget.dart    |  156 +-
 .../src/widgets/speech_preview_widget.dart    |  274 +--
 .../lib/src/widgets/voice_button_widget.dart  |  436 ++--
 petitpal/lib/src/worker_api.dart              |   33 +-
 petitpal/lib/src/worker_api/worker_api.dart   |   58 +-
 petitpal/linux/.gitignore                     |    2 +-
 petitpal/linux/CMakeLists.txt                 |  256 +-
 petitpal/linux/flutter/CMakeLists.txt         |  176 +-
 petitpal/linux/runner/CMakeLists.txt          |   52 +-
 petitpal/linux/runner/main.cc                 |   12 +-
 petitpal/linux/runner/my_application.cc       |  260 +--
 petitpal/linux/runner/my_application.h        |   36 +-
 petitpal/macos/.gitignore                     |   14 +-
 petitpal/macos/Flutter/Flutter-Debug.xcconfig |    2 +-
 .../macos/Flutter/Flutter-Release.xcconfig    |    2 +-
 .../macos/Runner.xcodeproj/project.pbxproj    | 1410 +++++------
 .../xcshareddata/IDEWorkspaceChecks.plist     |   16 +-
 .../xcshareddata/xcschemes/Runner.xcscheme    |  198 +-
 .../contents.xcworkspacedata                  |   14 +-
 .../xcshareddata/IDEWorkspaceChecks.plist     |   16 +-
 petitpal/macos/Runner/AppDelegate.swift       |   26 +-
 .../AppIcon.appiconset/Contents.json          |  136 +-
 petitpal/macos/Runner/Base.lproj/MainMenu.xib |  686 +++---
 .../macos/Runner/Configs/AppInfo.xcconfig     |   28 +-
 petitpal/macos/Runner/Configs/Debug.xcconfig  |    4 +-
 .../macos/Runner/Configs/Release.xcconfig     |    4 +-
 .../macos/Runner/Configs/Warnings.xcconfig    |   26 +-
 .../macos/Runner/DebugProfile.entitlements    |   24 +-
 petitpal/macos/Runner/Info.plist              |   64 +-
 petitpal/macos/Runner/MainFlutterWindow.swift |   30 +-
 petitpal/macos/Runner/Release.entitlements    |   16 +-
 petitpal/macos/RunnerTests/RunnerTests.swift  |   24 +-
 petitpal/pubspec.yaml                         |   60 +-
 petitpal/web/index.html                       |   76 +-
 petitpal/web/manifest.json                    |   70 +-
 petitpal/windows/.gitignore                   |   34 +-
 petitpal/windows/CMakeLists.txt               |  216 +-
 petitpal/windows/flutter/CMakeLists.txt       |  218 +-
 petitpal/windows/runner/CMakeLists.txt        |   80 +-
 petitpal/windows/runner/Runner.rc             |  242 +-
 petitpal/windows/runner/flutter_window.cpp    |  142 +-
 petitpal/windows/runner/flutter_window.h      |   66 +-
 petitpal/windows/runner/main.cpp              |   86 +-
 petitpal/windows/runner/resource.h            |   32 +-
 petitpal/windows/runner/runner.exe.manifest   |   28 +-
 petitpal/windows/runner/utils.cpp             |  130 +-
 petitpal/windows/runner/utils.h               |   38 +-
 petitpal/windows/runner/win32_window.cpp      |  576 ++---
 petitpal/windows/runner/win32_window.h        |  204 +-
 run.sh                                        | 2056 +++++++++++++++++
 scripts/compat_check.sh                       |    1 +
 170 files changed, 11576 insertions(+), 10499 deletions(-)
 create mode 100644 BUILD_CONFIG.md
 create mode 100644 README.md
 create mode 100644 create_petitpal_mvp.sh
 create mode 100644 docs/PetitPal_API_Spec.md
 create mode 100644 docs/README_B1.md
 create mode 100644 docs/README_B1_1.md
 create mode 100644 docs/README_MVP.md
 create mode 100644 docs/TROUBLESHOOTING.md
 create mode 100644 petitpal/android/app/proguard-rules.pro
 create mode 100644 petitpal/lib/app_router.dart
 create mode 100644 petitpal/lib/firebase_options_stub.dart
 create mode 100644 petitpal/lib/src/analytics/analytics_events.dart
 create mode 100644 petitpal/lib/src/family/accept_invite_screen.dart
 create mode 100644 petitpal/lib/src/family/family_dashboard_screen.dart
 create mode 100644 petitpal/lib/src/family/family_hub_screen.dart
 create mode 100644 petitpal/lib/src/family/family_member_card.dart
 create mode 100644 petitpal/lib/src/family/invite_screen.dart
 create mode 100644 petitpal/lib/src/providers/provider_setup_screen.dart
 create mode 100644 petitpal/lib/src/providers/providers.dart
 create mode 100644 petitpal/lib/src/voice/voice_controller.dart
 create mode 100644 run.sh
 create mode 100644 scripts/compat_check.sh

diff --git a/.gitignore b/.gitignore
index 84f41ff..de5d835 100644
--- a/.gitignore
+++ b/.gitignore
@@ -1,70 +1,70 @@
-# ========================
-# Flutter & Dart
-# ========================
-**/build/
-**/.dart_tool/
-**/.flutter-plugins
-**/.flutter-plugins-dependencies
-**/.packages
-**/pubspec.lock
-**/.idea/
-**/.vscode/
-
-# ========================
-# Android
-# ========================
-**/android/.gradle/
-**/android/captures/
-**/android/local.properties
-**/android/key.properties
-**/android/app/google-services.json
-
-# ========================
-# iOS
-# ========================
-**/ios/Pods/
-**/ios/Runner/GoogleService-Info.plist
-**/ios/Flutter/Flutter.framework
-**/ios/Flutter/Flutter.podspec
-
-# ========================
-# Cloudflare Worker
-# ========================
-cloudflare-worker/.wrangler/
-cloudflare-worker/.dev.vars
-cloudflare-worker/.env
-cloudflare-worker/.env.local
-cloudflare-worker/.env.production
-cloudflare-worker/.env.*
-cloudflare-worker/node_modules/
-cloudflare-worker/dist/
-cloudflare-worker/wrangler.toml # may contain account IDs or bindings in prod
-
-# ========================
-# Sensitive Config
-# ========================
-*.env
-*.env.*
-**/lib/config/internal_config.dart
-**/lib/config/secrets.dart
-**/keystore.*
-**/keys_backup.json
-sentry.properties
-
-# ========================
-# Logs & OS Files
-# ========================
-*.log
-.DS_Store
-Thumbs.db
-
-# ========================
-# Generated Docs/Builds
-# ========================
-docs/generated/
-
-# ========================
-# Generated PDFs (keep if only safe diagrams/text)
-# ========================
-docs/*.pdf
-!docs/TECHNICAL_IMPLEMENTATION.pdf  # safe to commit (template-based, no secrets)
+# ========================
+# Flutter & Dart
+# ========================
+**/build/
+**/.dart_tool/
+**/.flutter-plugins
+**/.flutter-plugins-dependencies
+**/.packages
+**/pubspec.lock
+**/.idea/
+**/.vscode/
+
+# ========================
+# Android
+# ========================
+**/android/.gradle/
+**/android/captures/
+**/android/local.properties
+**/android/key.properties
+**/android/app/google-services.json
+
+# ========================
+# iOS
+# ========================
+**/ios/Pods/
+**/ios/Runner/GoogleService-Info.plist
+**/ios/Flutter/Flutter.framework
+**/ios/Flutter/Flutter.podspec
+
+# ========================
+# Cloudflare Worker
+# ========================
+cloudflare-worker/.wrangler/
+cloudflare-worker/.dev.vars
+cloudflare-worker/.env
+cloudflare-worker/.env.local
+cloudflare-worker/.env.production
+cloudflare-worker/.env.*
+cloudflare-worker/node_modules/
+cloudflare-worker/dist/
+cloudflare-worker/wrangler.toml # may contain account IDs or bindings in prod
+
+# ========================
+# Sensitive Config
+# ========================
+*.env
+*.env.*
+**/lib/config/internal_config.dart
+**/lib/config/secrets.dart
+**/keystore.*
+**/keys_backup.json
+sentry.properties
+
+# ========================
+# Logs & OS Files
+# ========================
+*.log
+.DS_Store
+Thumbs.db
+
+# ========================
+# Generated Docs/Builds
+# ========================
+docs/generated/
+
+# ========================
+# Generated PDFs (keep if only safe diagrams/text)
+# ========================
+docs/*.pdf
+!docs/TECHNICAL_IMPLEMENTATION.pdf  # safe to commit (template-based, no secrets)
diff --git a/BUILD_CONFIG.md b/BUILD_CONFIG.md
new file mode 100644
index 0000000..d9b6e38
--- /dev/null
+++ b/BUILD_CONFIG.md
@@ -0,0 +1 @@
+'"$@"'
diff --git a/README.md b/README.md
new file mode 100644
index 0000000..d9b6e38
--- /dev/null
+++ b/README.md
@@ -0,0 +1 @@
+'"$@"'
diff --git a/cloudflare-worker/worker.js b/cloudflare-worker/worker.js
index 136d615..d9b6e38 100644
--- a/cloudflare-worker/worker.js
+++ b/cloudflare-worker/worker.js
@@ -1,272 +1 @@
-/**
- * PetitPal Cloudflare Worker (MVP)
- * Endpoints:
- *  - GET  /health
- *  - POST /api/keys/save
- *  - GET  /api/keys/get
- *  - POST /api/chat
- *  - POST /api/family/create_invite
- *  - POST /api/family/accept_invite
- *  - GET  /api/family/list
- *
- * Storage keys (KV):
- *  - keys:{deviceId}      -> encrypted backup blob (ciphertext/nonce/salt...)
- *  - family:{familyId}    -> { members: [{device_id, name}], owner_device_id, created_at }
- *  - invites:{token}      -> { family_id, member_name, issued_at }
- *
- * NOTE: This Worker expects encrypted key backups for persistence. For live /api/chat calls,
- * pass the needed provider key in the request body under "live_keys" (temporary in-MVP path).
- * This avoids the Worker needing to decrypt at rest. Do NOT log these keys. They are NOT stored.
- */
-
-export default {
-  async fetch(request, env, ctx) {
-    const url = new URL(request.url);
-    const corsHeaders = {
-      "Access-Control-Allow-Origin": "*",
-      "Access-Control-Allow-Headers": "Content-Type, X-Device-ID, X-Family-ID",
-      "Access-Control-Allow-Methods": "GET, POST, OPTIONS"
-    };
-    if (request.method === "OPTIONS") {
-      return new Response(null, { headers: corsHeaders });
-    }
-
-    try {
-      if (url.pathname === "/health" && request.method === "GET") {
-        return json({ ok: true, version: "1.0.0" }, corsHeaders);
-      }
-
-      if (url.pathname === "/api/keys/save" && request.method === "POST") {
-        const deviceId = request.headers.get("X-Device-ID");
-        if (!deviceId) return badRequest("Missing X-Device-ID", corsHeaders);
-        const body = await request.json();
-        if (!body) return badRequest("Missing body", corsHeaders);
-
-        // Prefer encrypted payload shape
-        if (body.ciphertext && body.nonce && body.salt) {
-          await env["petitpal-kv"].put(`keys:${deviceId}`, JSON.stringify(body));
-          return json({ stored: true, key: `keys:${deviceId}` }, corsHeaders);
-        }
-
-        // Legacy/plain (discouraged) — still accepted to unblock migrations
-        if (body.keys && typeof body.keys === "object") {
-          const legacy = { keys: body.keys, created_at: new Date().toISOString() };
-          await env["petitpal-kv"].put(`keys:${deviceId}`, JSON.stringify(legacy));
-          return json({ stored: true, key: `keys:${deviceId}`, legacy: true }, corsHeaders);
-        }
-
-        return badRequest("Invalid payload", corsHeaders);
-      }
-
-      if (url.pathname === "/api/keys/get" && request.method === "GET") {
-        const deviceId = request.headers.get("X-Device-ID");
-        if (!deviceId) return badRequest("Missing X-Device-ID", corsHeaders);
-        const val = await env["petitpal-kv"].get(`keys:${deviceId}`);
-        if (!val) return notFound("No backup found", corsHeaders);
-        return new Response(val, { headers: { "Content-Type": "application/json", ...corsHeaders } });
-      }
-
-      if (url.pathname === "/api/family/create_invite" && request.method === "POST") {
-        const deviceId = request.headers.get("X-Device-ID");
-        if (!deviceId) return badRequest("Missing X-Device-ID", corsHeaders);
-        const { member_name } = await request.json();
-        if (!member_name) return badRequest("member_name required", corsHeaders);
-
-        // Create or reuse a family for this device
-        const familyId = cryptoRandomId(10);
-        const inviteToken = cryptoRandomId(16);
-
-        // Persist family record
-        const familyKey = `family:${familyId}`;
-        const familyObj = {
-          owner_device_id: deviceId,
-          created_at: new Date().toISOString(),
-          members: [{ device_id: deviceId, name: "Owner" }]
-        };
-        await env["petitpal-kv"].put(familyKey, JSON.stringify(familyObj));
-
-        // Persist invite
-        const inviteKey = `invites:${inviteToken}`;
-        const inviteObj = {
-          family_id: familyId,
-          member_name,
-          issued_at: new Date().toISOString()
-        };
-        await env["petitpal-kv"].put(inviteKey, JSON.stringify(inviteObj), { expirationTtl: 60 * 60 * 24 * 7 }); // 7 days
-
-        const deeplink = `petitpal://invite/${familyId}/${encodeURIComponent(member_name)}`;
-        return json({ family_id: familyId, invite_token: inviteToken, deeplink }, corsHeaders);
-      }
-
-      if (url.pathname === "/api/family/accept_invite" && request.method === "POST") {
-        const deviceId = request.headers.get("X-Device-ID");
-        if (!deviceId) return badRequest("Missing X-Device-ID", corsHeaders);
-        const { invite_token } = await request.json();
-        if (!invite_token) return badRequest("invite_token required", corsHeaders);
-
-        const inviteKey = `invites:${invite_token}`;
-        const inviteRaw = await env["petitpal-kv"].get(inviteKey);
-        if (!inviteRaw) return notFound("Invite not found or expired", corsHeaders);
-        const invite = JSON.parse(inviteRaw);
-
-        const familyKey = `family:${invite.family_id}`;
-        const famRaw = await env["petitpal-kv"].get(familyKey);
-        let family = famRaw ? JSON.parse(famRaw) : { created_at: new Date().toISOString(), members: [] };
-        // Avoid duplicates
-        if (!family.members.find(m => m.device_id === deviceId)) {
-          family.members.push({ device_id: deviceId, name: invite.member_name || "Member" });
-        }
-        await env["petitpal-kv"].put(familyKey, JSON.stringify(family));
-        // Optionally consume invite (delete)
-        await env["petitpal-kv"].delete(inviteKey);
-
-        return json({ family_id: invite.family_id, member_name: invite.member_name }, corsHeaders);
-      }
-
-      if (url.pathname === "/api/family/list" && request.method === "GET") {
-        const familyId = request.headers.get("X-Family-ID");
-        if (!familyId) return badRequest("Missing X-Family-ID", corsHeaders);
-        const famRaw = await env["petitpal-kv"].get(`family:${familyId}`);
-        if (!famRaw) return notFound("Family not found", corsHeaders);
-        return new Response(famRaw, { headers: { "Content-Type": "application/json", ...corsHeaders } });
-      }
-
-      if (url.pathname === "/api/chat" && request.method === "POST") {
-        const deviceId = request.headers.get("X-Device-ID");
-        if (!deviceId) return badRequest("Missing X-Device-ID", corsHeaders);
-        const { text, provider_hint = null, live_keys = {} } = await request.json();
-        if (!text || typeof text !== "string") return badRequest("text required", corsHeaders);
-
-        const { model, reason } = pickModel(text, provider_hint);
-        const start = Date.now();
-        const { ok, responseText, error } = await callProvider(model, text, live_keys);
-        const duration_ms = Date.now() - start;
-
-        if (!ok) {
-          return new Response(JSON.stringify({ error: error || "Provider error" }), {
-            status: 500,
-            headers: { "Content-Type": "application/json", ...corsHeaders }
-          });
-        }
-
-        // naive summary: first 2 sentences or first 180 chars
-        const summary_tts = summarizeForTTS(responseText);
-        const body = {
-          model_used: model,
-          auto_switched: provider_hint ? provider_hint !== model : true,
-          reason,
-          summary_tts,
-          text: responseText,
-          duration_ms,
-          telemetry_id: cryptoRandomId(8)
-        };
-        return json(body, corsHeaders);
-      }
-
-      return new Response("Not Found", { status: 404, headers: corsHeaders });
-    } catch (e) {
-      return new Response(JSON.stringify({ error: e.message || "Unhandled error" }), {
-        status: 500,
-        headers: { "Content-Type": "application/json", ...corsHeaders }
-      });
-    }
-  }
-};
-
-function json(obj, headers={}) { return new Response(JSON.stringify(obj), { headers: { "Content-Type": "application/json", ...headers }}); }
-function badRequest(msg, headers) { return new Response(JSON.stringify({ error: msg }), { status: 400, headers: { "Content-Type": "application/json", ...headers }}); }
-function notFound(msg, headers) { return new Response(JSON.stringify({ error: msg }), { status: 404, headers: { "Content-Type": "application/json", ...headers }}); }
-
-function cryptoRandomId(len=8) {
-  const alphabet = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";
-  let s = "";
-  const arr = new Uint8Array(len);
-  crypto.getRandomValues(arr);
-  for (let i=0;i<len;i++){ s += alphabet[arr[i] % alphabet.length]; }
-  return s;
-}
-
-function pickModel(text, provider_hint) {
-  if (provider_hint) return { model: provider_hint, reason: "hint" };
-  const t = text.toLowerCase();
-  const isNews = /(news|happening|current|today|latest|recent)/.test(t);
-  const isHowTo = /(how to|how do|step by step|instructions|guide)/.test(t);
-  const isQuick = /(what is|define|quick|brief)/.test(t);
-  const isChat = /(i'm feeling|think|believe|opinion|chat)/.test(t);
-
-  if (isNews)   return { model: "grok", reason: "news" };
-  if (isHowTo)  return { model: "deepseek", reason: "how_to" };
-  if (isQuick)  return { model: "gemini", reason: "quick" };
-  if (isChat)   return { model: "openai", reason: "conversation" };
-  return { model: "openai", reason: "default" };
-}
-
-async function callProvider(model, text, live_keys) {
-  try {
-    if (model === "openai") {
-      const key = live_keys.openai;
-      if (!key) return { ok: false, error: "Missing OpenAI key in live_keys.openai" };
-      const r = await fetch("https://api.openai.com/v1/chat/completions", {
-        method: "POST",
-        headers: { "Content-Type": "application/json", "Authorization": `Bearer ${key}` },
-        body: JSON.stringify({ model: "gpt-4o-mini", messages: [{ role:"user", content: text }] })
-      });
-      if (!r.ok) return { ok: false, error: `OpenAI ${r.status}` };
-      const j = await r.json();
-      const responseText = j.choices?.[0]?.message?.content || "";
-      return { ok: true, responseText };
-    }
-    if (model === "gemini") {
-      const key = live_keys.gemini;
-      if (!key) return { ok: false, error: "Missing Gemini key in live_keys.gemini" };
-      const r = await fetch(`https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash:generateContent?key=${key}`, {
-        method: "POST",
-        headers: { "Content-Type": "application/json" },
-        body: JSON.stringify({ contents: [{ parts: [{ text }]}]})
-      });
-      if (!r.ok) return { ok: false, error: `Gemini ${r.status}` };
-      const j = await r.json();
-      const responseText = j.candidates?.[0]?.content?.parts?.map(p=>p.text).join("\n") || "";
-      return { ok: true, responseText };
-    }
-    if (model === "grok") {
-      const key = live_keys.grok;
-      if (!key) return { ok: false, error: "Missing Grok key in live_keys.grok" };
-      const r = await fetch("https://api.x.ai/v1/chat/completions", {
-        method: "POST",
-        headers: { "Content-Type": "application/json", "Authorization": `Bearer ${key}` },
-        body: JSON.stringify({ model: "grok-2-mini", messages: [{ role:"user", content: text }] })
-      });
-      if (!r.ok) return { ok: false, error: `Grok ${r.status}` };
-      const j = await r.json();
-      const responseText = j.choices?.[0]?.message?.content || "";
-      return { ok: true, responseText };
-    }
-    if (model === "deepseek") {
-      const key = live_keys.deepseek;
-      if (!key) return { ok: false, error: "Missing DeepSeek key in live_keys.deepseek" };
-      const r = await fetch("https://api.deepseek.com/chat/completions", {
-        method: "POST",
-        headers: { "Content-Type": "application/json", "Authorization": `Bearer ${key}` },
-        body: JSON.stringify({ model: "deepseek-chat", messages: [{ role:"user", content: text }] })
-      });
-      if (!r.ok) return { ok: false, error: `DeepSeek ${r.status}` };
-      const j = await r.json();
-      const responseText = j.choices?.[0]?.message?.content || "";
-      return { ok: true, responseText };
-    }
-    return { ok: false, error: "Unknown model" };
-  } catch (e) {
-    return { ok: false, error: e.message || "network" };
-  }
-}
-
-function summarizeForTTS(s) {
-  try {
-    const end = s.indexOf(".", 0);
-    if (end > 180 || end === -1) return (s.length > 180 ? s.slice(0, 180) + "…" : s);
-    const end2 = s.indexOf(".", end+1);
-    const cut = end2 !== -1 ? end2+1 : end+1;
-    return s.slice(0, cut);
-  } catch { return s.slice(0, 180); }
-}
+'"$@"'
diff --git a/cloudflare-worker/wrangler.toml b/cloudflare-worker/wrangler.toml
index debcaf9..d9b6e38 100644
--- a/cloudflare-worker/wrangler.toml
+++ b/cloudflare-worker/wrangler.toml
@@ -1,13 +1 @@
-name = "petitpal-api"
-main = "worker.js"
-compatibility_date = "2024-12-01"
-
-kv_namespaces = [
-  { binding = "petitpal-kv", id = "00000000000000000000000000000000", preview_id = "11111111111111111111111111111111" }
-]
-
-[vars]
-# Feature flags can go here
-
-[observability]
-enabled = true
+'"$@"'
diff --git a/create_petitpal_mvp.sh b/create_petitpal_mvp.sh
new file mode 100644
index 0000000..93ea72a
--- /dev/null
+++ b/create_petitpal_mvp.sh
@@ -0,0 +1,2056 @@
+#!/usr/bin/env bash
+set -euo pipefail
+
+# PetitPal MVP - complete project generator
+# Creates:
+#   /petitpal_mvp/
+#       petitpal/                 # Flutter app
+#       cloudflare-worker/        # Worker backend + KV
+#       docs/                     # Setup & API docs, troubleshooting
+#       scripts/compat_check.sh   # Quick env sanity checker
+#   petitpal_mvp.zip              # Full zip archive
+#   petitpal_mvp.patch            # Git patch of all files
+
+ROOT="$(pwd)"
+APP="$ROOT/petitpal"
+WKR="$ROOT/cloudflare-worker"
+DOCS="$ROOT/docs"
+SCRIPTS="$ROOT/scripts"
+
+mkdir -p "$APP" "$WKR" "$DOCS" "$SCRIPTS"
+
+w() { # write a file from heredoc
+  local file="$1"; shift
+  mkdir -p "$(dirname "$file")"
+  cat > "$file" <<'EOF'
+'"$@"'
+EOF
+}
+
+wb() { # base64->binary file
+  local file="$1" b64="$2"
+  mkdir -p "$(dirname "$file")"
+  printf '%s' "$b64" | base64 -d > "$file"
+}
+
+# -----------------------------
+# Top-level README + BUILD CONFIG
+# -----------------------------
+w "$ROOT/README.md" '
+# PetitPal (MVP)
+
+Voice-first assistant for seniors (Android first). Backend: Cloudflare Worker + KV.
+This bundle includes:
+
+- **/petitpal** — Flutter app with Riverpod, go_router, STT/TTS, JSON-driven themes/onboarding, secure key backup, QR invites, deep links, provider proxy via Worker.
+- **/cloudflare-worker** — Worker with complete MVP endpoints.
+- **/docs** — Setup guide, API spec, troubleshooting, deployment checklist.
+- **/scripts/compat_check.sh** — Environment sanity checker.
+
+Follow **docs/SETUP_GUIDE.md** to go from zero → working app in ~30 minutes.
+'
+
+w "$ROOT/BUILD_CONFIG.md" '
+# BUILD_CONFIG.md
+
+**Recommended, known-good versions**
+
+- Flutter SDK: 3.22.2 (stable)
+- Dart: 3.3.x
+- Android Gradle Plugin (AGP): 8.4.2
+- Kotlin: 1.9.24
+- Android SDK: 35
+- minSdk: 24
+- NDK: 27.0.12077973
+- JDK: 17
+
+These combinations are tested to build cleanly for this project.
+'
+
+# -----------------------------
+# Flutter app: pubspec + analysis options
+# -----------------------------
+w "$APP/pubspec.yaml" '
+name: petitpal
+description: Voice-first assistant for seniors. Flutter + Riverpod + Cloudflare Worker backend.
+publish_to: "none"
+version: 0.5.0+5
+
+environment:
+  sdk: ">=3.3.0 <4.0.0"
+
+dependencies:
+  flutter:
+    sdk: flutter
+  flutter_riverpod: ^2.5.1
+  go_router: ^14.2.3
+  http: ^1.2.2
+  shared_preferences: ^2.2.3
+  flutter_secure_storage: ^9.2.2
+  speech_to_text: ^6.6.2
+  flutter_tts: ^4.0.2
+  uuid: ^4.4.0
+  qr_flutter: ^4.1.0
+  mobile_scanner: ^6.0.2
+  uni_links: ^0.5.1
+  url_launcher: ^6.3.0
+  cryptography: ^2.7.0
+  connectivity_plus: ^6.1.0
+  package_info_plus: ^8.0.2
+
+  # Firebase (integrated but disabled by default; safe if google-services.json not present)
+  firebase_core: ^3.4.1
+  firebase_analytics: ^11.3.0
+  firebase_crashlytics: ^4.1.3
+
+dev_dependencies:
+  flutter_test:
+    sdk: flutter
+  flutter_lints: ^3.0.2
+
+flutter:
+  uses-material-design: true
+  assets:
+    - assets/themes/themes.json
+    - assets/themes/theme_voice_descriptions.json
+    - assets/config/onboarding.json
+    - assets/config/provider_setup.json
+'
+
+w "$APP/analysis_options.yaml" '
+include: package:flutter_lints/flutter.yaml
+linter:
+  rules:
+    prefer_final_locals: true
+    avoid_redundant_argument_values: true
+    avoid_print: true
+'
+
+# -----------------------------
+# Flutter app: lib/config
+# -----------------------------
+mkdir -p "$APP/lib/config"
+
+w "$APP/lib/config/internal_config.dart" '
+// Single source of truth for launch toggles and URLs.
+class InternalConfig {
+  InternalConfig._();
+
+  // Base URL of your Cloudflare Worker backend
+  static const String workerBaseUrl = "https://petitpal-api.kristyc.workers.dev";
+
+  // Analytics & diagnostics (off by default until you drop google-services.json)
+  static const bool analyticsEnabled = false;
+  static const bool crashlyticsEnabled = false;
+  static const bool sentryEnabled = false;
+
+  // Motion and accessibility defaults
+  static const bool premiumMotionDefault = true;
+
+  // Security headers
+  static const String appUserAgent = "PetitPal/0.5.0 (Flutter)";
+}
+'
+
+w "$APP/lib/config/launch_config.dart" '
+// Flip these when preparing for production launch.
+class LaunchConfig {
+  LaunchConfig._();
+
+  // Set to true when you are launching to production and have Firebase configured.
+  static const bool LAUNCH_MODE = false;
+
+  static const bool analytics => LAUNCH_MODE ? true : false;
+  static const bool crashlytics => LAUNCH_MODE ? true : false;
+  static const bool sentry => LAUNCH_MODE ? true : false;
+}
+'
+
+w "$APP/lib/config/strings_config.dart" '
+// Centralized strings so a non-developer can change copy without hunting in widgets.
+class StringsConfig {
+  StringsConfig._();
+
+  static const appName = "PetitPal";
+
+  static const voiceScreenTitle = "Ask PetitPal";
+  static const tapMicToSpeak = "Tap the mic and speak";
+  static const listening = "Listening…";
+  static const processing = "Thinking…";
+  static const speaking = "Speaking…";
+
+  static const setupTitle = "Set up your keys";
+  static const setupBody = "Enter at least one provider key so PetitPal can answer your questions.";
+  static const save = "Save";
+  static const test = "Test";
+  static const openai = "OpenAI";
+  static const gemini = "Gemini";
+  static const grok = "Grok";
+  static const deepseek = "DeepSeek";
+
+  static const family = "Family";
+  static const inviteFamily = "Invite Family Member";
+  static const acceptInvite = "Accept Invite";
+  static const scanQr = "Scan QR";
+  static const showQr = "Show QR";
+  static const yourName = "Your Name";
+
+  static const onboardingTitle = "Welcome to PetitPal";
+  static const onboardingNext = "Next";
+  static const startUsingApp = "Start using PetitPal";
+}
+'
+
+w "$APP/lib/config/api_config.dart" '
+// API routes, headers, and timeouts.
+class ApiConfig {
+  ApiConfig._();
+  static const healthPath = "/health";
+  static const keysSavePath = "/api/keys/save";
+  static const keysGetPath = "/api/keys/get";
+  static const chatPath = "/api/chat";
+  static const familyCreateInvitePath = "/api/family/create_invite";
+  static const familyAcceptInvitePath = "/api/family/accept_invite";
+  static const familyListPath = "/api/family/list";
+
+  static const requestTimeoutSeconds = 30;
+}
+'
+
+# -----------------------------
+# Flutter app: analytics
+# -----------------------------
+mkdir -p "$APP/lib/src/analytics"
+
+w "$APP/lib/src/analytics/events.dart" '
+// Canonical event names and parameters to avoid typos.
+class AnalyticsEvents {
+  AnalyticsEvents._();
+
+  static const appFirstOpen = "app_first_open";
+  static const themeSelected = "theme_selected";
+  static const setupCompleted = "setup_completed";
+
+  static const voiceActivationStarted = "voice_activation_started";
+  static const questionAsked = "question_asked";
+  static const ttsSpoken = "tts_spoken";
+  static const interactionCompleted = "interaction_completed";
+
+  static const providerRequestFailed = "provider_request_failed";
+  static const backendCallResult = "backend_call_result";
+
+  static const familyInviteCreated = "family_invite_created";
+  static const familyInviteJoined = "family_invite_joined";
+}
+'
+
+w "$APP/lib/src/analytics/analytics.dart" '
+import "package:firebase_analytics/firebase_analytics.dart";
+import "package:firebase_core/firebase_core.dart";
+import "package:firebase_crashlytics/firebase_crashlytics.dart";
+import "../../config/launch_config.dart";
+
+class AppAnalytics {
+  AppAnalytics._();
+  static FirebaseAnalytics? _analytics;
+
+  static Future<void> init() async {
+    if (!LaunchConfig.analytics && !LaunchConfig.crashlytics) {
+      return;
+    }
+    await Firebase.initializeApp();
+    if (LaunchConfig.analytics) {
+      _analytics = FirebaseAnalytics.instance;
+    }
+    if (LaunchConfig.crashlytics) {
+      FlutterError.onError = FirebaseCrashlytics.instance.recordFlutterFatalError;
+    }
+  }
+
+  static Future<void> log(String name, [Map<String, Object?>? params]) async {
+    final a = _analytics;
+    if (a == null || !LaunchConfig.analytics) return;
+    await a.logEvent(name: name, parameters: params);
+  }
+}
+'
+
+# -----------------------------
+# Flutter app: security (AES-GCM + PBKDF2)
+# -----------------------------
+mkdir -p "$APP/lib/src/security"
+
+w "$APP/lib/src/security/keystore.dart" '
+import "dart:convert";
+import "dart:math";
+import "package:cryptography/cryptography.dart";
+
+class Keystore {
+  Keystore._();
+
+  static const int _pbkdf2Iterations = 500000;
+  static const int _saltLength = 16;
+  static const int _nonceLength = 12;
+
+  static Future<Map<String, dynamic>> encrypt(String password, Map<String, String> data) async {
+    final secretKey = await _deriveKey(password);
+    final algorithm = AesGcm.with256bits();
+    final nonce = _randomBytes(_nonceLength);
+    final message = utf8.encode(jsonEncode(data));
+    final secretBox = await algorithm.encrypt(message, secretKey: secretKey, nonce: nonce);
+    return {
+      "ciphertext": base64Encode(secretBox.cipherText),
+      "nonce": base64Encode(nonce),
+      "salt": base64Encode(_lastSalt),
+      "algo": "AES-GCM-256",
+      "kdf": "PBKDF2-HMAC-SHA256",
+      "iterations": _pbkdf2Iterations,
+      "created_at": DateTime.now().toUtc().toIso8601String(),
+    };
+  }
+
+  static Future<Map<String, String>> decrypt(String password, Map<String, dynamic> payload) async {
+    final secretKey = await _deriveKey(password, saltOverride: base64Decode(payload["salt"] as String));
+    final algorithm = AesGcm.with256bits();
+    final nonce = base64Decode(payload["nonce"] as String);
+    final cipherText = base64Decode(payload["ciphertext"] as String);
+    final box = SecretBox(cipherText, nonce: nonce, mac: Mac.empty);
+    final clear = await algorithm.decrypt(box, secretKey: secretKey);
+    final map = jsonDecode(utf8.decode(clear)) as Map<String, dynamic>;
+    return map.map((k, v) => MapEntry(k, v.toString()));
+  }
+
+  static late List<int> _lastSalt;
+
+  static Future<SecretKey> _deriveKey(String password, {List<int>? saltOverride}) async {
+    final pbkdf2 = Pbkdf2(
+      macAlgorithm: Hmac.sha256(),
+      iterations: _pbkdf2Iterations,
+      bits: 256,
+    );
+    _lastSalt = saltOverride ?? _randomBytes(_saltLength);
+    final secretKey = await pbkdf2.deriveKey(
+      secretKey: SecretKey(utf8.encode(password)),
+      nonce: _lastSalt,
+    );
+    return secretKey;
+  }
+
+  static List<int> _randomBytes(int length) {
+    final rnd = Random.secure();
+    return List<int>.generate(length, (_) => rnd.nextInt(256));
+  }
+}
+'
+
+# -----------------------------
+# Flutter app: Worker API client
+# -----------------------------
+w "$APP/lib/src/worker_api.dart" '
+import "dart:convert";
+import "package:http/http.dart" as http;
+import "package:uuid/uuid.dart";
+import "../config/internal_config.dart";
+import "../config/api_config.dart";
+
+class WorkerApi {
+  WorkerApi({http.Client? client}) : _client = client ?? http.Client();
+
+  final http.Client _client;
+  static final _uuid = const Uuid();
+
+  Future<Map<String, dynamic>> health() async {
+    final uri = Uri.parse(InternalConfig.workerBaseUrl + ApiConfig.healthPath);
+    final res = await _client.get(uri, headers: _headers());
+    _ensureOk(res);
+    return jsonDecode(res.body) as Map<String, dynamic>;
+  }
+
+  Future<void> saveEncryptedKeys(String deviceId, Map<String, dynamic> encrypted) async {
+    final uri = Uri.parse(InternalConfig.workerBaseUrl + ApiConfig.keysSavePath);
+    final res = await _client.post(uri, headers: _headers(extra: {"X-Device-ID": deviceId}), body: jsonEncode(encrypted));
+    _ensureOk(res);
+  }
+
+  Future<Map<String, dynamic>> chat({
+    required String deviceId,
+    required String text,
+    required String provider,
+    required String providerKey,
+    bool familyContext = false,
+  }) async {
+    final uri = Uri.parse(InternalConfig.workerBaseUrl + ApiConfig.chatPath);
+    final res = await _client.post(
+      uri,
+      headers: _headers(extra: {"X-Device-ID": deviceId}),
+      body: jsonEncode({
+        "text": text,
+        "provider_hint": provider,
+        "provider_key": providerKey,
+        "family_context": familyContext,
+      }),
+    );
+    _ensureOk(res);
+    return jsonDecode(res.body) as Map<String, dynamic>;
+  }
+
+  Future<Map<String, dynamic>> createInvite({required String deviceId, required String memberName}) async {
+    final uri = Uri.parse(InternalConfig.workerBaseUrl + ApiConfig.familyCreateInvitePath);
+    final res = await _client.post(
+      uri,
+      headers: _headers(extra: {"X-Device-ID": deviceId}),
+      body: jsonEncode({"member_name": memberName}),
+    );
+    _ensureOk(res);
+    return jsonDecode(res.body) as Map<String, dynamic>;
+  }
+
+  Future<Map<String, dynamic>> acceptInvite({required String deviceId, required String inviteToken}) async {
+    final uri = Uri.parse(InternalConfig.workerBaseUrl + ApiConfig.familyAcceptInvitePath);
+    final res = await _client.post(
+      uri,
+      headers: _headers(extra: {"X-Device-ID": deviceId}),
+      body: jsonEncode({"invite_token": inviteToken}),
+    );
+    _ensureOk(res);
+    return jsonDecode(res.body) as Map<String, dynamic>;
+  }
+
+  Future<Map<String, dynamic>> listFamily({required String familyId}) async {
+    final uri = Uri.parse(InternalConfig.workerBaseUrl + ApiConfig.familyListPath);
+    final res = await _client.get(
+      uri,
+      headers: _headers(extra: {"X-Family-ID": familyId}),
+    );
+    _ensureOk(res);
+    return jsonDecode(res.body) as Map<String, dynamic>;
+  }
+
+  Map<String, String> _headers({Map<String, String>? extra}) {
+    return {
+      "Content-Type": "application/json",
+      "Accept": "application/json",
+      "User-Agent": InternalConfig.appUserAgent,
+      if (extra != null) ...extra,
+    };
+  }
+
+  void _ensureOk(http.Response res) {
+    if (res.statusCode < 200 || res.statusCode >= 300) {
+      throw Exception("Backend error ${res.statusCode}: ${res.body}");
+    }
+  }
+}
+'
+
+# -----------------------------
+# Flutter app: providers & storage
+# -----------------------------
+mkdir -p "$APP/lib/src/providers"
+
+w "$APP/lib/src/providers/providers.dart" '
+import "package:flutter_riverpod/flutter_riverpod.dart";
+import "package:shared_preferences/shared_preferences.dart";
+import "package:flutter_secure_storage/flutter_secure_storage.dart";
+import "package:uuid/uuid.dart";
+
+final _prefsProvider = FutureProvider<SharedPreferences>((ref) async {
+  return SharedPreferences.getInstance();
+});
+
+final deviceIdProvider = FutureProvider<String>((ref) async {
+  const key = "device_id";
+  final prefs = await ref.watch(_prefsProvider.future);
+  var id = prefs.getString(key);
+  if (id == null || id.isEmpty) {
+    id = const Uuid().v4();
+    await prefs.setString(key, id);
+  }
+  return id;
+});
+
+final isFirstRunProvider = FutureProvider<bool>((ref) async {
+  final prefs = await ref.watch(_prefsProvider.future);
+  final seen = prefs.getBool("seen_onboarding") ?? false;
+  return !seen;
+});
+
+final secureStorageProvider = Provider<FlutterSecureStorage>((ref) {
+  return const FlutterSecureStorage();
+});
+
+class ProviderKeys {
+  final String? openai;
+  final String? gemini;
+  final String? grok;
+  final String? deepseek;
+  const ProviderKeys({this.openai, this.gemini, this.grok, this.deepseek});
+
+  Map<String, String> toMap() {
+    final m = <String, String>{};
+    if (openai != null && openai!.isNotEmpty) m["openai"] = openai!;
+    if (gemini != null && gemini!.isNotEmpty) m["gemini"] = gemini!;
+    if (grok != null && grok!.isNotEmpty) m["grok"] = grok!;
+    if (deepseek != null && deepseek!.isNotEmpty) m["deepseek"] = deepseek!;
+    return m;
+  }
+}
+
+final providerKeysProvider = FutureProvider<ProviderKeys>((ref) async {
+  final storage = ref.watch(secureStorageProvider);
+  final o = await storage.read(key: "key_openai");
+  final g = await storage.read(key: "key_gemini");
+  final x = await storage.read(key: "key_grok");
+  final d = await storage.read(key: "key_deepseek");
+  return ProviderKeys(openai: o, gemini: g, grok: x, deepseek: d);
+});
+'
+
+# -----------------------------
+# Flutter app: voice module
+# -----------------------------
+mkdir -p "$APP/lib/src/voice"
+
+w "$APP/lib/src/voice/voice_controller.dart" '
+import "package:flutter_riverpod/flutter_riverpod.dart";
+import "package:speech_to_text/speech_to_text.dart" as stt;
+import "package:flutter_tts/flutter_tts.dart";
+
+enum VoiceState { idle, listening, processing, speaking }
+
+class VoiceController extends StateNotifier<VoiceState> {
+  VoiceController() : super(VoiceState.idle) {
+    _stt = stt.SpeechToText();
+    _tts = FlutterTts();
+  }
+
+  late final stt.SpeechToText _stt;
+  late final FlutterTts _tts;
+  String _lastTranscript = "";
+
+  String get transcript => _lastTranscript;
+
+  Future<bool> initializeStt() async {
+    final available = await _stt.initialize();
+    return available;
+  }
+
+  Future<void> startListening(Function(String) onChange) async {
+    final ok = await initializeStt();
+    if (!ok) {
+      return;
+    }
+    state = VoiceState.listening;
+    _lastTranscript = "";
+    await _stt.listen(onResult: (r) {
+      _lastTranscript = r.recognizedWords;
+      onChange(_lastTranscript);
+    });
+  }
+
+  Future<void> stopListening() async {
+    await _stt.stop();
+    state = VoiceState.processing;
+  }
+
+  Future<void> speak(String text) async {
+    state = VoiceState.speaking;
+    await _tts.stop();
+    await _tts.speak(text);
+    state = VoiceState.idle;
+  }
+
+  void reset() {
+    state = VoiceState.idle;
+    _lastTranscript = "";
+  }
+}
+
+final voiceControllerProvider = StateNotifierProvider<VoiceController, VoiceState>((ref) {
+  return VoiceController();
+});
+'
+
+w "$APP/lib/src/voice/voice_screen.dart" '
+import "package:flutter/material.dart";
+import "package:flutter_riverpod/flutter_riverpod.dart";
+import "../../config/strings_config.dart";
+import "../providers/providers.dart";
+import "../worker_api.dart";
+import "voice_controller.dart";
+
+class VoiceScreen extends ConsumerStatefulWidget {
+  const VoiceScreen({super.key});
+  @override
+  ConsumerState<VoiceScreen> createState() => _VoiceScreenState();
+}
+
+class _VoiceScreenState extends ConsumerState<VoiceScreen> {
+  String _preview = "";
+  String _response = "";
+  String _provider = "openai";
+
+  @override
+  Widget build(BuildContext context) {
+    final state = ref.watch(voiceControllerProvider);
+    final controller = ref.read(voiceControllerProvider.notifier);
+
+    return Scaffold(
+      appBar: AppBar(title: const Text(StringsConfig.voiceScreenTitle)),
+      body: Padding(
+        padding: const EdgeInsets.all(16),
+        child: Column(
+          children: [
+            Row(
+              children: [
+                const Text("Provider:"),
+                const SizedBox(width: 8),
+                DropdownButton<String>(
+                  value: _provider,
+                  items: const [
+                    DropdownMenuItem(value: "openai", child: Text("OpenAI")),
+                    DropdownMenuItem(value: "gemini", child: Text("Gemini")),
+                    DropdownMenuItem(value: "grok", child: Text("Grok")),
+                    DropdownMenuItem(value: "deepseek", child: Text("DeepSeek")),
+                  ],
+                  onChanged: (v) {
+                    if (v != null) setState(() => _provider = v);
+                  },
+                )
+              ],
+            ),
+            const SizedBox(height: 8),
+            Container(
+              padding: const EdgeInsets.all(12),
+              decoration: BoxDecoration(
+                border: Border.all(color: Colors.grey.shade600, width: 1.5),
+                borderRadius: BorderRadius.circular(12),
+              ),
+              height: 120,
+              width: double.infinity,
+              alignment: Alignment.topLeft,
+              child: SingleChildScrollView(
+                child: Text(_preview.isEmpty ? StringsConfig.tapMicToSpeak : _preview),
+              ),
+            ),
+            const SizedBox(height: 12),
+            Expanded(
+              child: Container(
+                padding: const EdgeInsets.all(12),
+                width: double.infinity,
+                decoration: BoxDecoration(
+                  color: Theme.of(context).colorScheme.surfaceVariant,
+                  borderRadius: BorderRadius.circular(12),
+                ),
+                child: SingleChildScrollView(child: Text(_response)),
+              ),
+            ),
+            const SizedBox(height: 12),
+            Row(
+              mainAxisAlignment: MainAxisAlignment.spaceEvenly,
+              children: [
+                ElevatedButton.icon(
+                  onPressed: state == VoiceState.listening
+                      ? null
+                      : () async {
+                          await controller.startListening((s) {
+                            setState(() => _preview = s);
+                          });
+                        },
+                  icon: const Icon(Icons.mic),
+                  label: const Text("Start"),
+                ),
+                ElevatedButton.icon(
+                  onPressed: state == VoiceState.listening ? () => controller.stopListening() : null,
+                  icon: const Icon(Icons.stop),
+                  label: const Text("Stop"),
+                ),
+                ElevatedButton.icon(
+                  onPressed: () async {
+                    final deviceId = await ref.read(deviceIdProvider.future);
+                    final keys = await ref.read(providerKeysProvider.future);
+                    final keyMap = keys.toMap();
+                    final providerKey = keyMap[_provider];
+                    if (providerKey == null || providerKey.isEmpty) {
+                      if (mounted) {
+                        ScaffoldMessenger.of(context).showSnackBar(
+                          const SnackBar(content: Text("Please add a provider key first on the Setup screen.")),
+                        );
+                      }
+                      return;
+                    }
+                    final api = WorkerApi();
+                    try {
+                      final res = await api.chat(
+                        deviceId: deviceId,
+                        text: _preview,
+                        provider: _provider,
+                        providerKey: providerKey,
+                      );
+                      final text = (res["text"] ?? "").toString();
+                      setState(() => _response = text);
+                      await ref.read(voiceControllerProvider.notifier).speak(text);
+                    } catch (e) {
+                      if (mounted) {
+                        ScaffoldMessenger.of(context).showSnackBar(SnackBar(content: Text("Error: $e")));
+                      }
+                    }
+                  },
+                  icon: const Icon(Icons.send),
+                  label: const Text("Ask"),
+                ),
+              ],
+            ),
+          ],
+        ),
+      ),
+    );
+  }
+}
+'
+
+# -----------------------------
+# Flutter app: provider setup UI
+# -----------------------------
+w "$APP/lib/src/providers/provider_setup_screen.dart" '
+import "package:flutter/material.dart";
+import "package:flutter_riverpod/flutter_riverpod.dart";
+import "../../config/strings_config.dart";
+import "../providers/providers.dart";
+import "../security/keystore.dart";
+import "../worker_api.dart";
+
+class ProviderSetupScreen extends ConsumerStatefulWidget {
+  const ProviderSetupScreen({super.key});
+
+  @override
+  ConsumerState<ProviderSetupScreen> createState() => _ProviderSetupScreenState();
+}
+
+class _ProviderSetupScreenState extends ConsumerState<ProviderSetupScreen> {
+  final _openai = TextEditingController();
+  final _gemini = TextEditingController();
+  final _grok = TextEditingController();
+  final _deepseek = TextEditingController();
+  final _backupPass = TextEditingController();
+
+  @override
+  void dispose() {
+    _openai.dispose();
+    _gemini.dispose();
+    _grok.dispose();
+    _deepseek.dispose();
+    _backupPass.dispose();
+    super.dispose();
+  }
+
+  @override
+  Widget build(BuildContext context) {
+    return Scaffold(
+      appBar: AppBar(title: const Text("Provider Keys")),
+      body: ListView(
+        padding: const EdgeInsets.all(16),
+        children: [
+          Text(StringsConfig.setupBody),
+          const SizedBox(height: 12),
+          _field("OpenAI API Key", _openai, hint: "sk-..."),
+          _field("Gemini API Key", _gemini, hint: "AIza..."),
+          _field("Grok API Key", _grok, hint: "grok-..."),
+          _field("DeepSeek API Key", _deepseek, hint: "sk-..."),
+          const Divider(height: 24),
+          _field("Backup password (to encrypt keys)", _backupPass, hint: "A phrase only you know", obscure: true),
+          const SizedBox(height: 8),
+          FilledButton(
+            onPressed: () async {
+              final storage = ref.read(secureStorageProvider);
+              if (_openai.text.isNotEmpty) await storage.write(key: "key_openai", value: _openai.text.trim());
+              if (_gemini.text.isNotEmpty) await storage.write(key: "key_gemini", value: _gemini.text.trim());
+              if (_grok.text.isNotEmpty) await storage.write(key: "key_grok", value: _grok.text.trim());
+              if (_deepseek.text.isNotEmpty) await storage.write(key: "key_deepseek", value: _deepseek.text.trim());
+              if (mounted) {
+                ScaffoldMessenger.of(context).showSnackBar(const SnackBar(content: Text("Saved locally.")));
+              }
+              if (_backupPass.text.isNotEmpty) {
+                final keys = await ref.read(providerKeysProvider.future);
+                final encrypted = await Keystore.encrypt(_backupPass.text, keys.toMap());
+                final deviceId = await ref.read(deviceIdProvider.future);
+                await WorkerApi().saveEncryptedKeys(deviceId, encrypted);
+                if (mounted) {
+                  ScaffoldMessenger.of(context).showSnackBar(const SnackBar(content: Text("Encrypted backup uploaded.")));
+                }
+              }
+            },
+            child: const Text("Save & Backup"),
+          ),
+        ],
+      ),
+    );
+  }
+
+  Widget _field(String label, TextEditingController c, {String? hint, bool obscure = false}) {
+    return Padding(
+      padding: const EdgeInsets.only(bottom: 12),
+      child: TextField(
+        controller: c,
+        decoration: InputDecoration(labelText: label, hintText: hint),
+        obscureText: obscure,
+        enableSuggestions: !obscure,
+        autocorrect: !obscure,
+      ),
+    );
+  }
+}
+'
+
+# -----------------------------
+# Flutter app: family (QR invites + accept + list)
+# -----------------------------
+mkdir -p "$APP/lib/src/family"
+
+w "$APP/lib/src/family/invite_screen.dart" '
+import "package:flutter/material.dart";
+import "package:flutter_riverpod/flutter_riverpod.dart";
+import "package:qr_flutter/qr_flutter.dart";
+import "../providers/providers.dart";
+import "../worker_api.dart";
+
+class InviteScreen extends ConsumerStatefulWidget {
+  const InviteScreen({super.key});
+  @override
+  ConsumerState<InviteScreen> createState() => _InviteScreenState();
+}
+
+class _InviteScreenState extends ConsumerState<InviteScreen> {
+  String? _deeplink;
+  final _name = TextEditingController();
+
+  @override
+  Widget build(BuildContext context) {
+    return Scaffold(
+      appBar: AppBar(title: const Text("Invite Family Member")),
+      body: Padding(
+        padding: const EdgeInsets.all(16),
+        child: Column(
+          children: [
+            TextField(controller: _name, decoration: const InputDecoration(labelText: "Their name")),
+            const SizedBox(height: 12),
+            FilledButton(
+              onPressed: () async {
+                final deviceId = await ref.read(deviceIdProvider.future);
+                final res = await WorkerApi().createInvite(deviceId: deviceId, memberName: _name.text.trim().isEmpty ? "Member" : _name.text.trim());
+                setState(() => _deeplink = res["deeplink"]?.toString());
+              },
+              child: const Text("Create Invite"),
+            ),
+            const SizedBox(height: 12),
+            if (_deeplink != null)
+              Expanded(
+                child: Center(
+                  child: QrImageView(data: _deeplink!, size: 240),
+                ),
+              ),
+            if (_deeplink != null) SelectableText(_deeplink!),
+          ],
+        ),
+      ),
+    );
+  }
+}
+'
+
+w "$APP/lib/src/family/accept_invite_screen.dart" '
+import "package:flutter/material.dart";
+import "package:flutter_riverpod/flutter_riverpod.dart";
+import "package:mobile_scanner/mobile_scanner.dart";
+import "../providers/providers.dart";
+import "../worker_api.dart";
+
+class AcceptInviteScreen extends ConsumerStatefulWidget {
+  const AcceptInviteScreen({super.key});
+  @override
+  ConsumerState<AcceptInviteScreen> createState() => _AcceptInviteScreenState();
+}
+
+class _AcceptInviteScreenState extends ConsumerState<AcceptInviteScreen> {
+  String _status = "Scan a QR to join.";
+
+  @override
+  Widget build(BuildContext context) {
+    return Scaffold(
+      appBar: AppBar(title: const Text("Accept Invite")),
+      body: Column(
+        children: [
+          Expanded(
+            child: MobileScanner(
+              onDetect: (capture) async {
+                final barcode = capture.barcodes.first;
+                final raw = barcode.rawValue;
+                if (raw == null) return;
+                try {
+                  final uri = Uri.parse(raw);
+                  final token = uri.queryParameters["token"];
+                  if (token == null) return;
+                  final deviceId = await ref.read(deviceIdProvider.future);
+                  final res = await WorkerApi().acceptInvite(deviceId: deviceId, inviteToken: token);
+                  setState(() => _status = "Joined family ${res["family_id"]} as ${res["member_name"]}.");
+                } catch (_) {}
+              },
+            ),
+          ),
+          Padding(
+            padding: const EdgeInsets.all(16),
+            child: Text(_status),
+          )
+        ],
+      ),
+    );
+  }
+}
+'
+
+w "$APP/lib/src/family/family_dashboard_screen.dart" '
+import "package:flutter/material.dart";
+import "package:flutter_riverpod/flutter_riverpod.dart";
+import "../worker_api.dart";
+
+class FamilyDashboardScreen extends ConsumerStatefulWidget {
+  const FamilyDashboardScreen({super.key});
+  @override
+  ConsumerState<FamilyDashboardScreen> createState() => _FamilyDashboardScreenState();
+}
+
+class _FamilyDashboardScreenState extends ConsumerState<FamilyDashboardScreen> {
+  final _familyIdCtrl = TextEditingController();
+  List<Map<String, dynamic>> _members = [];
+
+  @override
+  Widget build(BuildContext context) {
+    return Scaffold(
+      appBar: AppBar(title: const Text("Family Members")),
+      body: Padding(
+        padding: const EdgeInsets.all(16),
+        child: Column(
+          children: [
+            TextField(controller: _familyIdCtrl, decoration: const InputDecoration(labelText: "Family ID")),
+            const SizedBox(height: 8),
+            FilledButton(
+              onPressed: () async {
+                final res = await WorkerApi().listFamily(familyId: _familyIdCtrl.text.trim());
+                final list = (res["members"] as List).cast<Map<String, dynamic>>();
+                setState(() => _members = list);
+              },
+              child: const Text("Load Members"),
+            ),
+            const SizedBox(height: 12),
+            Expanded(
+              child: ListView.separated(
+                itemBuilder: (_, i) => ListTile(
+                  leading: const Icon(Icons.person),
+                  title: Text(_members[i]["name"]?.toString() ?? "Unknown"),
+                  subtitle: Text(_members[i]["device_id"]?.toString() ?? ""),
+                ),
+                separatorBuilder: (_, __) => const Divider(),
+                itemCount: _members.length,
+              ),
+            )
+          ],
+        ),
+      ),
+    );
+  }
+}
+'
+
+w "$APP/lib/src/family/family_hub_screen.dart" '
+import "package:flutter/material.dart";
+
+class FamilyHubScreen extends StatelessWidget {
+  const FamilyHubScreen({super.key});
+
+  @override
+  Widget build(BuildContext context) {
+    return Scaffold(
+      appBar: AppBar(title: const Text("Family")),
+      body: ListView(
+        padding: const EdgeInsets.all(16),
+        children: [
+          Card(
+            child: ListTile(
+              leading: const Icon(Icons.qr_code),
+              title: const Text("Invite Family Member"),
+              onTap: () => Navigator.of(context).pushNamed("/family/invite"),
+            ),
+          ),
+          Card(
+            child: ListTile(
+              leading: const Icon(Icons.qr_code_scanner),
+              title: const Text("Accept Invite"),
+              onTap: () => Navigator.of(context).pushNamed("/family/accept"),
+            ),
+          ),
+          Card(
+            child: ListTile(
+              leading: const Icon(Icons.people),
+              title: const Text("Family Dashboard"),
+              onTap: () => Navigator.of(context).pushNamed("/family/dashboard"),
+            ),
+          ),
+        ],
+      ),
+    );
+  }
+}
+'
+
+# -----------------------------
+# Flutter app: theme system
+# -----------------------------
+mkdir -p "$APP/lib/src/theme" "$APP/assets/themes" "$APP/assets/config" "$APP/lib/src/onboarding" "$APP/lib/src/home"
+
+w "$APP/lib/src/theme/registry.dart" '
+import "dart:convert";
+import "package:flutter/services.dart" show rootBundle;
+import "package:flutter/material.dart";
+
+class PetitTokens extends ThemeExtension<PetitTokens> {
+  final double cornerRadius;
+  final Duration motionFast;
+  final Duration motionNormal;
+  final Duration motionSlow;
+
+  const PetitTokens({
+    required this.cornerRadius,
+    required this.motionFast,
+    required this.motionNormal,
+    required this.motionSlow,
+  });
+
+  @override
+  ThemeExtension<PetitTokens> copyWith({double? cornerRadius, Duration? motionFast, Duration? motionNormal, Duration? motionSlow}) {
+    return PetitTokens(
+      cornerRadius: cornerRadius ?? this.cornerRadius,
+      motionFast: motionFast ?? this.motionFast,
+      motionNormal: motionNormal ?? this.motionNormal,
+      motionSlow: motionSlow ?? this.motionSlow,
+    );
+  }
+
+  @override
+  ThemeExtension<PetitTokens> lerp(ThemeExtension<PetitTokens>? other, double t) {
+    if (other is! PetitTokens) return this;
+    return PetitTokens(
+      cornerRadius: _lerpDouble(cornerRadius, other.cornerRadius, t)!,
+      motionFast: _lerpDuration(motionFast, other.motionFast, t),
+      motionNormal: _lerpDuration(motionNormal, other.motionNormal, t),
+      motionSlow: _lerpDuration(motionSlow, other.motionSlow, t),
+    );
+  }
+
+  static Duration _lerpDuration(Duration a, Duration b, double t) {
+    return Duration(milliseconds: (a.inMilliseconds + (b.inMilliseconds - a.inMilliseconds) * t).round());
+  }
+}
+
+double? _lerpDouble(double a, double b, double t) => a + (b - a) * t;
+
+class ThemeLoader {
+  ThemeLoader._();
+
+  static Future<ThemeData> load(String id, Brightness brightness) async {
+    final data = jsonDecode(await rootBundle.loadString("assets/themes/themes.json")) as Map<String, dynamic>;
+    final themes = (data["themes"] as List).cast<Map<String, dynamic>>();
+    final match = themes.firstWhere((e) => e["id"] == id, orElse: () => themes.first);
+    final colors = (match["colors"] as Map<String, dynamic>)[brightness == Brightness.dark ? "dark" : "light"] as Map<String, dynamic>;
+    final corner = (match["tokens"] as Map<String, dynamic>)["corner_radius"] as num;
+    final motion = (match["tokens"] as Map<String, dynamic>)["motion"] as Map<String, dynamic>;
+    final scheme = ColorScheme(
+      brightness: brightness,
+      primary: Color(int.parse(colors["primary"].toString())),
+      onPrimary: Color(int.parse(colors["onPrimary"].toString())),
+      secondary: Color(int.parse(colors["secondary"].toString())),
+      onSecondary: Color(int.parse(colors["onSecondary"].toString())),
+      error: Color(int.parse(colors["error"].toString())),
+      onError: Color(int.parse(colors["onError"].toString())),
+      background: Color(int.parse(colors["background"].toString())),
+      onBackground: Color(int.parse(colors["onBackground"].toString())),
+      surface: Color(int.parse(colors["surface"].toString())),
+      onSurface: Color(int.parse(colors["onSurface"].toString())),
+    );
+    final tokens = PetitTokens(
+      cornerRadius: corner.toDouble(),
+      motionFast: Duration(milliseconds: motion["fast"] as int),
+      motionNormal: Duration(milliseconds: motion["normal"] as int),
+      motionSlow: Duration(milliseconds: motion["slow"] as int),
+    );
+    return ThemeData(
+      useMaterial3: true,
+      colorScheme: scheme,
+      textTheme: const TextTheme(
+        bodyLarge: TextStyle(fontSize: 18),
+        bodyMedium: TextStyle(fontSize: 16),
+        bodySmall: TextStyle(fontSize: 14),
+      ),
+      visualDensity: VisualDensity.adaptivePlatformDensity,
+      cardTheme: CardTheme(shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(tokens.cornerRadius))),
+      extensions: [tokens],
+    );
+  }
+}
+'
+
+w "$APP/lib/src/theme/theme_preview_screen.dart" '
+import "package:flutter/material.dart";
+import "registry.dart";
+
+class ThemePreviewScreen extends StatefulWidget {
+  const ThemePreviewScreen({super.key});
+
+  @override
+  State<ThemePreviewScreen> createState() => _ThemePreviewScreenState();
+}
+
+class _ThemePreviewScreenState extends State<ThemePreviewScreen> {
+  String _selected = "high_contrast_dark";
+  ThemeData? _theme;
+
+  @override
+  void initState() {
+    super.initState();
+    _load();
+  }
+
+  Future<void> _load() async {
+    _theme = await ThemeLoader.load(_selected, Brightness.dark);
+    if (mounted) setState(() {});
+  }
+
+  @override
+  Widget build(BuildContext context) {
+    return Theme(
+      data: _theme ?? Theme.of(context),
+      child: Scaffold(
+        appBar: AppBar(title: const Text("Theme Preview")),
+        body: Padding(
+          padding: const EdgeInsets.all(16),
+          child: Column(
+            crossAxisAlignment: CrossAxisAlignment.start,
+            children: [
+              DropdownButton<String>(
+                value: _selected,
+                items: const [
+                  DropdownMenuItem(value: "high_contrast_dark", child: Text("High Contrast Dark")),
+                  DropdownMenuItem(value: "high_contrast_light", child: Text("High Contrast Light")),
+                  DropdownMenuItem(value: "modern_dark", child: Text("Modern Dark")),
+                  DropdownMenuItem(value: "modern_light", child: Text("Modern Light")),
+                ],
+                onChanged: (v) {
+                  if (v == null) return;
+                  setState(() => _selected = v);
+                  _load();
+                },
+              ),
+              const SizedBox(height: 12),
+              const Text("Sample Buttons"),
+              const SizedBox(height: 8),
+              Wrap(
+                spacing: 12,
+                children: [
+                  FilledButton(onPressed: () {}, child: const Text("Primary")),
+                  OutlinedButton(onPressed: () {}, child: const Text("Outline")),
+                  TextButton(onPressed: () {}, child: const Text("Text")),
+                ],
+              ),
+              const SizedBox(height: 24),
+              const Text("Cards"),
+              const SizedBox(height: 8),
+              Card(child: Padding(padding: const EdgeInsets.all(16), child: Text("Card with body text"))),
+            ],
+          ),
+        ),
+      ),
+    );
+  }
+}
+'
+
+# Themes JSON (4 themes adult-contrast-friendly)
+cat > "$APP/assets/themes/themes.json" <<'EOF'
+{
+  "version": 1,
+  "default_theme_id": "high_contrast_dark",
+  "themes": [
+    {
+      "id": "high_contrast_dark",
+      "display_name": "High Contrast Dark",
+      "colors": {
+        "dark": {
+          "primary": "4294967295",
+          "onPrimary": "4278190080",
+          "secondary": "4293726455",
+          "onSecondary": "4278190080",
+          "error": "4293977744",
+          "onError": "4278190080",
+          "background": "4278190080",
+          "onBackground": "4294967295",
+          "surface": "4279176978",
+          "onSurface": "4294967295"
+        },
+        "light": {
+          "primary": "4278190080",
+          "onPrimary": "4294967295",
+          "secondary": "4280824639",
+          "onSecondary": "4294967295",
+          "error": "4291821568",
+          "onError": "4294967295",
+          "background": "4294967295",
+          "onBackground": "4278190080",
+          "surface": "4294045938",
+          "onSurface": "4278190080"
+        }
+      },
+      "tokens": { "corner_radius": 16, "motion": { "fast": 80, "normal": 140, "slow": 220 } }
+    },
+    {
+      "id": "high_contrast_light",
+      "display_name": "High Contrast Light",
+      "colors": {
+        "dark": {
+          "primary": "4294967295",
+          "onPrimary": "4278190080",
+          "secondary": "4288657317",
+          "onSecondary": "4278190080",
+          "error": "4293977744",
+          "onError": "4278190080",
+          "background": "4280295454",
+          "onBackground": "4294967295",
+          "surface": "4281611310",
+          "onSurface": "4294967295"
+        },
+        "light": {
+          "primary": "4278190080",
+          "onPrimary": "4294967295",
+          "secondary": "4280824639",
+          "onSecondary": "4294967295",
+          "error": "4291821568",
+          "onError": "4294967295",
+          "background": "4294967295",
+          "onBackground": "4278190080",
+          "surface": "4293980405",
+          "onSurface": "4278190080"
+        }
+      },
+      "tokens": { "corner_radius": 14, "motion": { "fast": 80, "normal": 140, "slow": 220 } }
+    },
+    {
+      "id": "modern_dark",
+      "display_name": "Modern Dark",
+      "colors": {
+        "dark": {
+          "primary": "4286578689",
+          "onPrimary": "4278190080",
+          "secondary": "4289533019",
+          "onSecondary": "4278190080",
+          "error": "4293451674",
+          "onError": "4278190080",
+          "background": "4279178252",
+          "onBackground": "4293858817",
+          "surface": "4279835426",
+          "onSurface": "4293858817"
+        },
+        "light": {
+          "primary": "4278226785",
+          "onPrimary": "4294967295",
+          "secondary": "4279632544",
+          "onSecondary": "4294967295",
+          "error": "4280150456",
+          "onError": "4294967295",
+          "background": "4294967295",
+          "onBackground": "4279308561",
+          "surface": "4294374632",
+          "onSurface": "4279308561"
+        }
+      },
+      "tokens": { "corner_radius": 16, "motion": { "fast": 90, "normal": 160, "slow": 240 } }
+    },
+    {
+      "id": "modern_light",
+      "display_name": "Modern Light",
+      "colors": {
+        "dark": {
+          "primary": "4284776226",
+          "onPrimary": "4278190080",
+          "secondary": "4290519853",
+          "onSecondary": "4278190080",
+          "error": "4293977744",
+          "onError": "4278190080",
+          "background": "4279176975",
+          "onBackground": "4293652223",
+          "surface": "4280295454",
+          "onSurface": "4293652223"
+        },
+        "light": {
+          "primary": "4278196897",
+          "onPrimary": "4294967295",
+          "secondary": "4289139760",
+          "onSecondary": "4294967295",
+          "error": "4281007768",
+          "onError": "4294967295",
+          "background": "4294967295",
+          "onBackground": "4279173137",
+          "surface": "4294046197",
+          "onSurface": "4279173137"
+        }
+      },
+      "tokens": { "corner_radius": 14, "motion": { "fast": 90, "normal": 160, "slow": 240 } }
+    }
+  ]
+}
+EOF
+
+w "$APP/assets/themes/theme_voice_descriptions.json" '
+{ "theme_desc_system_adaptive": "Follows your phone’s system colors automatically." }
+'
+
+# Onboarding + provider labels
+w "$APP/assets/config/onboarding.json" '
+{
+  "steps": [
+    { "title": "Welcome to PetitPal", "body": "Voice-first help for everyday tasks.", "tts": "Welcome to PetitPal. I can listen and help."},
+    { "title": "Pick a Theme", "body": "Choose colors you can see clearly.", "tts": "Pick a theme that is easy for your eyes."},
+    { "title": "Add a Key", "body": "Enter an API key from OpenAI or Gemini.", "tts": "Please add at least one provider key so I can answer."}
+  ],
+  "finish": { "title": "All Set", "body": "You can change settings any time.", "tts": "All set. Tap the mic to speak."}
+}
+'
+
+w "$APP/assets/config/provider_setup.json" '
+{
+  "providers": [
+    {"id": "openai", "label": "OpenAI", "help_url": "https://platform.openai.com/"},
+    {"id": "gemini", "label": "Gemini", "help_url": "https://aistudio.google.com/app/apikey"},
+    {"id": "grok", "label": "Grok", "help_url": "https://x.ai/"},
+    {"id": "deepseek", "label": "DeepSeek", "help_url": "https://platform.deepseek.com/"}
+  ]
+}
+'
+
+# -----------------------------
+# Flutter app: onboarding + home + router + main
+# -----------------------------
+w "$APP/lib/src/onboarding/onboarding_screen.dart" '
+import "dart:convert";
+import "package:flutter/material.dart";
+import "package:flutter/services.dart" show rootBundle;
+import "package:flutter_riverpod/flutter_riverpod.dart";
+import "package:shared_preferences/shared_preferences.dart";
+import "../../config/strings_config.dart";
+
+class OnboardingScreen extends ConsumerStatefulWidget {
+  const OnboardingScreen({super.key});
+  @override
+  ConsumerState<OnboardingScreen> createState() => _OnboardingScreenState();
+}
+
+class _OnboardingScreenState extends ConsumerState<OnboardingScreen> {
+  int _index = 0;
+  List<Map<String, dynamic>> _steps = [];
+
+  @override
+  void initState() {
+    super.initState();
+    _load();
+  }
+
+  Future<void> _load() async {
+    final data = jsonDecode(await rootBundle.loadString("assets/config/onboarding.json")) as Map<String, dynamic>;
+    _steps = (data["steps"] as List).cast<Map<String, dynamic>>();
+    if (mounted) setState(() {});
+  }
+
+  @override
+  Widget build(BuildContext context) {
+    final step = _steps.isEmpty ? null : _steps[_index];
+    return Scaffold(
+      appBar: AppBar(title: const Text(StringsConfig.onboardingTitle)),
+      body: Padding(
+        padding: const EdgeInsets.all(16),
+        child: Column(
+          crossAxisAlignment: CrossAxisAlignment.start,
+          children: [
+            if (step != null) ...[
+              Text(step["title"]?.toString() ?? "", style: Theme.of(context).textTheme.headlineSmall),
+              const SizedBox(height: 8),
+              Text(step["body"]?.toString() ?? "")
+            ],
+            const Spacer(),
+            Align(
+              alignment: Alignment.bottomRight,
+              child: FilledButton(
+                onPressed: () async {
+                  if (_steps.isEmpty) return;
+                  if (_index < _steps.length - 1) {
+                    setState(() => _index += 1);
+                  } else {
+                    final prefs = await SharedPreferences.getInstance();
+                    await prefs.setBool("seen_onboarding", true);
+                    if (!mounted) return;
+                    Navigator.of(context).pushReplacementNamed("/home");
+                  }
+                },
+                child: Text(_index < _steps.length - 1 ? StringsConfig.onboardingNext : StringsConfig.startUsingApp),
+              ),
+            )
+          ],
+        ),
+      ),
+    );
+  }
+}
+'
+
+w "$APP/lib/src/home/home_screen.dart" '
+import "package:flutter/material.dart";
+
+class HomeScreen extends StatelessWidget {
+  const HomeScreen({super.key});
+
+  @override
+  Widget build(BuildContext context) {
+    return Scaffold(
+      appBar: AppBar(title: const Text("PetitPal")),
+      body: ListView(
+        padding: const EdgeInsets.all(16),
+        children: [
+          Card(
+            child: ListTile(
+              leading: const Icon(Icons.mic),
+              title: const Text("Voice Assistant"),
+              subtitle: const Text("Speak and hear answers"),
+              onTap: () => Navigator.of(context).pushNamed("/voice"),
+            ),
+          ),
+          Card(
+            child: ListTile(
+              leading: const Icon(Icons.vpn_key),
+              title: const Text("Provider Keys"),
+              subtitle: const Text("Add or update keys"),
+              onTap: () => Navigator.of(context).pushNamed("/providers"),
+            ),
+          ),
+          Card(
+            child: ListTile(
+              leading: const Icon(Icons.palette),
+              title: const Text("Theme Preview"),
+              subtitle: const Text("Pick colors that suit your eyes"),
+              onTap: () => Navigator.of(context).pushNamed("/themes"),
+            ),
+          ),
+          Card(
+            child: ListTile(
+              leading: const Icon(Icons.group),
+              title: const Text("Family"),
+              subtitle: const Text("Invite or accept via QR"),
+              onTap: () => Navigator.of(context).pushNamed("/family"),
+            ),
+          )
+        ],
+      ),
+    );
+  }
+}
+'
+
+w "$APP/lib/app_router.dart" '
+import "package:flutter/material.dart";
+import "package:flutter_riverpod/flutter_riverpod.dart";
+import "src/home/home_screen.dart";
+import "src/onboarding/onboarding_screen.dart";
+import "src/theme/theme_preview_screen.dart";
+import "src/providers/provider_setup_screen.dart";
+import "src/family/family_hub_screen.dart";
+import "src/family/invite_screen.dart";
+import "src/family/accept_invite_screen.dart";
+import "src/family/family_dashboard_screen.dart";
+import "src/voice/voice_screen.dart";
+import "src/providers/providers.dart";
+
+class AppRouter extends ConsumerWidget {
+  const AppRouter({super.key});
+
+  @override
+  Widget build(BuildContext context, WidgetRef ref) {
+    return FutureBuilder<bool>(
+      future: ref.read(isFirstRunProvider.future),
+      builder: (context, snap) {
+        final firstRun = (snap.data ?? true);
+        final initial = firstRun ? "/onboarding" : "/home";
+        return Navigator(
+          initialRoute: initial,
+          onGenerateRoute: (settings) {
+            switch (settings.name) {
+              case "/home":
+                return MaterialPageRoute(builder: (_) => const HomeScreen());
+              case "/onboarding":
+                return MaterialPageRoute(builder: (_) => const OnboardingScreen());
+              case "/themes":
+                return MaterialPageRoute(builder: (_) => const ThemePreviewScreen());
+              case "/providers":
+                return MaterialPageRoute(builder: (_) => const ProviderSetupScreen());
+              case "/family":
+                return MaterialPageRoute(builder: (_) => const FamilyHubScreen());
+              case "/family/invite":
+                return MaterialPageRoute(builder: (_) => const InviteScreen());
+              case "/family/accept":
+                return MaterialPageRoute(builder: (_) => const AcceptInviteScreen());
+              case "/family/dashboard":
+                return MaterialPageRoute(builder: (_) => const FamilyDashboardScreen());
+              case "/voice":
+                return MaterialPageRoute(builder: (_) => const VoiceScreen());
+            }
+            return MaterialPageRoute(builder: (_) => const HomeScreen());
+          },
+        );
+      },
+    );
+  }
+}
+'
+
+w "$APP/lib/main.dart" '
+import "package:flutter/material.dart";
+import "package:flutter_riverpod/flutter_riverpod.dart";
+import "src/theme/registry.dart";
+import "app_router.dart";
+
+void main() {
+  WidgetsFlutterBinding.ensureInitialized();
+  runApp(const ProviderScope(child: PetitPalApp()));
+}
+
+class PetitPalApp extends StatefulWidget {
+  const PetitPalApp({super.key});
+  @override
+  State<PetitPalApp> createState() => _PetitPalAppState();
+}
+
+class _PetitPalAppState extends State<PetitPalApp> {
+  ThemeData? _theme;
+
+  @override
+  void initState() {
+    super.initState();
+    _loadTheme();
+  }
+
+  Future<void> _loadTheme() async {
+    _theme = await ThemeLoader.load("high_contrast_dark", Brightness.dark);
+    if (mounted) setState(() {});
+  }
+
+  @override
+  Widget build(BuildContext context) {
+    return MaterialApp(
+      title: "PetitPal",
+      theme: _theme ?? ThemeData.dark(useMaterial3: true),
+      home: const AppRouter(),
+      debugShowCheckedModeBanner: false,
+    );
+  }
+}
+'
+
+# -----------------------------
+# Android app structure (minimal, builds on Android)
+# -----------------------------
+mkdir -p "$APP/android/app/src/main/kotlin/com/petitpal/app" "$APP/android/app/src/main/res/mipmap-mdpi" "$APP/android/app/src/main/res/mipmap-hdpi" "$APP/android/app/src/main/res/mipmap-xhdpi" "$APP/android/app/src/main/res/mipmap-xxhdpi" "$APP/android/app/src/main/res/mipmap-xxxhdpi"
+
+w "$APP/android/gradle.properties" '
+org.gradle.jvmargs=-Xmx4g -XX:MaxMetaspaceSize=1g -Dkotlin.daemon.jvm.options\="-Xmx2g"
+android.useAndroidX=true
+android.enableJetifier=true
+kotlin.code.style=official
+'
+
+w "$APP/android/settings.gradle" '
+pluginManagement {
+    repositories {
+        google()
+        mavenCentral()
+        gradlePluginPortal()
+    }
+}
+dependencyResolutionManagement {
+    repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)
+    repositories {
+        google()
+        mavenCentral()
+    }
+}
+rootProject.name = "petitpal"
+include(":app")
+'
+
+w "$APP/android/build.gradle" '
+buildscript {
+    repositories {
+        google()
+        mavenCentral()
+    }
+    dependencies {
+        classpath "com.android.tools.build:gradle:8.4.2"
+        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.9.24"
+        classpath "com.google.gms:google-services:4.4.2"
+    }
+}
+
+allprojects {
+    repositories {
+        google()
+        mavenCentral()
+    }
+}
+
+task clean(type: Delete) {
+    delete rootProject.buildDir
+}
+'
+
+w "$APP/android/app/build.gradle" '
+plugins {
+    id "com.android.application"
+    id "kotlin-android"
+    id "com.google.gms.google-services"
+}
+
+android {
+    namespace "com.petitpal.app"
+    compileSdk 35
+
+    defaultConfig {
+        applicationId "com.petitpal.app"
+        minSdk 24
+        targetSdk 35
+        versionCode 5
+        versionName "0.5.0"
+        multiDexEnabled true
+    }
+
+    buildTypes {
+        release {
+            minifyEnabled false
+            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
+        }
+        debug {
+            debuggable true
+        }
+    }
+
+    compileOptions {
+        sourceCompatibility JavaVersion.VERSION_17
+        targetCompatibility JavaVersion.VERSION_17
+    }
+    kotlinOptions {
+        jvmTarget = "17"
+    }
+
+    ndkVersion "27.0.12077973"
+}
+
+dependencies {
+    implementation "org.jetbrains.kotlin:kotlin-stdlib:1.9.24"
+    implementation platform("com.google.firebase:firebase-bom:33.3.0")
+    implementation "com.google.firebase:firebase-analytics"
+    implementation "com.google.firebase:firebase-crashlytics"
+}
+'
+
+w "$APP/android/app/proguard-rules.pro" '# Keep default rules
+'
+
+w "$APP/android/app/src/main/AndroidManifest.xml" '
+<manifest xmlns:android="http://schemas.android.com/apk/res/android" package="com.petitpal.app">
+    <uses-permission android:name="android.permission.RECORD_AUDIO"/>
+    <uses-permission android:name="android.permission.CAMERA"/>
+    <application android:label="PetitPal" android:icon="@mipmap/ic_launcher" android:usesCleartextTraffic="true">
+        <activity android:name=".MainActivity" android:exported="true" android:launchMode="singleTask">
+            <intent-filter>
+                <action android:name="android.intent.action.MAIN"/>
+                <category android:name="android.intent.category.LAUNCHER"/>
+            </intent-filter>
+            <!-- Deep link for invites -->
+            <intent-filter android:autoVerify="true">
+                <action android:name="android.intent.action.VIEW"/>
+                <category android:name="android.intent.category.DEFAULT"/>
+                <category android:name="android.intent.category.BROWSABLE"/>
+                <data android:scheme="https" android:host="petitpal.page.link"/>
+                <data android:scheme="https" android:host="petitpal-api.kristyc.workers.dev"/>
+            </intent-filter>
+        </activity>
+    </application>
+</manifest>
+'
+
+w "$APP/android/app/src/main/kotlin/com/petitpal/app/MainActivity.kt" '
+package com.petitpal.app
+
+import io.flutter.embedding.android.FlutterActivity
+
+class MainActivity: FlutterActivity() {}
+'
+
+# tiny 8x8 png for all mipmaps
+ICON_B64="iVBORw0KGgoAAAANSUhEUgAAAAgAAAAICAYAAADED76LAAAADUlEQVQYV2NkYGD4z0ABAAjaA2CIOqKoAAAAAElFTkSuQmCC"
+for d in mdpi hdpi xhdpi xxhdpi xxxhdpi; do
+  wb "$APP/android/app/src/main/res/mipmap-$d/ic_launcher.png" "$ICON_B64"
+done
+
+# -----------------------------
+# Cloudflare Worker
+# -----------------------------
+w "$WKR/worker.js" '
+export default {
+  async fetch(request, env, ctx) {
+    const url = new URL(request.url);
+    const corsHeaders = {
+      "Access-Control-Allow-Origin": "*",
+      "Access-Control-Allow-Methods": "GET,POST,OPTIONS",
+      "Access-Control-Allow-Headers": "Content-Type,X-Device-ID,X-Family-ID",
+    };
+    if (request.method === "OPTIONS") {
+      return new Response("", { headers: corsHeaders });
+    }
+    try {
+      if (url.pathname === "/health") {
+        return json({ ok: true, version: "1.0.0" }, corsHeaders);
+      }
+      if (url.pathname === "/api/keys/save" && request.method === "POST") {
+        const deviceId = request.headers.get("X-Device-ID");
+        if (!deviceId) return error(400, "Missing X-Device-ID", corsHeaders);
+        const body = await request.json();
+        if (!body.ciphertext || !body.nonce || !body.salt) {
+          return error(400, "Expecting encrypted payload", corsHeaders);
+        }
+        const key = `keys:${deviceId}`;
+        await env["petitpal-kv"].put(key, JSON.stringify(body));
+        return json({ stored: true, key }, corsHeaders);
+      }
+      if (url.pathname === "/api/keys/get" && request.method === "GET") {
+        const deviceId = request.headers.get("X-Device-ID");
+        if (!deviceId) return error(400, "Missing X-Device-ID", corsHeaders);
+        const key = `keys:${deviceId}`;
+        const v = await env["petitpal-kv"].get(key);
+        if (!v) return error(404, "Not found", corsHeaders);
+        return new Response(v, { headers: { "Content-Type": "application/json", ...corsHeaders } });
+      }
+      if (url.pathname === "/api/chat" && request.method === "POST") {
+        const deviceId = request.headers.get("X-Device-ID");
+        if (!deviceId) return error(400, "Missing X-Device-ID", corsHeaders);
+        const body = await request.json();
+        const text = (body.text || "").toString();
+        const provider = (body.provider_hint || "openai").toString();
+        const providerKey = (body.provider_key || "").toString();
+        if (!providerKey) return error(401, "Missing provider key", corsHeaders);
+
+        const start = Date.now();
+        const out = await chatViaProvider(provider, providerKey, text);
+        const duration = Date.now() - start;
+        return json({ model_used: out.model, auto_switched: false, reason: "provider_hint", summary_tts: out.text, text: out.text, duration_ms: duration, telemetry_id: crypto.randomUUID() }, corsHeaders);
+      }
+      if (url.pathname === "/api/family/create_invite" && request.method === "POST") {
+        const deviceId = request.headers.get("X-Device-ID");
+        if (!deviceId) return error(400, "Missing X-Device-ID", corsHeaders);
+        const body = await request.json();
+        const memberName = (body.member_name || "Member").toString();
+        const familiesKey = `family_by_owner:${deviceId}`;
+        let familyId = await env["petitpal-kv"].get(familiesKey);
+        if (!familyId) {
+          familyId = crypto.randomUUID();
+          await env["petitpal-kv"].put(familiesKey, familyId);
+          await env["petitpal-kv"].put(`family:${familyId}`, JSON.stringify({ members: [{ device_id: deviceId, name: "Owner" }], created_at: new Date().toISOString(), owner_device_id: deviceId }));
+        }
+        const token = [...crypto.getRandomValues(new Uint8Array(16))].map(b => b.toString(16).padStart(2,"0")).join("");
+        const deeplink = `https://petitpal-api.kristyc.workers.dev/accept?token=${token}`;
+        await env["petitpal-kv"].put(`invites:${token}`, JSON.stringify({ family_id: familyId, member_name: memberName, issued_at: new Date().toISOString() }), { expirationTtl: 86400 });
+        return json({ family_id: familyId, invite_token: token, deeplink }, corsHeaders);
+      }
+      if (url.pathname === "/api/family/accept_invite" && request.method === "POST") {
+        const deviceId = request.headers.get("X-Device-ID");
+        if (!deviceId) return error(400, "Missing X-Device-ID", corsHeaders);
+        const body = await request.json();
+        const token = (body.invite_token || "").toString();
+        const inviteRaw = await env["petitpal-kv"].get(`invites:${token}`);
+        if (!inviteRaw) return error(400, "Invalid or expired token", corsHeaders);
+        const invite = JSON.parse(inviteRaw);
+        const famKey = `family:${invite.family_id}`;
+        const famRaw = await env["petitpal-kv"].get(famKey);
+        const family = famRaw ? JSON.parse(famRaw) : { members: [], created_at: new Date().toISOString(), owner_device_id: "" };
+        const exists = (family.members || []).some((m) => m.device_id === deviceId);
+        if (!exists) {
+          family.members = [...(family.members || []), { device_id: deviceId, name: invite.member_name }];
+          await env["petitpal-kv"].put(famKey, JSON.stringify(family));
+        }
+        await env["petitpal-kv"].delete(`invites:${token}`);
+        return json({ family_id: invite.family_id, member_name: invite.member_name }, corsHeaders);
+      }
+      if (url.pathname === "/api/family/list" && request.method === "GET") {
+        const familyId = request.headers.get("X-Family-ID");
+        if (!familyId) return error(400, "Missing X-Family-ID", corsHeaders);
+        const famRaw = await env["petitpal-kv"].get(`family:${familyId}`);
+        if (!famRaw) return error(404, "Not found", corsHeaders);
+        return new Response(famRaw, { headers: { "Content-Type": "application/json", ...corsHeaders } });
+      }
+      return error(404, "Not found", corsHeaders);
+    } catch (e) {
+      return error(500, "Server error: " + (e && e.message ? e.message : String(e)), { "Access-Control-Allow-Origin": "*" });
+    }
+  }
+};
+
+async function chatViaProvider(provider, key, text) {
+  provider = provider.toLowerCase();
+  if (provider === "openai") {
+    const res = await fetch("https://api.openai.com/v1/chat/completions", {
+      method: "POST",
+      headers: {
+        "Authorization": `Bearer ${key}`,
+        "Content-Type": "application/json",
+      },
+      body: JSON.stringify({
+        model: "gpt-4o-mini",
+        messages: [{ role: "user", content: text }],
+        temperature: 0.7,
+      }),
+    });
+    if (!res.ok) {
+      const t = await res.text();
+      throw new Error("OpenAI error " + res.status + ": " + t);
+    }
+    const data = await res.json();
+    const out = data.choices?.[0]?.message?.content || "";
+    return { model: "gpt-4o-mini", text: out };
+  }
+  if (provider === "gemini") {
+    const res = await fetch(`https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-pro:generateContent?key=${key}`, {
+      method: "POST",
+      headers: { "Content-Type": "application/json" },
+      body: JSON.stringify({ contents: [{ parts: [{ text }]}] }),
+    });
+    if (!res.ok) {
+      const t = await res.text();
+      throw new Error("Gemini error " + res.status + ": " + t);
+    }
+    const data = await res.json();
+    const out = data.candidates?.[0]?.content?.parts?.[0]?.text || "";
+    return { model: "gemini-1.5-pro", text: out };
+  }
+  if (provider === "grok") {
+    const res = await fetch("https://api.x.ai/v1/chat/completions", {
+      method: "POST",
+      headers: { "Authorization": `Bearer ${key}`, "Content-Type": "application/json" },
+      body: JSON.stringify({ model: "grok-2-latest", messages: [{ role: "user", content: text }] }),
+    });
+    if (!res.ok) {
+      const t = await res.text();
+      throw new Error("Grok error " + res.status + ": " + t);
+    }
+    const data = await res.json();
+    const out = data.choices?.[0]?.message?.content || "";
+    return { model: "grok-2-latest", text: out };
+  }
+  if (provider === "deepseek") {
+    const res = await fetch("https://api.deepseek.com/chat/completions", {
+      method: "POST",
+      headers: { "Authorization": `Bearer ${key}", "Content-Type": "application/json" },
+      body: JSON.stringify({ model: "deepseek-chat", messages: [{ role: "user", content: text }] }),
+    });
+    if (!res.ok) {
+      const t = await res.text();
+      throw new Error("DeepSeek error " + res.status + ": " + t);
+    }
+    const data = await res.json();
+    const out = data.choices?.[0]?.message?.content || "";
+    return { model: "deepseek-chat", text: out };
+  }
+  throw new Error("Unsupported provider: " + provider);
+}
+
+function json(obj, headers = {}) {
+  return new Response(JSON.stringify(obj), { headers: { "Content-Type": "application/json; charset=utf-8", ...headers } });
+}
+
+function error(code, message, headers = {}) {
+  return new Response(JSON.stringify({ error: message }), { status: code, headers: { "Content-Type": "application/json; charset=utf-8", ...headers } });
+}
+'
+
+w "$WKR/wrangler.toml" '
+name = "petitpal-api"
+main = "worker.js"
+compatibility_date = "2024-11-01"
+
+kv_namespaces = [
+  { binding = "petitpal-kv", id = "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx", preview_id = "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" }
+]
+
+[vars]
+# Feature toggles or DSNs can be added via wrangler secrets/vars
+'
+
+w "$WKR/.env.example" '
+# Example environment entries for Cloudflare Worker
+# SENTRY_DSN=
+'
+
+# -----------------------------
+# Docs
+# -----------------------------
+w "$DOCS/SETUP_GUIDE.md" '
+# Setup Guide (30 minutes)
+
+## Prereqs
+- Flutter SDK (stable). Recommended: 3.22.2+
+- Android Studio with SDK 35 and NDK 27.0.12077973
+- Cloudflare account (free tier)
+
+## 1) Deploy the Worker
+1. Install Wrangler: `npm i -g wrangler`
+2. In `cloudflare-worker/`:
+   - `wrangler login`
+   - `wrangler kv namespace create petitpal-kv` (copy IDs)
+   - Edit `wrangler.toml` and paste IDs under `kv_namespaces`
+   - `wrangler deploy`
+3. Verify health: open `https://<your-worker>.workers.dev/health` (should return `{ ok: true }`)
+
+## 2) Configure & Run the Flutter App
+1. Open `petitpal/` in Android Studio
+2. Run `flutter pub get`
+3. Connect an Android device/emulator (Android 8.0+)
+4. `flutter run`
+5. (Optional now / later) If you use Firebase Analytics/Crashlytics:
+   - Put `google-services.json` under `android/app/`
+   - Flip `LaunchConfig.LAUNCH_MODE` to `true` to enable
+
+## 3) First Run
+- Onboarding appears on first launch
+- Go to **Provider Keys** and paste at least one provider key (OpenAI/Gemini/Grok/DeepSeek)
+- Use **Voice Assistant** → Start → Stop → Ask
+
+## 4) Family Invites
+- **Family → Invite Family Member** → creates a token and deep link → shows QR
+- Second device: **Accept Invite** → scan the QR → joined confirmation
+
+## 5) Change Look & Feel
+- **Theme Preview** to audition themes
+- To modify globally, edit JSON: `assets/themes/themes.json`, rebuild the app
+
+See `DEPLOYMENT_CHECKLIST.md` and `TROUBLESHOOTING.md` for more.
+'
+
+w "$DOCS/PetitPal_API_Spec.md" '
+# PetitPal Worker API (MVP)
+
+Base URL: `https://<your-worker>.workers.dev`
+
+Headers:
+- `X-Device-ID`: UUID generated on device
+- `Content-Type`: application/json
+
+## GET /health
+Returns `{ ok: true, version: "1.0.0" }`
+
+## POST /api/keys/save
+Body: `{ "ciphertext": "...", "nonce": "...", "salt": "...", "algo": "AES-GCM-256", "kdf": "PBKDF2-HMAC-SHA256", "iterations": 500000, "created_at": "..." }`
+
+## GET /api/keys/get
+Returns encrypted backup
+
+## POST /api/chat
+Body: `{ "text": "Hello", "provider_hint": "openai|gemini|grok|deepseek", "provider_key": "..." }`
+
+## POST /api/family/create_invite
+Returns `{ family_id, invite_token, deeplink }`
+
+## POST /api/family/accept_invite
+Body: `{ "invite_token": "..." }`
+
+## GET /api/family/list
+Header `X-Family-ID: ...` → returns `{ family_id, members: [{ device_id, name }, ...] }`
+'
+
+w "$DOCS/TROUBLESHOOTING.md" '
+# Troubleshooting
+
+**App builds but crashes**
+- Ensure minSdk 24+, Android 8.0+ emulator/device
+- `flutter clean && flutter pub get`
+
+**Voice capture fails**
+- Grant microphone permission in Android settings
+
+**/api/chat returns 401**
+- Add a provider key on the Provider Keys screen
+
+**Wrangler deploy fails**
+- Ensure `kv_namespaces` IDs are filled
+- `wrangler whoami` to confirm login
+'
+
+w "$DOCS/DEPLOYMENT_CHECKLIST.md" '
+# Deployment Checklist
+
+- [ ] Worker deployed; `/health` returns ok
+- [ ] KV namespace bound as `petitpal-kv` in `wrangler.toml`
+- [ ] Android device/emulator ready (Android 8+)
+- [ ] Provider key pasted on device
+- [ ] Optional: `google-services.json` present (when launching)
+- [ ] `LaunchConfig.LAUNCH_MODE` switched to `true` for production
+'
+
+# -----------------------------
+# Scripts
+# -----------------------------
+w "$SCRIPTS/compat_check.sh" '
+#!/usr/bin/env bash
+set -euo pipefail
+
+echo "Checking Flutter..."
+flutter --version
+
+echo "Checking Java..."
+java -version || true
+
+echo "Recommended versions:"
+cat <<EOF
+Flutter >= 3.22.2
+AGP 8.4.2
+Kotlin 1.9.24
+Android SDK 35
+NDK 27.0.12077973
+JDK 17
+EOF
+'
+chmod +x "$SCRIPTS/compat_check.sh"
+
+# -----------------------------
+# Create ZIP and Git patch
+# -----------------------------
+cd "$(dirname "$ROOT")"
+ZIP="$PWD/petitpal_mvp.zip"
+PATCH="$PWD/petitpal_mvp.patch"
+rm -f "$ZIP" "$PATCH"
+
+# zip
+( cd "$ROOT" && zip -r -q "$ZIP" . )
+
+# git init + patch
+( cd "$ROOT" && git init -q && git add . && git -c user.email=a@b.c -c user.name=gen commit -q -m "PetitPal MVP initial commit" && git format-patch -1 -o "$PWD" >/dev/null )
+# format-patch writes a numbered file; rename to petitpal_mvp.patch
+PATCHFILE="$(ls -1 *.patch | head -n1 || true)"
+if [ -n "$PATCHFILE" ]; then mv "$PATCHFILE" "$PATCH"; fi
+
+echo
+echo "DONE."
+echo "ZIP: $ZIP"
+echo "PATCH: $PATCH"
+echo
+echo "Open docs/SETUP_GUIDE.md and follow the steps."
diff --git a/docs/ARCHITECTURE.md b/docs/ARCHITECTURE.md
index d99928a..0ef533a 100644
--- a/docs/ARCHITECTURE.md
+++ b/docs/ARCHITECTURE.md
@@ -1,7 +1,7 @@
-# Architecture
-
-- **Flutter** feature folders under `lib/src` (voice, theme, onboarding, providers, family, analytics, security).
-- **Cloudflare Worker** proxies all providers and handles family + encrypted backups (KV).
-- **Anonymous** device UUID, no PII, encrypted-at-rest backups.
-- **Launch toggles** centralized in `lib/config/internal_config.dart`.
-- **Events taxonomy** in `lib/src/analytics/events.dart`.
+# Architecture
+
+- **Flutter** feature folders under `lib/src` (voice, theme, onboarding, providers, family, analytics, security).
+- **Cloudflare Worker** proxies all providers and handles family + encrypted backups (KV).
+- **Anonymous** device UUID, no PII, encrypted-at-rest backups.
+- **Launch toggles** centralized in `lib/config/internal_config.dart`.
+- **Events taxonomy** in `lib/src/analytics/events.dart`.
diff --git a/docs/BUILD_CONFIG.md b/docs/BUILD_CONFIG.md
index 788e98f..fb640c4 100644
--- a/docs/BUILD_CONFIG.md
+++ b/docs/BUILD_CONFIG.md
@@ -1,8 +1,8 @@
-# Build Config
-
-- Flutter: latest stable.
-- Android: Embedding v2, NDK `27.0.12077973`.
-- Packages: `speech_to_text`, `flutter_tts`, `permission_handler`, `http`, `flutter_secure_storage`, `crypto`, `uuid`, `qr_flutter`, `qr_code_scanner`.
-- Troubleshooting:
-  - **Gradle hangs**: run with `--stacktrace --info` and ensure Java installed.
-  - **JS dependency version conflicts**: align `js` versions (see pubspec).
+# Build Config
+
+- Flutter: latest stable.
+- Android: Embedding v2, NDK `27.0.12077973`.
+- Packages: `speech_to_text`, `flutter_tts`, `permission_handler`, `http`, `flutter_secure_storage`, `crypto`, `uuid`, `qr_flutter`, `qr_code_scanner`.
+- Troubleshooting:
+  - **Gradle hangs**: run with `--stacktrace --info` and ensure Java installed.
+  - **JS dependency version conflicts**: align `js` versions (see pubspec).
diff --git a/docs/CUSTOMIZATION_GUIDE.md b/docs/CUSTOMIZATION_GUIDE.md
index b2d7c0e..5e3acbb 100644
--- a/docs/CUSTOMIZATION_GUIDE.md
+++ b/docs/CUSTOMIZATION_GUIDE.md
@@ -1,7 +1,7 @@
-# Customization Guide
-
-- **Themes**: Add/edit entries in `lib/src/theme/registry.dart`. Each theme carries tokens and descriptions.
-- **Animations**: Use tokens (durations) from `PetitTokens`. Add premium effects per theme family.
-- **Providers**: Extend ProviderSetupScreen; store locally; push encrypted backup via Worker.
-- **Feature Flags**: Central toggles in `lib/config/internal_config.dart`.
-- **Auto-switching**: Server logic in Worker `pickModel()`.
+# Customization Guide
+
+- **Themes**: Add/edit entries in `lib/src/theme/registry.dart`. Each theme carries tokens and descriptions.
+- **Animations**: Use tokens (durations) from `PetitTokens`. Add premium effects per theme family.
+- **Providers**: Extend ProviderSetupScreen; store locally; push encrypted backup via Worker.
+- **Feature Flags**: Central toggles in `lib/config/internal_config.dart`.
+- **Auto-switching**: Server logic in Worker `pickModel()`.
diff --git a/docs/DEPLOYMENT_CHECKLIST.md b/docs/DEPLOYMENT_CHECKLIST.md
index 0b02183..d9b6e38 100644
--- a/docs/DEPLOYMENT_CHECKLIST.md
+++ b/docs/DEPLOYMENT_CHECKLIST.md
@@ -1,7 +1 @@
-# Deployment Checklist
-
-- [ ] Set `isProductionReady = true` in `lib/config/internal_config.dart`
-- [ ] Update API endpoints to production
-- [ ] Enable analytics/crash reporting toggles
-- [ ] Test onboarding, invites, deep links, and all providers
-- [ ] Submit to app stores
+'"$@"'
diff --git a/docs/MERGE_NOTES.md b/docs/MERGE_NOTES.md
index b91619d..8005663 100644
--- a/docs/MERGE_NOTES.md
+++ b/docs/MERGE_NOTES.md
@@ -1,9 +1,9 @@
-# Merge Notes
-
-- This bundle is structured to be merged into your existing repo:
-  - `cloudflare-worker/**` → your Worker project.
-  - `app/lib/**` → your Flutter app (new folders fit under `lib/src/`).
-  - Docs at repo root.
-- Make sure your AndroidManifest has the deep link intent-filter (see SETUP_GUIDE.md).
-- Replace placeholder AES-GCM with a production crypto implementation.
-- Finish out the remaining 6 theme descriptors in `registry.dart`.
+# Merge Notes
+
+- This bundle is structured to be merged into your existing repo:
+  - `cloudflare-worker/**` → your Worker project.
+  - `app/lib/**` → your Flutter app (new folders fit under `lib/src/`).
+  - Docs at repo root.
+- Make sure your AndroidManifest has the deep link intent-filter (see SETUP_GUIDE.md).
+- Replace placeholder AES-GCM with a production crypto implementation.
+- Finish out the remaining 6 theme descriptors in `registry.dart`.
diff --git a/docs/MIGRATION_TO_SUPABASE.md b/docs/MIGRATION_TO_SUPABASE.md
index 2567636..9789c96 100644
--- a/docs/MIGRATION_TO_SUPABASE.md
+++ b/docs/MIGRATION_TO_SUPABASE.md
@@ -1,10 +1,10 @@
-# Migration to Supabase
-
-## When to Migrate
-- Approaching KV scale or requiring relational queries.
-
-## Steps
-1. Create Supabase project + tables mirroring `family:{id}` and `invites:{token}`.
-2. Implement a `Storage` interface in Worker and add `StorageSupabase` adapter.
-3. Dual-write for a week, backfill KV → Supabase, flip reads.
-4. Rollback by disabling Supabase adapter and reading from KV.
+# Migration to Supabase
+
+## When to Migrate
+- Approaching KV scale or requiring relational queries.
+
+## Steps
+1. Create Supabase project + tables mirroring `family:{id}` and `invites:{token}`.
+2. Implement a `Storage` interface in Worker and add `StorageSupabase` adapter.
+3. Dual-write for a week, backfill KV → Supabase, flip reads.
+4. Rollback by disabling Supabase adapter and reading from KV.
diff --git a/docs/PetitPal_API_Spec.md b/docs/PetitPal_API_Spec.md
new file mode 100644
index 0000000..d9b6e38
--- /dev/null
+++ b/docs/PetitPal_API_Spec.md
@@ -0,0 +1 @@
+'"$@"'
diff --git a/docs/README.md b/docs/README.md
index 5089b97..3f02de1 100644
--- a/docs/README.md
+++ b/docs/README.md
@@ -1,22 +1,22 @@
-# PetitPal — MVP Ready-to-Merge Bundle
-
-This bundle adds the **missing backend & scaffolding**, deep links, provider setup screens,
-family sharing endpoints, analytics toggles, and complete docs.
-
-## Quick Start
-
-1. **Cloudflare Worker**
-   - `cd cloudflare-worker`
-   - Set KV binding `petitpal-kv` in dashboard or wrangler.
-   - `wrangler deploy`
-
-2. **Flutter app**
-   - Merge `app/lib/**` into your project.
-   - Add deep-link intent-filter (Android) for `petitpal://invite/*` (see SETUP_GUIDE.md).
-   - Run the app and complete onboarding.
-
-3. **Test**
-   - Invite: create invite, scan QR on second device/emulator, auto-join.
-   - Ask questions that trigger **auto-switch** (news/how-to/quick/chat).
-
-See `SETUP_GUIDE.md` for screenshots and step-by-step details.
+# PetitPal — MVP Ready-to-Merge Bundle
+
+This bundle adds the **missing backend & scaffolding**, deep links, provider setup screens,
+family sharing endpoints, analytics toggles, and complete docs.
+
+## Quick Start
+
+1. **Cloudflare Worker**
+   - `cd cloudflare-worker`
+   - Set KV binding `petitpal-kv` in dashboard or wrangler.
+   - `wrangler deploy`
+
+2. **Flutter app**
+   - Merge `app/lib/**` into your project.
+   - Add deep-link intent-filter (Android) for `petitpal://invite/*` (see SETUP_GUIDE.md).
+   - Run the app and complete onboarding.
+
+3. **Test**
+   - Invite: create invite, scan QR on second device/emulator, auto-join.
+   - Ask questions that trigger **auto-switch** (news/how-to/quick/chat).
+
+See `SETUP_GUIDE.md` for screenshots and step-by-step details.
diff --git a/docs/README_B1.md b/docs/README_B1.md
new file mode 100644
index 0000000..5fee383
--- /dev/null
+++ b/docs/README_B1.md
@@ -0,0 +1,33 @@
+# PetitPal MVP (B1)
+
+This overlay adds:
+- Flutter app code under `petitpal/lib` (onboarding, themes, voice, worker API client)
+- Cloudflare Worker under `cloudflare-worker/`
+- Central config at `petitpal/lib/config/internal_config.dart`
+
+## Quick Start
+
+1) **Copy files** into your repo, keeping the same folder names.
+2) In a terminal from the `petitpal/` folder:
+   ```bash
+   flutter pub get
+   flutter run -d emulator-5554
+   ```
+3) Test the Worker locally:
+   ```bash
+   cd cloudflare-worker
+   wrangler dev
+   ```
+
+### Android package
+The app uses package `com.petitpal.app`. No Firebase is required for B1.
+
+### Where to change things
+- Toggles, DSNs, Worker URL: `lib/config/internal_config.dart`
+- Themes: `lib/src/theme/themes.dart`
+- Onboarding: `lib/src/onboarding/onboarding_flow.dart`
+- Voice UI: `lib/src/voice/voice_screen.dart`
+- Worker routes: `cloudflare-worker/worker.js`
+
+### Firebase (optional, later)
+We intentionally skipped Gradle plugins so you can add `google-services.json` later without breaking the B1 build.
diff --git a/docs/README_B1_1.md b/docs/README_B1_1.md
new file mode 100644
index 0000000..f2f69cf
--- /dev/null
+++ b/docs/README_B1_1.md
@@ -0,0 +1,12 @@
+# PetitPal B1.1 (fix: remove qr_code_scanner)
+
+Run:
+  cd petitpal
+  flutter pub get
+  flutter clean
+  flutter run
+
+If you had the previous overlay, this build removes the 'qr_code_scanner' package which caused AGP namespace errors on Windows.
+
+
+B1.2: Fix missing import in settings_screen.dart.
diff --git a/docs/README_MVP.md b/docs/README_MVP.md
new file mode 100644
index 0000000..ae7a823
--- /dev/null
+++ b/docs/README_MVP.md
@@ -0,0 +1,34 @@
+# PetitPal MVP v1.0 (Full package)
+
+## What’s included
+- Flutter app with Riverpod, onboarding (theme + provider setup), voice PTT, settings (theme + default provider), family hub (QR invite display & join stub), offline banner, and error handling.
+- Cloudflare Worker proxy that routes to OpenAI, Gemini, xAI, and DeepSeek. No keys are stored by default; app sends the key per request.
+- Central config: `lib/config/internal_config.dart`
+
+## Run
+1. Flutter
+   ```bash
+   cd petitpal
+   flutter pub get
+   flutter run
+   ```
+
+2. Worker
+   ```bash
+   cd ../cloudflare-worker
+   npm i -g wrangler
+   wrangler login
+   wrangler kv namespace create petitpal-kv   # once
+   # paste the ID into wrangler.toml
+   wrangler deploy
+   ```
+
+## Where to change things
+- Toggles/DSNs/Worker URL: `lib/config/internal_config.dart`
+- Themes: `lib/src/theme/themes.dart`
+- Provider setup UI: `lib/src/onboarding/provider_setup_step.dart`
+- Worker calls: `cloudflare-worker/worker.js`
+
+## Notes
+- Camera/QR scanning is postponed to a later build to avoid AGP issues; invite QR display + code paste are in place.
+- Firebase (Analytics/Crashlytics) is off by default; enable later with Gradle plugin + JSON and toggles in `InternalConfig`.
diff --git a/docs/SETUP_GUIDE.md b/docs/SETUP_GUIDE.md
index 66a2d05..d9b6e38 100644
--- a/docs/SETUP_GUIDE.md
+++ b/docs/SETUP_GUIDE.md
@@ -1,41 +1 @@
-# Setup Guide (with screenshots)
-
-## Prereqs
-- Flutter (stable), Android SDK, a physical or virtual device.
-- Cloudflare account (Workers + KV), Firebase project (optional for MVP), Sentry DSN (optional).
-
-## Cloudflare Worker
-1. Open Cloudflare dashboard → **Workers & Pages** → Create a Worker named `petitpal-api`.
-2. Add a **KV Namespace** called `petitpal-kv` and bind it to the Worker.
-3. Paste `cloudflare-worker/worker.js` into the editor, set compatibility date, and **Deploy**.
-4. (Optional) Add Sentry DSN as a secret.
-
-## Deep Links (Android)
-Add to `android/app/src/main/AndroidManifest.xml`:
-```xml
-<intent-filter android:autoVerify="true">
-  <action android:name="android.intent.action.VIEW"/>
-  <category android:name="android.intent.category.DEFAULT"/>
-  <category android:name="android.intent.category.BROWSABLE"/>
-  <data android:scheme="petitpal" android:host="invite"/>
-</intent-filter>
-```
-
-## Firebase (optional now)
-- Add `google-services.json` to `android/app/`.
-- Flip toggles in `lib/config/internal_config.dart` when launching.
-
-## Keys (temporary live call path)
-During MVP, pass provider keys only for the active /api/chat call:
-```dart
-final res = await api.chat(
-  text: "What's the latest on ...",
-  liveKeys: {
-    "openai": "<sk-...>",
-    "gemini": "<AIza...>",
-    "grok": "<xai_...>",
-    "deepseek": "<ds_...>"
-  },
-);
-```
-Keys are **not persisted** server-side. Encrypted backups are stored as blobs in KV separately.
+'"$@"'
diff --git a/docs/TROUBLESHOOTING.md b/docs/TROUBLESHOOTING.md
new file mode 100644
index 0000000..d9b6e38
--- /dev/null
+++ b/docs/TROUBLESHOOTING.md
@@ -0,0 +1 @@
+'"$@"'
diff --git a/petitpal/.gitignore b/petitpal/.gitignore
index 79c113f..e3dafe1 100644
--- a/petitpal/.gitignore
+++ b/petitpal/.gitignore
@@ -1,45 +1,45 @@
-# Miscellaneous
-*.class
-*.log
-*.pyc
-*.swp
-.DS_Store
-.atom/
-.build/
-.buildlog/
-.history
-.svn/
-.swiftpm/
-migrate_working_dir/
-
-# IntelliJ related
-*.iml
-*.ipr
-*.iws
-.idea/
-
-# The .vscode folder contains launch configuration and tasks you configure in
-# VS Code which you may wish to be included in version control, so this line
-# is commented out by default.
-#.vscode/
-
-# Flutter/Dart/Pub related
-**/doc/api/
-**/ios/Flutter/.last_build_id
-.dart_tool/
-.flutter-plugins
-.flutter-plugins-dependencies
-.pub-cache/
-.pub/
-/build/
-
-# Symbolication related
-app.*.symbols
-
-# Obfuscation related
-app.*.map.json
-
-# Android Studio will place build artifacts here
-/android/app/debug
-/android/app/profile
-/android/app/release
+# Miscellaneous
+*.class
+*.log
+*.pyc
+*.swp
+.DS_Store
+.atom/
+.build/
+.buildlog/
+.history
+.svn/
+.swiftpm/
+migrate_working_dir/
+
+# IntelliJ related
+*.iml
+*.ipr
+*.iws
+.idea/
+
+# The .vscode folder contains launch configuration and tasks you configure in
+# VS Code which you may wish to be included in version control, so this line
+# is commented out by default.
+#.vscode/
+
+# Flutter/Dart/Pub related
+**/doc/api/
+**/ios/Flutter/.last_build_id
+.dart_tool/
+.flutter-plugins
+.flutter-plugins-dependencies
+.pub-cache/
+.pub/
+/build/
+
+# Symbolication related
+app.*.symbols
+
+# Obfuscation related
+app.*.map.json
+
+# Android Studio will place build artifacts here
+/android/app/debug
+/android/app/profile
+/android/app/release
diff --git a/petitpal/.metadata b/petitpal/.metadata
index af5cda8..bf05774 100644
--- a/petitpal/.metadata
+++ b/petitpal/.metadata
@@ -1,45 +1,45 @@
-# This file tracks properties of this Flutter project.
-# Used by Flutter tool to assess capabilities and perform upgrades etc.
-#
-# This file should be version controlled and should not be manually edited.
-
-version:
-  revision: "edada7c56edf4a183c1735310e123c7f923584f1"
-  channel: "stable"
-
-project_type: app
-
-# Tracks metadata for the flutter migrate command
-migration:
-  platforms:
-    - platform: root
-      create_revision: edada7c56edf4a183c1735310e123c7f923584f1
-      base_revision: edada7c56edf4a183c1735310e123c7f923584f1
-    - platform: android
-      create_revision: edada7c56edf4a183c1735310e123c7f923584f1
-      base_revision: edada7c56edf4a183c1735310e123c7f923584f1
-    - platform: ios
-      create_revision: edada7c56edf4a183c1735310e123c7f923584f1
-      base_revision: edada7c56edf4a183c1735310e123c7f923584f1
-    - platform: linux
-      create_revision: edada7c56edf4a183c1735310e123c7f923584f1
-      base_revision: edada7c56edf4a183c1735310e123c7f923584f1
-    - platform: macos
-      create_revision: edada7c56edf4a183c1735310e123c7f923584f1
-      base_revision: edada7c56edf4a183c1735310e123c7f923584f1
-    - platform: web
-      create_revision: edada7c56edf4a183c1735310e123c7f923584f1
-      base_revision: edada7c56edf4a183c1735310e123c7f923584f1
-    - platform: windows
-      create_revision: edada7c56edf4a183c1735310e123c7f923584f1
-      base_revision: edada7c56edf4a183c1735310e123c7f923584f1
-
-  # User provided section
-
-  # List of Local paths (relative to this file) that should be
-  # ignored by the migrate tool.
-  #
-  # Files that are not part of the templates will be ignored by default.
-  unmanaged_files:
-    - 'lib/main.dart'
-    - 'ios/Runner.xcodeproj/project.pbxproj'
+# This file tracks properties of this Flutter project.
+# Used by Flutter tool to assess capabilities and perform upgrades etc.
+#
+# This file should be version controlled and should not be manually edited.
+
+version:
+  revision: "edada7c56edf4a183c1735310e123c7f923584f1"
+  channel: "stable"
+
+project_type: app
+
+# Tracks metadata for the flutter migrate command
+migration:
+  platforms:
+    - platform: root
+      create_revision: edada7c56edf4a183c1735310e123c7f923584f1
+      base_revision: edada7c56edf4a183c1735310e123c7f923584f1
+    - platform: android
+      create_revision: edada7c56edf4a183c1735310e123c7f923584f1
+      base_revision: edada7c56edf4a183c1735310e123c7f923584f1
+    - platform: ios
+      create_revision: edada7c56edf4a183c1735310e123c7f923584f1
+      base_revision: edada7c56edf4a183c1735310e123c7f923584f1
+    - platform: linux
+      create_revision: edada7c56edf4a183c1735310e123c7f923584f1
+      base_revision: edada7c56edf4a183c1735310e123c7f923584f1
+    - platform: macos
+      create_revision: edada7c56edf4a183c1735310e123c7f923584f1
+      base_revision: edada7c56edf4a183c1735310e123c7f923584f1
+    - platform: web
+      create_revision: edada7c56edf4a183c1735310e123c7f923584f1
+      base_revision: edada7c56edf4a183c1735310e123c7f923584f1
+    - platform: windows
+      create_revision: edada7c56edf4a183c1735310e123c7f923584f1
+      base_revision: edada7c56edf4a183c1735310e123c7f923584f1
+
+  # User provided section
+
+  # List of Local paths (relative to this file) that should be
+  # ignored by the migrate tool.
+  #
+  # Files that are not part of the templates will be ignored by default.
+  unmanaged_files:
+    - 'lib/main.dart'
+    - 'ios/Runner.xcodeproj/project.pbxproj'
diff --git a/petitpal/README.md b/petitpal/README.md
index 96d601f..352926f 100644
--- a/petitpal/README.md
+++ b/petitpal/README.md
@@ -1,3 +1,3 @@
-# petitpal
-
-A new Flutter project.
+# petitpal
+
+A new Flutter project.
diff --git a/petitpal/analysis_options.yaml b/petitpal/analysis_options.yaml
index b2288a0..d9b6e38 100644
--- a/petitpal/analysis_options.yaml
+++ b/petitpal/analysis_options.yaml
@@ -1,8 +1 @@
-include: package:flutter_lints/flutter.yaml
-
-linter:
-  rules:
-    - always_declare_return_types
-    - avoid_print
-    - cancel_subscriptions
-    - close_sinks
+'"$@"'
diff --git a/petitpal/android/.gitignore b/petitpal/android/.gitignore
index be3943c..c908258 100644
--- a/petitpal/android/.gitignore
+++ b/petitpal/android/.gitignore
@@ -1,14 +1,14 @@
-gradle-wrapper.jar
-/.gradle
-/captures/
-/gradlew
-/gradlew.bat
-/local.properties
-GeneratedPluginRegistrant.java
-.cxx/
-
-# Remember to never publicly share your keystore.
-# See https://flutter.dev/to/reference-keystore
-key.properties
-**/*.keystore
-**/*.jks
+gradle-wrapper.jar
+/.gradle
+/captures/
+/gradlew
+/gradlew.bat
+/local.properties
+GeneratedPluginRegistrant.java
+.cxx/
+
+# Remember to never publicly share your keystore.
+# See https://flutter.dev/to/reference-keystore
+key.properties
+**/*.keystore
+**/*.jks
diff --git a/petitpal/android/app/build.gradle b/petitpal/android/app/build.gradle
index 6126289..d9b6e38 100644
--- a/petitpal/android/app/build.gradle
+++ b/petitpal/android/app/build.gradle
@@ -1,124 +1 @@
-plugins {
-    id "com.android.application"
-    id "kotlin-android"
-    id "dev.flutter.flutter-gradle-plugin"
-}
-
-// Apply Firebase plugins conditionally
-def googleServicesFile = file('google-services.json')
-if (googleServicesFile.exists()) {
-    apply plugin: 'com.google.gms.google-services'
-    apply plugin: 'com.google.firebase.crashlytics'
-}
-
-def localProperties = new Properties()
-def localPropertiesFile = rootProject.file('local.properties')
-if (localPropertiesFile.exists()) {
-    localPropertiesFile.withReader('UTF-8') { reader ->
-        localProperties.load(reader)
-    }
-}
-
-def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
-if (flutterVersionCode == null) {
-    flutterVersionCode = '1'
-}
-
-def flutterVersionName = localProperties.getProperty('flutter.versionName')
-if (flutterVersionName == null) {
-    flutterVersionName = '1.0.0'
-}
-
-android {
-    namespace "com.petitpal.app"
-    compileSdk 35  // Updated to fix plugin compatibility
-    ndkVersion "27.0.12077973"  // CRITICAL: Pinned NDK version to avoid build errors
-
-    compileOptions {
-        sourceCompatibility JavaVersion.VERSION_1_8
-        targetCompatibility JavaVersion.VERSION_1_8
-    }
-
-    kotlinOptions {
-        jvmTarget = '1.8'
-    }
-
-    sourceSets {
-        main.java.srcDirs += 'src/main/kotlin'
-    }
-
-    defaultConfig {
-        applicationId "com.petitpal.app"
-        minSdkVersion 23  // Required for Firebase & modern features
-        targetSdkVersion 34
-        versionCode flutterVersionCode.toInteger()
-        versionName flutterVersionName
-        
-        // Multidex support for Firebase
-        multiDexEnabled true
-        
-        // Proguard configuration
-        proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
-    }
-
-    signingConfigs {
-        release {
-            // TODO: Configure release signing
-            // keyAlias keystoreProperties['keyAlias']
-            // keyPassword keystoreProperties['keyPassword']
-            // storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
-            // storePassword keystoreProperties['storePassword']
-        }
-    }
-
-    buildTypes {
-        release {
-            signingConfig signingConfigs.debug  // Change to signingConfigs.release for production
-            minifyEnabled true
-            shrinkResources true
-            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
-        }
-        
-        debug {
-            applicationIdSuffix ".debug"
-            debuggable true
-            minifyEnabled false
-        }
-    }
-
-    packagingOptions {
-        pickFirst '**/libc++_shared.so'
-        pickFirst '**/libjsc.so'
-    }
-
-    // Lint configuration for seniors-focused app
-    lintOptions {
-        disable 'InvalidPackage', 'UnusedResources'
-        checkReleaseBuilds true
-        abortOnError false
-    }
-}
-
-flutter {
-    source '../..'
-}
-
-dependencies {
-    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
-    
-    // AndroidX dependencies
-    implementation 'androidx.core:core-ktx:1.13.1'
-    implementation 'androidx.multidex:multidex:2.0.1'
-    
-    // Firebase dependencies (only when google-services.json exists)
-    if (googleServicesFile.exists()) {
-        // Firebase BoM - ensures compatible versions
-        implementation platform('com.google.firebase:firebase-bom:33.6.0')
-        implementation 'com.google.firebase:firebase-analytics-ktx'
-        implementation 'com.google.firebase:firebase-crashlytics-ktx'
-        implementation 'com.google.firebase:firebase-core'
-    }
-    
-    // For file sharing
-    implementation 'androidx.core:core:1.13.1'
-}
\ No newline at end of file
+'"$@"'
diff --git a/petitpal/android/app/proguard-rules.pro b/petitpal/android/app/proguard-rules.pro
new file mode 100644
index 0000000..d9b6e38
--- /dev/null
+++ b/petitpal/android/app/proguard-rules.pro
@@ -0,0 +1 @@
+'"$@"'
diff --git a/petitpal/android/app/src/debug/AndroidManifest.xml b/petitpal/android/app/src/debug/AndroidManifest.xml
index 399f698..8ffe024 100644
--- a/petitpal/android/app/src/debug/AndroidManifest.xml
+++ b/petitpal/android/app/src/debug/AndroidManifest.xml
@@ -1,7 +1,7 @@
-<manifest xmlns:android="http://schemas.android.com/apk/res/android">
-    <!-- The INTERNET permission is required for development. Specifically,
-         the Flutter tool needs it to communicate with the running application
-         to allow setting breakpoints, to provide hot reload, etc.
-    -->
-    <uses-permission android:name="android.permission.INTERNET"/>
-</manifest>
+<manifest xmlns:android="http://schemas.android.com/apk/res/android">
+    <!-- The INTERNET permission is required for development. Specifically,
+         the Flutter tool needs it to communicate with the running application
+         to allow setting breakpoints, to provide hot reload, etc.
+    -->
+    <uses-permission android:name="android.permission.INTERNET"/>
+</manifest>
diff --git a/petitpal/android/app/src/main/AndroidManifest.xml b/petitpal/android/app/src/main/AndroidManifest.xml
index f1b48a6..d9b6e38 100644
--- a/petitpal/android/app/src/main/AndroidManifest.xml
+++ b/petitpal/android/app/src/main/AndroidManifest.xml
@@ -1,159 +1 @@
-<manifest xmlns:android="http://schemas.android.com/apk/res/android"
-    package="com.petitpal.app">
-
-    <!-- Internet & Network -->
-    <uses-permission android:name="android.permission.INTERNET" />
-    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
-    
-    <!-- Audio & Voice -->
-    <uses-permission android:name="android.permission.RECORD_AUDIO" />
-    <uses-permission android:name="android.permission.MODIFY_AUDIO_SETTINGS" />
-    
-    <!-- Storage (for caching and offline features) -->
-    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" 
-        android:maxSdkVersion="28" />
-    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" 
-        android:maxSdkVersion="32" />
-    
-    <!-- Vibration for haptic feedback -->
-    <uses-permission android:name="android.permission.VIBRATE" />
-    
-    <!-- Wake lock for voice interactions -->
-    <uses-permission android:name="android.permission.WAKE_LOCK" />
-    
-    <!-- Foreground service for voice processing -->
-    <uses-permission android:name="android.permission.FOREGROUND_SERVICE" />
-    <uses-permission android:name="android.permission.FOREGROUND_SERVICE_MICROPHONE" />
-    
-    <!-- Optional: Camera for QR code scanning -->
-    <uses-permission android:name="android.permission.CAMERA" />
-    
-    <!-- Features -->
-    <uses-feature 
-        android:name="android.hardware.microphone" 
-        android:required="true" />
-    <uses-feature 
-        android:name="android.hardware.camera" 
-        android:required="false" />
-    <uses-feature 
-        android:name="android.hardware.camera.autofocus" 
-        android:required="false" />
-    <uses-feature 
-        android:name="android.software.app_widgets" 
-        android:required="false" />
-
-    <application
-        android:label="PetitPal"
-        android:name="${applicationName}"
-        android:icon="@mipmap/ic_launcher"
-        android:allowBackup="false"
-        android:dataExtractionRules="@xml/data_extraction_rules"
-        android:fullBackupContent="@xml/backup_rules"
-        android:hardwareAccelerated="true"
-        android:largeHeap="true"
-        android:networkSecurityConfig="@xml/network_security_config"
-        android:requestLegacyExternalStorage="false"
-        android:usesCleartextTraffic="false">
-
-        <!-- Main Activity -->
-        <activity
-            android:name=".MainActivity"
-            android:exported="true"
-            android:launchMode="singleTop"
-            android:theme="@style/LaunchTheme"
-            android:configChanges="orientation|keyboardHidden|keyboard|screenSize|smallestScreenSize|locale|layoutDirection|fontScale|screenLayout|density|uiMode"
-            android:hardwareAccelerated="true"
-            android:windowSoftInputMode="adjustResize"
-            android:screenOrientation="portrait">
-
-            <!-- Standard App Launch -->
-            <intent-filter android:autoVerify="true">
-                <action android:name="android.intent.action.MAIN"/>
-                <category android:name="android.intent.category.LAUNCHER"/>
-            </intent-filter>
-            
-            <!-- Deep Link Support for Family Sharing -->
-            <intent-filter android:autoVerify="true">
-                <action android:name="android.intent.action.VIEW" />
-                <category android:name="android.intent.category.DEFAULT" />
-                <category android:name="android.intent.category.BROWSABLE" />
-                <data android:scheme="petitpal" android:host="invite" />
-            </intent-filter>
-
-            <!-- Handle Share Intents -->
-            <intent-filter>
-                <action android:name="android.intent.action.SEND" />
-                <category android:name="android.intent.category.DEFAULT" />
-                <data android:mimeType="text/plain" />
-            </intent-filter>
-
-            <!-- Flutter Theme Configuration -->
-            <meta-data
-                android:name="io.flutter.embedding.android.NormalTheme"
-                android:resource="@style/NormalTheme" />
-        </activity>
-
-        <!-- Flutter Embedding Version -->
-        <meta-data
-            android:name="flutterEmbedding"
-            android:value="2" />
-
-        <!-- Firebase App ID (Auto-generated - don't edit manually) -->
-        <!-- This will be added automatically when you add google-services.json -->
-        
-        <!-- Crashlytics Build ID -->
-        <meta-data
-            android:name="firebase_crashlytics_collection_enabled"
-            android:value="false" />
-        
-        <!-- Analytics Collection -->
-        <meta-data
-            android:name="firebase_analytics_collection_enabled"
-            android:value="false" />
-
-        <!-- Disable Firebase Performance Monitoring auto-init -->
-        <meta-data
-            android:name="firebase_performance_collection_enabled"
-            android:value="false" />
-
-        <!-- Voice Service (if needed for background voice processing) -->
-        <service
-            android:name=".VoiceProcessingService"
-            android:enabled="true"
-            android:exported="false"
-            android:foregroundServiceType="microphone" />
-
-        <!-- File Provider for sharing -->
-        <provider
-            android:name="androidx.core.content.FileProvider"
-            android:authorities="${applicationId}.fileprovider"
-            android:exported="false"
-            android:grantUriPermissions="true">
-            <meta-data
-                android:name="android.support.FILE_PROVIDER_PATHS"
-                android:resource="@xml/file_paths" />
-        </provider>
-
-    </application>
-
-    <!-- Queries for intent resolution -->
-    <queries>
-        <!-- Camera apps -->
-        <intent>
-            <action android:name="android.media.action.IMAGE_CAPTURE" />
-        </intent>
-        
-        <!-- Share/Send apps -->
-        <intent>
-            <action android:name="android.intent.action.SEND" />
-            <data android:mimeType="*/*" />
-        </intent>
-        
-        <!-- Web browsers for links -->
-        <intent>
-            <action android:name="android.intent.action.VIEW" />
-            <data android:scheme="https" />
-        </intent>
-    </queries>
-
-</manifest>
\ No newline at end of file
+'"$@"'
diff --git a/petitpal/android/app/src/main/kotlin/com/petitpal/app/MainActivity.kt b/petitpal/android/app/src/main/kotlin/com/petitpal/app/MainActivity.kt
index 71f1546..d9b6e38 100644
--- a/petitpal/android/app/src/main/kotlin/com/petitpal/app/MainActivity.kt
+++ b/petitpal/android/app/src/main/kotlin/com/petitpal/app/MainActivity.kt
@@ -1,6 +1 @@
-package com.petitpal.app
-
-import io.flutter.embedding.android.FlutterActivity
-
-class MainActivity: FlutterActivity() {
-}
\ No newline at end of file
+'"$@"'
diff --git a/petitpal/android/app/src/main/res/drawable-v21/launch_background.xml b/petitpal/android/app/src/main/res/drawable-v21/launch_background.xml
index f74085f..1cb7aa2 100644
--- a/petitpal/android/app/src/main/res/drawable-v21/launch_background.xml
+++ b/petitpal/android/app/src/main/res/drawable-v21/launch_background.xml
@@ -1,12 +1,12 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!-- Modify this file to customize your launch splash screen -->
-<layer-list xmlns:android="http://schemas.android.com/apk/res/android">
-    <item android:drawable="?android:colorBackground" />
-
-    <!-- You can insert your own image assets here -->
-    <!-- <item>
-        <bitmap
-            android:gravity="center"
-            android:src="@mipmap/launch_image" />
-    </item> -->
-</layer-list>
+<?xml version="1.0" encoding="utf-8"?>
+<!-- Modify this file to customize your launch splash screen -->
+<layer-list xmlns:android="http://schemas.android.com/apk/res/android">
+    <item android:drawable="?android:colorBackground" />
+
+    <!-- You can insert your own image assets here -->
+    <!-- <item>
+        <bitmap
+            android:gravity="center"
+            android:src="@mipmap/launch_image" />
+    </item> -->
+</layer-list>
diff --git a/petitpal/android/app/src/main/res/drawable/launch_background.xml b/petitpal/android/app/src/main/res/drawable/launch_background.xml
index 881a29e..3755bb2 100644
--- a/petitpal/android/app/src/main/res/drawable/launch_background.xml
+++ b/petitpal/android/app/src/main/res/drawable/launch_background.xml
@@ -1,12 +1,12 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!-- Modify this file to customize your launch splash screen -->
-<layer-list xmlns:android="http://schemas.android.com/apk/res/android">
-    <item android:drawable="@android:color/white" />
-
-    <!-- You can insert your own image assets here -->
-    <item>
-        <bitmap
-            android:gravity="center"
-            android:src="@mipmap/ic_launcher" />
-    </item>
+<?xml version="1.0" encoding="utf-8"?>
+<!-- Modify this file to customize your launch splash screen -->
+<layer-list xmlns:android="http://schemas.android.com/apk/res/android">
+    <item android:drawable="@android:color/white" />
+
+    <!-- You can insert your own image assets here -->
+    <item>
+        <bitmap
+            android:gravity="center"
+            android:src="@mipmap/ic_launcher" />
+    </item>
 </layer-list>
\ No newline at end of file
diff --git a/petitpal/android/app/src/main/res/mipmap-hdpi/ic_launcher.png b/petitpal/android/app/src/main/res/mipmap-hdpi/ic_launcher.png
index db77bb4b7b0906d62b1847e87f15cdcacf6a4f29..9dd955840231cdcf636182695787373dca165cd2 100644
GIT binary patch
literal 72
zcmeAS@N?(olHy`uVBq!ia0vp^93afW1|*O0@9PFjxHyJLgeRvYB>Xt<z{tRHi#egg
SYS9Xy6oaR$pUXO@geCy#uMmg;

literal 544
zcmeAS@N?(olHy`uVBq!ia0vp^9w5xY3?!3`olAj~WQl7;NpOBzNqJ&XDuZK6ep0G}
zXKrG8YEWuoN@d~6R2!h8bpbvhu0Wd6uZuB!w&u2PAxD2eNXD>P5D~Wn-+_Wa#27Xc
zC?Zj|6r#X(-D3u$NCt}(Ms06KgJ4FxJVv{GM)!I~&n8Bnc94O7-Hd)cjDZswgC;Qs
zO=b+9!WcT8F?0rF7!Uys2bs@gozCP?z~o%U<k`UN+s5qQ#T?KrmN7v*f2L%`GO4-^
z(#_kX+jhyc?*UrsvLED<w+p3gfi4y<3GxeO5CDRJfCLa|I1d8%B?X@R0!qL1ba4!c
zIQ;g^b-pGC0f)elH+vJ_clF3>|N3vA*22N<t#oc3|FNCx%`Ll}Jbl*Q`}yg~1ZO@=
zF!6p)NTYsh!6(JdtLiRuwi@`&XeqAXe9fY|=kfFy_3t|md##(iHE+K4ydxH3>aGQG
zlg@K`O_XuxvZ&Ks^m&R!`&1=spLvfx7oGDKDwpwW`#i<K@6w~yiZZH!59hqLTYF-H
zp0%uz(2~z(X$>qdw@AL`7MR}m`rwr|mZgU`8P7SB<Kba6`>kL78fFf!WnuYWm$5Z0
zNXhDbCv&49sM544K|?c)WrFfiZ<W8RzO1)p=v7f>vCi9h0O)B3Pgg&ebxsLQ05GG~
AQ2+n{

diff --git a/petitpal/android/app/src/main/res/mipmap-mdpi/ic_launcher.png b/petitpal/android/app/src/main/res/mipmap-mdpi/ic_launcher.png
index 17987b79bb8a35cc66c3c1fd44f5a5526c1b78be..9dd955840231cdcf636182695787373dca165cd2 100644
GIT binary patch
literal 72
zcmeAS@N?(olHy`uVBq!ia0vp^93afW1|*O0@9PFjxHyJLgeRvYB>Xt<z{tRHi#egg
SYS9Xy6oaR$pUXO@geCy#uMmg;

literal 442
zcmeAS@N?(olHy`uVBq!ia0vp^1|ZDA3?vioaBc-sk|nMYCBgY=CFO}lsSJ)O`AMk?
zp1FzXsX?iUDV2pMQ*D5Xx&nMcT!A!W`0S9QKQy;}1Cl^CgaH=;G9cpY;r$Q>i*pfB
zP2drbID<_#qf;rPZx^FqH)F_D#*k@@q0<?|W-^A&VhjhO+044$%!YxiPI;`p4Q#=k
za-F;6dk-j1J*_nBlG2>3KywUtLX8Ua?`H+NMzkczFPK3<KtaL4z@UHr{Pp|KpFjT|
z1oAia3j-A_^>lFz@i_kW%1NOn0|D2I9n9wzH8m|-tHjsw|9>@K=iMBhxvkv6m8Y-l
zyt<ns@%x_-ezPmiS-=02Ut8`WUGa5ad?jb?UB<rkVmAJ)*Xy}nR&U>Q?X=U+MF$@3
zt`~i=@j|6y)RWMK--}M|=T`o&^Ni>IoWKHEbBXz7?A@mgWoL>!*SXo`SZH-*HSdS+
yn*9;$7;m`l>wYBC5bq;=U}IMqLzqbYCidGC!)_gkIk_C@U<OZDKbLh*2~7avPrJzg

diff --git a/petitpal/android/app/src/main/res/mipmap-xhdpi/ic_launcher.png b/petitpal/android/app/src/main/res/mipmap-xhdpi/ic_launcher.png
index 09d4391482be68e9e4a07fab769b5de337d16eb1..9dd955840231cdcf636182695787373dca165cd2 100644
GIT binary patch
literal 72
zcmeAS@N?(olHy`uVBq!ia0vp^93afW1|*O0@9PFjxHyJLgeRvYB>Xt<z{tRHi#egg
SYS9Xy6oaR$pUXO@geCy#uMmg;

literal 721
zcmeAS@N?(olHy`uVBq!ia0vp^2_VeD3?#3*wSy!iOI#yLg7ec#$`gxH85~pclTsBt
za}(23gHjVyDhp4h+5i=O3-AeX1=1l$e`s#|#^}+&7(N@w0CIr{$Oe+Uk^K-ZP~83C
zcc@hG6rikF&NPT(23>y!y&wkt5C($~2D>~)O*cj@FGjOCM)M>_ixfudOh)?xMu#Fs
z#}Y=@YDTwOM)x{K_j*Q;dPdJ?Mz0n|pLRx{4n|)f>SXlmV)XB04CrSJn#dS5nK2lM
zrZ9#~WelCp7&e13Y$jvaEXHskn$2V!!DN-nWS__6T*l;H&Fopn?A6HZ-6WRLFP=R`
zqG+CE#d4|IbyAI+rJJ`&x9*T`+a=p|0O(+s{UBcyZdkhj=yS1>AirP+0R;mf2uMgM
zC}@~JfByORAh4SyRgi&!(cja>F(l*O+nd+@4m$|6K6KDn_&uvCpV23&>G9HJp{xgg
z<JnHTOuK%sGbNji)8cv6*ZNtnbwxJZ-?eY1e-ZPG#r<}_kct2Ie>oq1^2_p9@|WEo
z*X_Uko@K)qYYv~<poG`LOv(2(Hhkk{Dz;b6_#4<(=XBwh@>>43eQGMdbiGbo>E~Q&
zr<n4_y=h^-h|%}kO&jwCioQ5EzF6K8^VdP)H>YBH{QP^@Sti!`2)uG{irBBq@y*$B
zi#&(U-*=fp74j)RyIw49+0MRPMRU)+a2r*PJ$L5roHt2$UjExCTZSbq%V!HeS7J$N
zdG@vOZB4v_lF7Plrx+hxo7(fCV&}f<lyK#S=nvDw%*y%vwN3psIS+1s7G}QfbZGd|
zV;VoMy*YI2-%hU{-w$hl9!*Y_m~60h&vVVs6)lfgu09v4QWIt25UBGxaN`?mVmn*e
U?z!!Jz`$qlboFyt=akR{0C)T?>Hq)$

diff --git a/petitpal/android/app/src/main/res/mipmap-xxhdpi/ic_launcher.png b/petitpal/android/app/src/main/res/mipmap-xxhdpi/ic_launcher.png
index d5f1c8d34e7a88e3f88bea192c3a370d44689c3c..9dd955840231cdcf636182695787373dca165cd2 100644
GIT binary patch
literal 72
zcmeAS@N?(olHy`uVBq!ia0vp^93afW1|*O0@9PFjxHyJLgeRvYB>Xt<z{tRHi#egg
SYS9Xy6oaR$pUXO@geCy#uMmg;

literal 1031
zcmeAS@N?(olHy`uVBq!ia0vp^6F``Q8Ax83A=Cw=BuiW)N`mv#O3D+9QW+dm@{>{(
zJaZG%Q-e|yQz{EjrrIztFa`(sgt!6~Yi|1%a`XoT0ojZ}lNrNjb9xj&#3c(B0U1_%
zz5^97Xt*<I`!eYGGw1~|=m#_ChcFm~F&M`%SZ6TU=QA3HGn&RTnk6urCox*3Gg@ad
z+GI1@<S^O-Q7)rh9;1CBqhm3nV+o^EDWh`*qe~T|Yc-==4WnBvqgx%LdmW=k1EWVH
zqbCqGF?u#LdbTinH8Xm(F#5DJ`gAb*0#PTUUpJ#)52HU2^)d$ZF$VTC22NlMoX8kB
zi7{v*V-S#>%oq$rQy4?0GKNfJ44uvxI)gC`h-NZ|&0-7(qS@?b!5r36oQ}zyZrNO3
zMO=Or+<~>+A&uN&E!^Sl+>xE!QC-|oJv`ApDhqC^EWD|@=#J`=d#Xzxs4ah}w&Jnc
z$|q_opQ^2TrnVZ0o~wh<3t%W&f<tNc(Fvx&VC63f@(X4V5O7Fnm=6N`&!0cPZsO%v
z3=B;Ao-U3d6}R4ANDmGU6lr~^!Nn0K;_9?HfJbVIkW)*G%Yg&F)*BmaZ)6Dl_&?vn
za8gV0`@6<5-|YBa|J|21FVarliS1gU$698&iU*DCL=pdt&mR>lvYGe#$xqda2bR_R
zvPYgMcHgjZ5nSA^lJr%;<&0do;O^tDDh~=pIxA#coaCY>&N%M2<a5l9V~;L&ZJD?F
zD6?3<TgqciA=l+!=Lp=a%2;%{dX@{HT-OP1|K<}HAM1TO7OY<MaYyH#Pk)4WR?Ts}
zSNX4tLr#6-^m$z!Pd18IzSivQkh7k6T`o7OKThT4#m*F4b=OPt(kAX%9+=X!JT9f}
zc|=Oray6sl!J;#tXm&@~>^tq^U%3DB@ynvKo}b?yu-bFc-u0JHzced$sg7S3zqI(2
z#Km{dPr7I=pQ5>FuK#)QwK?Y`E`B?nP+}U)I#c1+FM*1kNvWG|a(TpksZQ3B@sD~b
z<q`EIyVgP^b`|@{uDX5oB6GTR%^Or)?eBf<KkJg@eR6BbGYJ*-U;nQCudos6R9mG`
zc=6fn-^`2s)0Hm%cpbX>pQ2)*V*TdwjFOtHvV|;OsiDqHi=6%)o4b!)x$)%9pGTsE
z-JL={-Ffv+T87W(Xpooq<`r*VzWQcgBN$$`u}f>-ZQI1BB8ykN*=e4rIsJx9>z}*o
zo~|9<SN`RwE}r7KC~Q%?|CMD5O&m%cKw{Bn6{qJbmFIooO_;g=+H+v4V(@hJb6Mw<
G&;$S>I;xof

diff --git a/petitpal/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher.png b/petitpal/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher.png
index 4d6372eebdb28e45604e46eeda8dd24651419bc0..9dd955840231cdcf636182695787373dca165cd2 100644
GIT binary patch
literal 72
zcmeAS@N?(olHy`uVBq!ia0vp^93afW1|*O0@9PFjxHyJLgeRvYB>Xt<z{tRHi#egg
SYS9Xy6oaR$pUXO@geCy#uMmg;

literal 1443
zcmb`G{WsKk6vsdJTdFg%tJav9_E4vzrOaqkWF|A724Nly!y+?N9`Y<EGuRA6NX2Md
zPqmGQbJPjRLrI#9?bL25ZHra>V6wZ}5(X(D_N(?!*n3`|_r0Hc?=PQw&*vnU?QTFY
zB_M<hJUv`}aj#i9>sH|!j$PP;I}?dppoE_gA(4uc!jV&0!l7_;&p2^pxNo>PEcNJv
za5_RT$o2Mf!<+r?&EbHH6nMoTsDOa;mN(wv8RNsHpG)`^ymG-S5By8<s&Q-yp4r*9
z(t|8L&`vhm$wAg!MByQdFQW1h)eqSS&@P++v^xmx2}OHF$WDZ4QHUN37S3Sd0#=@|
zD*$YR!8QbJ55gWH>=l9iVXzN_eG%Xg2@Xeq76tTZ*dGh~<G>Lo9vl;Zfs+W#BydUw
zCkZ$o1LqWQO$FC9aKlLl*7x9^0q%0}$OMlp@Kk_jHXOjofdePND+j!A{q!8~Jn+s3
z?~~w@4?egS02}8NuulUA=L~QQfm;MzCGd)XhiftT;+zFO&JVyp2mBww?;QByS_1w!
zrQlx%{^cMj0|Bo1FjwY@Q8?Hx0cIPF*@-ZRFpPc#bBw{5@tD(5%sClzIfl8WU~V#u
zm5Q;_F!wa$BSpqhN>W@2De?TKWR*!ujY;Yylk_X5#~V!L*Gw~;$%<BT_6>4Q8~Mad
z@`-kG?yb$a9cHIApZDVZ^U6Xkp<*4rU82O7%}0jjHlK{id@?-wpN*fCHXyXh(bLt*
zPc}H-x0e4E&nQ>y%B-(EL=9}RyC%MyX=upHuFhAk&MLbsF0LP-q`XnH78@fT+pKPW
zu72MW`|?8h<N~B$l%}NU6KvLZj~&>t^tz$iC}ZwLp4tB;Q49K!QCF3@!iB1qOI=?w
z7In!}F~ij(18UYUjnbmC!qKhPo%24?8U1x{7o(+?^Zu0Hx81|FuS?bJ0jgBhEMzf<
zCgUq7r2OCB(`XkKcN-TL>u5y#dD6D!)5W?`O5)V^>jb)P)GBdy%t$uUMpf$SNV31$
zb||OojAbvMP?T@$h_ZiFLFVHDmbyMhJF|-_)HX3%m=CDI+ID$0^C>kzxprBW)hw(v
zr!Gmda);ICoQyhV_oP5+C%?jcG8v+D@9f?Dk*!BxY}dazmrT@64UrP3hlslANK)bq
z$67n83eh}OeW&SV@HG95P|bjfqJ7gw$e+`Hxo!4cx`jdK1bJ>YDSpGKLPZ^1cv$ek
zIB?0S<#tX?SJCLWdMd{-ME?$hc7A$zBOdIJ)4!KcAwb=VMov)nK;9z>x~rfT1>dS+
zZ6#`2v@`jgbqq)P22H)Tx2CpmM^o1$B+xT6`(v%5xJ(?j#>Q$+rx_R|7TzDZe{J6q
zG1*EcU%tE?!kO%^M;3aM6JN*LAKUVb^xz8-Pxo#jR5(-KBeLJvA@-gxNHx0M-ZJLl
z;#JwQoh~9V?`UVo#}{6ka@II>++D@%KqGpMdlQ}?9E*wFcf5(#XQnP$Dk5~%iX^>f
z<NEXJGYh+`9LE^Z1#g~OZ)yl?O>%$y;?M0BLp{O3a(-4A?ewryHrrD%cx#Q^%KY1H
zNre$ve+vceSLZcNY4U(RBX&)oZn*Py()h)XkE?PL$!bNb{N5FVI2Y%LKEm%yvpyTP
z(1P?z<YzdcoCZ;A^sD<`wcO1=DLw>~7YxD~Rf<<Lt&2H?f`^~9TW?0O(WnyXeZvF-
hHxv6WEXUT@T$j&O|7sZ6iSVC<kf$5l^{TT-@h=>(a@_y`

diff --git a/petitpal/android/app/src/main/res/values-night/styles.xml b/petitpal/android/app/src/main/res/values-night/styles.xml
index aab1184..103c604 100644
--- a/petitpal/android/app/src/main/res/values-night/styles.xml
+++ b/petitpal/android/app/src/main/res/values-night/styles.xml
@@ -1,9 +1,9 @@
-<?xml version="1.0" encoding="utf-8"?>
-<resources>
-    <!-- Theme applied to the Android Window while the process is starting when the OS's Dark Mode setting is on -->
-    <style name="LaunchTheme" parent="@android:style/Theme.Black.NoTitleBar">
-        <!-- Show a splash screen on the activity. Automatically removed when
-             the Flutter engine draws its first frame -->
-        <item name="android:windowBackground">@drawable/launch_background</item>
-    </style>
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <!-- Theme applied to the Android Window while the process is starting when the OS's Dark Mode setting is on -->
+    <style name="LaunchTheme" parent="@android:style/Theme.Black.NoTitleBar">
+        <!-- Show a splash screen on the activity. Automatically removed when
+             the Flutter engine draws its first frame -->
+        <item name="android:windowBackground">@drawable/launch_background</item>
+    </style>
 </resources>
\ No newline at end of file
diff --git a/petitpal/android/app/src/main/res/values/styles.xml b/petitpal/android/app/src/main/res/values/styles.xml
index 5e68504..0e663d3 100644
--- a/petitpal/android/app/src/main/res/values/styles.xml
+++ b/petitpal/android/app/src/main/res/values/styles.xml
@@ -1,19 +1,19 @@
-<?xml version="1.0" encoding="utf-8"?>
-<resources>
-    <!-- Theme applied to the Android Window while the process is starting when the OS's Dark Mode setting is off -->
-    <style name="LaunchTheme" parent="@android:style/Theme.Light.NoTitleBar">
-        <!-- Show a splash screen on the activity. Automatically removed when
-             the Flutter engine draws its first frame -->
-        <item name="android:windowBackground">@drawable/launch_background</item>
-    </style>
-    
-    <!-- Theme applied to the Android Window as soon as the process has started.
-         This theme determines the color of the Android Window while your
-         Flutter UI initializes, as well as behind your Flutter UI while its
-         running.
-
-         This Theme is only used starting with V2 of Flutter's Android embedding. -->
-    <style name="NormalTheme" parent="@android:style/Theme.Light.NoTitleBar">
-        <item name="android:windowBackground">?android:colorBackground</item>
-    </style>
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <!-- Theme applied to the Android Window while the process is starting when the OS's Dark Mode setting is off -->
+    <style name="LaunchTheme" parent="@android:style/Theme.Light.NoTitleBar">
+        <!-- Show a splash screen on the activity. Automatically removed when
+             the Flutter engine draws its first frame -->
+        <item name="android:windowBackground">@drawable/launch_background</item>
+    </style>
+    
+    <!-- Theme applied to the Android Window as soon as the process has started.
+         This theme determines the color of the Android Window while your
+         Flutter UI initializes, as well as behind your Flutter UI while its
+         running.
+
+         This Theme is only used starting with V2 of Flutter's Android embedding. -->
+    <style name="NormalTheme" parent="@android:style/Theme.Light.NoTitleBar">
+        <item name="android:windowBackground">?android:colorBackground</item>
+    </style>
 </resources>
\ No newline at end of file
diff --git a/petitpal/android/app/src/main/res/xml/backup_rules.xml b/petitpal/android/app/src/main/res/xml/backup_rules.xml
index 8ca5b14..9417264 100644
--- a/petitpal/android/app/src/main/res/xml/backup_rules.xml
+++ b/petitpal/android/app/src/main/res/xml/backup_rules.xml
@@ -1,4 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<full-backup-content>
-    <!-- Exclude specific shared preferences that contain GCM registration Id -->
+<?xml version="1.0" encoding="utf-8"?>
+<full-backup-content>
+    <!-- Exclude specific shared preferences that contain GCM registration Id -->
 </full-backup-content>
\ No newline at end of file
diff --git a/petitpal/android/app/src/main/res/xml/data_extraction_rules.xml b/petitpal/android/app/src/main/res/xml/data_extraction_rules.xml
index e644645..10ee02c 100644
--- a/petitpal/android/app/src/main/res/xml/data_extraction_rules.xml
+++ b/petitpal/android/app/src/main/res/xml/data_extraction_rules.xml
@@ -1,13 +1,13 @@
-<?xml version="1.0" encoding="utf-8"?>
-<data-extraction-rules>
-    <cloud-backup>
-        <!-- Use this rule to set which files are backed up to Android Auto Backup.  -->
-        <include domain="sharedpref" path="."/>
-        <exclude domain="sharedpref" path="device.xml"/>
-    </cloud-backup>
-    <!-- Use this rule to set which files are backed up to Android D2D.  -->
-    <device-transfer>
-        <include domain="sharedpref" path="."/>
-        <exclude domain="sharedpref" path="device.xml"/>
-    </device-transfer>
+<?xml version="1.0" encoding="utf-8"?>
+<data-extraction-rules>
+    <cloud-backup>
+        <!-- Use this rule to set which files are backed up to Android Auto Backup.  -->
+        <include domain="sharedpref" path="."/>
+        <exclude domain="sharedpref" path="device.xml"/>
+    </cloud-backup>
+    <!-- Use this rule to set which files are backed up to Android D2D.  -->
+    <device-transfer>
+        <include domain="sharedpref" path="."/>
+        <exclude domain="sharedpref" path="device.xml"/>
+    </device-transfer>
 </data-extraction-rules>
\ No newline at end of file
diff --git a/petitpal/android/app/src/profile/AndroidManifest.xml b/petitpal/android/app/src/profile/AndroidManifest.xml
index 399f698..8ffe024 100644
--- a/petitpal/android/app/src/profile/AndroidManifest.xml
+++ b/petitpal/android/app/src/profile/AndroidManifest.xml
@@ -1,7 +1,7 @@
-<manifest xmlns:android="http://schemas.android.com/apk/res/android">
-    <!-- The INTERNET permission is required for development. Specifically,
-         the Flutter tool needs it to communicate with the running application
-         to allow setting breakpoints, to provide hot reload, etc.
-    -->
-    <uses-permission android:name="android.permission.INTERNET"/>
-</manifest>
+<manifest xmlns:android="http://schemas.android.com/apk/res/android">
+    <!-- The INTERNET permission is required for development. Specifically,
+         the Flutter tool needs it to communicate with the running application
+         to allow setting breakpoints, to provide hot reload, etc.
+    -->
+    <uses-permission android:name="android.permission.INTERNET"/>
+</manifest>
diff --git a/petitpal/android/build.gradle b/petitpal/android/build.gradle
index 7949833..d9b6e38 100644
--- a/petitpal/android/build.gradle
+++ b/petitpal/android/build.gradle
@@ -1,30 +1 @@
-buildscript {
-    ext.kotlin_version = '1.8.22'
-    repositories {
-        google()
-        mavenCentral()
-    }
-
-    dependencies {
-        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
-    }
-}
-
-allprojects {
-    repositories {
-        google()
-        mavenCentral()
-    }
-}
-
-rootProject.buildDir = '../build'
-subprojects {
-    project.buildDir = "${rootProject.buildDir}/${project.name}"
-}
-subprojects {
-    project.evaluationDependsOn(':app')
-}
-
-tasks.register("clean", Delete) {
-    delete rootProject.buildDir
-}
\ No newline at end of file
+'"$@"'
diff --git a/petitpal/android/gradle.properties b/petitpal/android/gradle.properties
index 4d3226a..d9b6e38 100644
--- a/petitpal/android/gradle.properties
+++ b/petitpal/android/gradle.properties
@@ -1,3 +1 @@
-org.gradle.jvmargs=-Xmx1536M
-android.useAndroidX=true
-android.enableJetifier=true
\ No newline at end of file
+'"$@"'
diff --git a/petitpal/android/gradle/wrapper/gradle-wrapper.properties b/petitpal/android/gradle/wrapper/gradle-wrapper.properties
index ac3b479..dcc7e10 100644
--- a/petitpal/android/gradle/wrapper/gradle-wrapper.properties
+++ b/petitpal/android/gradle/wrapper/gradle-wrapper.properties
@@ -1,5 +1,5 @@
-distributionBase=GRADLE_USER_HOME
-distributionPath=wrapper/dists
-zipStoreBase=GRADLE_USER_HOME
-zipStorePath=wrapper/dists
-distributionUrl=https\://services.gradle.org/distributions/gradle-8.12-all.zip
+distributionBase=GRADLE_USER_HOME
+distributionPath=wrapper/dists
+zipStoreBase=GRADLE_USER_HOME
+zipStorePath=wrapper/dists
+distributionUrl=https\://services.gradle.org/distributions/gradle-8.12-all.zip
diff --git a/petitpal/android/settings.gradle b/petitpal/android/settings.gradle
index 83133bc..d9b6e38 100644
--- a/petitpal/android/settings.gradle
+++ b/petitpal/android/settings.gradle
@@ -1,25 +1 @@
-pluginManagement {
-    def flutterSdkPath = {
-        def properties = new Properties()
-        file("local.properties").withInputStream { properties.load(it) }
-        def flutterSdkPath = properties.getProperty("flutter.sdk")
-        assert flutterSdkPath != null, "flutter.sdk not set in local.properties"
-        return flutterSdkPath
-    }()
-
-    includeBuild("$flutterSdkPath/packages/flutter_tools/gradle")
-
-    repositories {
-        google()
-        mavenCentral()
-        gradlePluginPortal()
-    }
-}
-
-plugins {
-    id "dev.flutter.flutter-plugin-loader" version "1.0.0"
-    id "com.android.application" version "8.3.0" apply false
-    id "org.jetbrains.kotlin.android" version "1.8.22" apply false
-}
-
-include ":app"
\ No newline at end of file
+'"$@"'
diff --git a/petitpal/assets/config/onboarding.json b/petitpal/assets/config/onboarding.json
index 5355031..d9b6e38 100644
--- a/petitpal/assets/config/onboarding.json
+++ b/petitpal/assets/config/onboarding.json
@@ -1,41 +1 @@
-{
-  "version": 1,
-  "steps": [
-    {
-      "id": "welcome",
-      "title": "Welcome to PetitPal",
-      "subtitle": "Your voice-first assistant",
-      "voice_text": "Welcome to PetitPal! I'm your voice-first assistant, designed to help you with questions, conversations, and daily tasks. Let's get you set up.",
-      "action": "Get Started"
-    },
-    {
-      "id": "voice_setup",
-      "title": "Voice Setup",
-      "subtitle": "Let's test your microphone",
-      "voice_text": "First, let's make sure I can hear you clearly. I'll need permission to use your microphone. This stays private on your device.",
-      "action": "Test Voice"
-    },
-    {
-      "id": "theme_selection", 
-      "title": "Choose Your Theme",
-      "subtitle": "Pick what looks best for you",
-      "voice_text": "Now let's choose a theme that's comfortable for your eyes. You can always change this later in settings.",
-      "action": "Choose Theme"
-    },
-    {
-      "id": "llm_setup",
-      "title": "AI Assistant Setup",
-      "subtitle": "Connect your AI provider",
-      "voice_text": "To give you the best responses, you'll need to add an API key from an AI provider like OpenAI, Google, or others. This is optional - you can skip for now.",
-      "action": "Setup Later",
-      "secondary_action": "Add Key Now"
-    },
-    {
-      "id": "complete",
-      "title": "All Set!",
-      "subtitle": "PetitPal is ready to help",
-      "voice_text": "Perfect! PetitPal is now ready to assist you. Just tap the microphone button and start talking. I'll help you with questions, information, and conversations.",
-      "action": "Start Using PetitPal"
-    }
-  ]
-}
\ No newline at end of file
+'"$@"'
diff --git a/petitpal/assets/config/provider_setup.json b/petitpal/assets/config/provider_setup.json
index f755fe7..d9b6e38 100644
--- a/petitpal/assets/config/provider_setup.json
+++ b/petitpal/assets/config/provider_setup.json
@@ -1,73 +1 @@
-{
-  "version": 1,
-  "providers": [
-    {
-      "id": "openai",
-      "name": "OpenAI (ChatGPT)",
-      "description": "Best for general questions and conversations",
-      "model": "GPT-4o Mini",
-      "signup_url": "https://platform.openai.com/signup",
-      "api_key_url": "https://platform.openai.com/api-keys",
-      "pricing_info": "Pay per use, very affordable for casual usage",
-      "key_format": "sk-...",
-      "setup_instructions": [
-        "Visit platform.openai.com",
-        "Sign up for an account",
-        "Go to API Keys section", 
-        "Create a new API key",
-        "Copy and paste it here"
-      ]
-    },
-    {
-      "id": "gemini",
-      "name": "Google Gemini",
-      "description": "Perfect for quick responses and summaries",
-      "model": "Gemini 1.5 Flash",
-      "signup_url": "https://aistudio.google.com/",
-      "api_key_url": "https://aistudio.google.com/app/apikey",
-      "pricing_info": "Generous free tier available",
-      "key_format": "AI...",
-      "setup_instructions": [
-        "Visit aistudio.google.com",
-        "Sign in with Google account",
-        "Go to Get API Key",
-        "Create API key",
-        "Copy and paste it here"
-      ]
-    },
-    {
-      "id": "grok",
-      "name": "Grok (X.AI)",
-      "description": "Great for current events and trending topics", 
-      "model": "Grok-2 Mini",
-      "signup_url": "https://x.ai/",
-      "api_key_url": "https://console.x.ai/",
-      "pricing_info": "Requires X Premium subscription",
-      "key_format": "xai-...",
-      "setup_instructions": [
-        "Visit console.x.ai",
-        "Sign in with X account",
-        "Subscribe to X Premium if needed",
-        "Generate API key",
-        "Copy and paste it here"
-      ]
-    },
-    {
-      "id": "deepseek",
-      "name": "DeepSeek",
-      "description": "Excellent for technical and detailed explanations",
-      "model": "DeepSeek Chat",
-      "signup_url": "https://platform.deepseek.com/",
-      "api_key_url": "https://platform.deepseek.com/api_keys",
-      "pricing_info": "Very cost-effective pricing",
-      "key_format": "sk-...",
-      "setup_instructions": [
-        "Visit platform.deepseek.com",
-        "Create an account",
-        "Go to API Keys",
-        "Create new API key",
-        "Copy and paste it here"
-      ]
-    }
-  ]
-}
\ No newline at end of file
+'"$@"'
diff --git a/petitpal/assets/images/.gitkeep b/petitpal/assets/images/.gitkeep
index 0509e06..90b2dc6 100644
--- a/petitpal/assets/images/.gitkeep
+++ b/petitpal/assets/images/.gitkeep
@@ -1,2 +1,2 @@
-// This file ensures the images directory exists
-// Add your image assets here 
+// This file ensures the images directory exists
+// Add your image assets here 
diff --git a/petitpal/assets/themes/theme_voice_descriptions.json b/petitpal/assets/themes/theme_voice_descriptions.json
index f490958..d9b6e38 100644
--- a/petitpal/assets/themes/theme_voice_descriptions.json
+++ b/petitpal/assets/themes/theme_voice_descriptions.json
@@ -1,6 +1 @@
-{
-  "theme_desc_light": "A clean, bright interface with dark text on light backgrounds. Perfect for well-lit environments.",
-  "theme_desc_dark": "A comfortable dark interface that's easy on your eyes, especially in low light.",
-  "theme_desc_high_contrast": "Maximum readability with pure black and white colors. Great for users who need extra clarity.",
-  "theme_desc_system": "Automatically follows your phone's dark or light mode setting."
-}
\ No newline at end of file
+'"$@"'
diff --git a/petitpal/assets/themes/themes.json b/petitpal/assets/themes/themes.json
index 3014df7..393e5c8 100644
--- a/petitpal/assets/themes/themes.json
+++ b/petitpal/assets/themes/themes.json
@@ -1,35 +1,130 @@
 {
   "version": 1,
-  "default_theme_id": "light",
+  "default_theme_id": "high_contrast_dark",
   "themes": [
     {
-      "id": "light",
-      "display_name": "Light Theme",
-      "kind": "light",
-      "description": "Clean and bright interface",
-      "voice_description_key": "theme_desc_light"
+      "id": "high_contrast_dark",
+      "display_name": "High Contrast Dark",
+      "colors": {
+        "dark": {
+          "primary": "4294967295",
+          "onPrimary": "4278190080",
+          "secondary": "4293726455",
+          "onSecondary": "4278190080",
+          "error": "4293977744",
+          "onError": "4278190080",
+          "background": "4278190080",
+          "onBackground": "4294967295",
+          "surface": "4279176978",
+          "onSurface": "4294967295"
+        },
+        "light": {
+          "primary": "4278190080",
+          "onPrimary": "4294967295",
+          "secondary": "4280824639",
+          "onSecondary": "4294967295",
+          "error": "4291821568",
+          "onError": "4294967295",
+          "background": "4294967295",
+          "onBackground": "4278190080",
+          "surface": "4294045938",
+          "onSurface": "4278190080"
+        }
+      },
+      "tokens": { "corner_radius": 16, "motion": { "fast": 80, "normal": 140, "slow": 220 } }
     },
     {
-      "id": "dark",
-      "display_name": "Dark Theme", 
-      "kind": "dark",
-      "description": "Easy on the eyes",
-      "voice_description_key": "theme_desc_dark"
+      "id": "high_contrast_light",
+      "display_name": "High Contrast Light",
+      "colors": {
+        "dark": {
+          "primary": "4294967295",
+          "onPrimary": "4278190080",
+          "secondary": "4288657317",
+          "onSecondary": "4278190080",
+          "error": "4293977744",
+          "onError": "4278190080",
+          "background": "4280295454",
+          "onBackground": "4294967295",
+          "surface": "4281611310",
+          "onSurface": "4294967295"
+        },
+        "light": {
+          "primary": "4278190080",
+          "onPrimary": "4294967295",
+          "secondary": "4280824639",
+          "onSecondary": "4294967295",
+          "error": "4291821568",
+          "onError": "4294967295",
+          "background": "4294967295",
+          "onBackground": "4278190080",
+          "surface": "4293980405",
+          "onSurface": "4278190080"
+        }
+      },
+      "tokens": { "corner_radius": 14, "motion": { "fast": 80, "normal": 140, "slow": 220 } }
     },
     {
-      "id": "high_contrast",
-      "display_name": "High Contrast",
-      "kind": "high_contrast",
-      "description": "Maximum readability",
-      "voice_description_key": "theme_desc_high_contrast"
+      "id": "modern_dark",
+      "display_name": "Modern Dark",
+      "colors": {
+        "dark": {
+          "primary": "4286578689",
+          "onPrimary": "4278190080",
+          "secondary": "4289533019",
+          "onSecondary": "4278190080",
+          "error": "4293451674",
+          "onError": "4278190080",
+          "background": "4279178252",
+          "onBackground": "4293858817",
+          "surface": "4279835426",
+          "onSurface": "4293858817"
+        },
+        "light": {
+          "primary": "4278226785",
+          "onPrimary": "4294967295",
+          "secondary": "4279632544",
+          "onSecondary": "4294967295",
+          "error": "4280150456",
+          "onError": "4294967295",
+          "background": "4294967295",
+          "onBackground": "4279308561",
+          "surface": "4294374632",
+          "onSurface": "4279308561"
+        }
+      },
+      "tokens": { "corner_radius": 16, "motion": { "fast": 90, "normal": 160, "slow": 240 } }
     },
     {
-      "id": "system",
-      "display_name": "System Adaptive",
-      "kind": "dynamic",
-      "fallback_theme_id": "dark",
-      "description": "Follows your phone's settings",
-      "voice_description_key": "theme_desc_system"
+      "id": "modern_light",
+      "display_name": "Modern Light",
+      "colors": {
+        "dark": {
+          "primary": "4284776226",
+          "onPrimary": "4278190080",
+          "secondary": "4290519853",
+          "onSecondary": "4278190080",
+          "error": "4293977744",
+          "onError": "4278190080",
+          "background": "4279176975",
+          "onBackground": "4293652223",
+          "surface": "4280295454",
+          "onSurface": "4293652223"
+        },
+        "light": {
+          "primary": "4278196897",
+          "onPrimary": "4294967295",
+          "secondary": "4289139760",
+          "onSecondary": "4294967295",
+          "error": "4281007768",
+          "onError": "4294967295",
+          "background": "4294967295",
+          "onBackground": "4279173137",
+          "surface": "4294046197",
+          "onSurface": "4279173137"
+        }
+      },
+      "tokens": { "corner_radius": 14, "motion": { "fast": 90, "normal": 160, "slow": 240 } }
     }
   ]
-}
\ No newline at end of file
+}
diff --git a/petitpal/create_project_structure.bat b/petitpal/create_project_structure.bat
index ff57864..cd8a504 100644
--- a/petitpal/create_project_structure.bat
+++ b/petitpal/create_project_structure.bat
@@ -1,45 +1,45 @@
-REM ================================================================================
-REM FILE: create_project_structure.bat (Windows)
-REM ================================================================================
-@echo off
-echo Creating PetitPal project directory structure...
-
-REM Create main directories
-mkdir lib\core\router
-mkdir lib\core\services
-mkdir lib\config
-mkdir lib\providers
-mkdir lib\src\onboarding
-mkdir lib\src\voice
-mkdir lib\src\settings
-mkdir lib\src\llm
-mkdir lib\src\family
-mkdir lib\src\themes
-mkdir lib\src\widgets
-
-REM Create asset directories
-mkdir assets\themes
-mkdir assets\config
-mkdir assets\images
-
-REM Create Android resource directories
-mkdir android\app\src\main\res\values
-mkdir android\app\src\main\res\values-night
-mkdir android\app\src\main\res\drawable
-mkdir android\app\src\main\res\xml
-
-REM Create placeholder files
-echo. > assets\images\.gitkeep
-echo. > lib\core\services\.gitkeep
-echo. > lib\src\widgets\.gitkeep
-
-echo Directory structure created successfully!
-echo.
-echo Next steps:
-echo 1. Copy all the Dart files from the artifacts to their respective directories
-echo 2. Copy all the Android XML files to android/app/src/main/res/
-echo 3. Copy all the JSON files to assets/
-echo 4. Run: flutter pub get
-echo 5. Run: flutter run
-echo.
+REM ================================================================================
+REM FILE: create_project_structure.bat (Windows)
+REM ================================================================================
+@echo off
+echo Creating PetitPal project directory structure...
+
+REM Create main directories
+mkdir lib\core\router
+mkdir lib\core\services
+mkdir lib\config
+mkdir lib\providers
+mkdir lib\src\onboarding
+mkdir lib\src\voice
+mkdir lib\src\settings
+mkdir lib\src\llm
+mkdir lib\src\family
+mkdir lib\src\themes
+mkdir lib\src\widgets
+
+REM Create asset directories
+mkdir assets\themes
+mkdir assets\config
+mkdir assets\images
+
+REM Create Android resource directories
+mkdir android\app\src\main\res\values
+mkdir android\app\src\main\res\values-night
+mkdir android\app\src\main\res\drawable
+mkdir android\app\src\main\res\xml
+
+REM Create placeholder files
+echo. > assets\images\.gitkeep
+echo. > lib\core\services\.gitkeep
+echo. > lib\src\widgets\.gitkeep
+
+echo Directory structure created successfully!
+echo.
+echo Next steps:
+echo 1. Copy all the Dart files from the artifacts to their respective directories
+echo 2. Copy all the Android XML files to android/app/src/main/res/
+echo 3. Copy all the JSON files to assets/
+echo 4. Run: flutter pub get
+echo 5. Run: flutter run
+echo.
 pause
\ No newline at end of file
diff --git a/petitpal/ios/.gitignore b/petitpal/ios/.gitignore
index 7a7f987..ad322bc 100644
--- a/petitpal/ios/.gitignore
+++ b/petitpal/ios/.gitignore
@@ -1,34 +1,34 @@
-**/dgph
-*.mode1v3
-*.mode2v3
-*.moved-aside
-*.pbxuser
-*.perspectivev3
-**/*sync/
-.sconsign.dblite
-.tags*
-**/.vagrant/
-**/DerivedData/
-Icon?
-**/Pods/
-**/.symlinks/
-profile
-xcuserdata
-**/.generated/
-Flutter/App.framework
-Flutter/Flutter.framework
-Flutter/Flutter.podspec
-Flutter/Generated.xcconfig
-Flutter/ephemeral/
-Flutter/app.flx
-Flutter/app.zip
-Flutter/flutter_assets/
-Flutter/flutter_export_environment.sh
-ServiceDefinitions.json
-Runner/GeneratedPluginRegistrant.*
-
-# Exceptions to above rules.
-!default.mode1v3
-!default.mode2v3
-!default.pbxuser
-!default.perspectivev3
+**/dgph
+*.mode1v3
+*.mode2v3
+*.moved-aside
+*.pbxuser
+*.perspectivev3
+**/*sync/
+.sconsign.dblite
+.tags*
+**/.vagrant/
+**/DerivedData/
+Icon?
+**/Pods/
+**/.symlinks/
+profile
+xcuserdata
+**/.generated/
+Flutter/App.framework
+Flutter/Flutter.framework
+Flutter/Flutter.podspec
+Flutter/Generated.xcconfig
+Flutter/ephemeral/
+Flutter/app.flx
+Flutter/app.zip
+Flutter/flutter_assets/
+Flutter/flutter_export_environment.sh
+ServiceDefinitions.json
+Runner/GeneratedPluginRegistrant.*
+
+# Exceptions to above rules.
+!default.mode1v3
+!default.mode2v3
+!default.pbxuser
+!default.perspectivev3
diff --git a/petitpal/ios/Flutter/AppFrameworkInfo.plist b/petitpal/ios/Flutter/AppFrameworkInfo.plist
index 7c56964..e041d38 100644
--- a/petitpal/ios/Flutter/AppFrameworkInfo.plist
+++ b/petitpal/ios/Flutter/AppFrameworkInfo.plist
@@ -1,26 +1,26 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
-<plist version="1.0">
-<dict>
-  <key>CFBundleDevelopmentRegion</key>
-  <string>en</string>
-  <key>CFBundleExecutable</key>
-  <string>App</string>
-  <key>CFBundleIdentifier</key>
-  <string>io.flutter.flutter.app</string>
-  <key>CFBundleInfoDictionaryVersion</key>
-  <string>6.0</string>
-  <key>CFBundleName</key>
-  <string>App</string>
-  <key>CFBundlePackageType</key>
-  <string>FMWK</string>
-  <key>CFBundleShortVersionString</key>
-  <string>1.0</string>
-  <key>CFBundleSignature</key>
-  <string>????</string>
-  <key>CFBundleVersion</key>
-  <string>1.0</string>
-  <key>MinimumOSVersion</key>
-  <string>12.0</string>
-</dict>
-</plist>
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
+<plist version="1.0">
+<dict>
+  <key>CFBundleDevelopmentRegion</key>
+  <string>en</string>
+  <key>CFBundleExecutable</key>
+  <string>App</string>
+  <key>CFBundleIdentifier</key>
+  <string>io.flutter.flutter.app</string>
+  <key>CFBundleInfoDictionaryVersion</key>
+  <string>6.0</string>
+  <key>CFBundleName</key>
+  <string>App</string>
+  <key>CFBundlePackageType</key>
+  <string>FMWK</string>
+  <key>CFBundleShortVersionString</key>
+  <string>1.0</string>
+  <key>CFBundleSignature</key>
+  <string>????</string>
+  <key>CFBundleVersion</key>
+  <string>1.0</string>
+  <key>MinimumOSVersion</key>
+  <string>12.0</string>
+</dict>
+</plist>
diff --git a/petitpal/ios/Flutter/Debug.xcconfig b/petitpal/ios/Flutter/Debug.xcconfig
index 592ceee..0b2d479 100644
--- a/petitpal/ios/Flutter/Debug.xcconfig
+++ b/petitpal/ios/Flutter/Debug.xcconfig
@@ -1 +1 @@
-#include "Generated.xcconfig"
+#include "Generated.xcconfig"
diff --git a/petitpal/ios/Flutter/Release.xcconfig b/petitpal/ios/Flutter/Release.xcconfig
index 592ceee..0b2d479 100644
--- a/petitpal/ios/Flutter/Release.xcconfig
+++ b/petitpal/ios/Flutter/Release.xcconfig
@@ -1 +1 @@
-#include "Generated.xcconfig"
+#include "Generated.xcconfig"
diff --git a/petitpal/ios/Runner.xcodeproj/project.pbxproj b/petitpal/ios/Runner.xcodeproj/project.pbxproj
index b262b7e..426dde4 100644
--- a/petitpal/ios/Runner.xcodeproj/project.pbxproj
+++ b/petitpal/ios/Runner.xcodeproj/project.pbxproj
@@ -1,616 +1,616 @@
-// !$*UTF8*$!
-{
-	archiveVersion = 1;
-	classes = {
-	};
-	objectVersion = 54;
-	objects = {
-
-/* Begin PBXBuildFile section */
-		1498D2341E8E89220040F4C2 /* GeneratedPluginRegistrant.m in Sources */ = {isa = PBXBuildFile; fileRef = 1498D2331E8E89220040F4C2 /* GeneratedPluginRegistrant.m */; };
-		331C808B294A63AB00263BE5 /* RunnerTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = 331C807B294A618700263BE5 /* RunnerTests.swift */; };
-		3B3967161E833CAA004F5970 /* AppFrameworkInfo.plist in Resources */ = {isa = PBXBuildFile; fileRef = 3B3967151E833CAA004F5970 /* AppFrameworkInfo.plist */; };
-		74858FAF1ED2DC5600515810 /* AppDelegate.swift in Sources */ = {isa = PBXBuildFile; fileRef = 74858FAE1ED2DC5600515810 /* AppDelegate.swift */; };
-		97C146FC1CF9000F007C117D /* Main.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = 97C146FA1CF9000F007C117D /* Main.storyboard */; };
-		97C146FE1CF9000F007C117D /* Assets.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 97C146FD1CF9000F007C117D /* Assets.xcassets */; };
-		97C147011CF9000F007C117D /* LaunchScreen.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = 97C146FF1CF9000F007C117D /* LaunchScreen.storyboard */; };
-/* End PBXBuildFile section */
-
-/* Begin PBXContainerItemProxy section */
-		331C8085294A63A400263BE5 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 97C146E61CF9000F007C117D /* Project object */;
-			proxyType = 1;
-			remoteGlobalIDString = 97C146ED1CF9000F007C117D;
-			remoteInfo = Runner;
-		};
-/* End PBXContainerItemProxy section */
-
-/* Begin PBXCopyFilesBuildPhase section */
-		9705A1C41CF9048500538489 /* Embed Frameworks */ = {
-			isa = PBXCopyFilesBuildPhase;
-			buildActionMask = 2147483647;
-			dstPath = "";
-			dstSubfolderSpec = 10;
-			files = (
-			);
-			name = "Embed Frameworks";
-			runOnlyForDeploymentPostprocessing = 0;
-		};
-/* End PBXCopyFilesBuildPhase section */
-
-/* Begin PBXFileReference section */
-		1498D2321E8E86230040F4C2 /* GeneratedPluginRegistrant.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = GeneratedPluginRegistrant.h; sourceTree = "<group>"; };
-		1498D2331E8E89220040F4C2 /* GeneratedPluginRegistrant.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = GeneratedPluginRegistrant.m; sourceTree = "<group>"; };
-		331C807B294A618700263BE5 /* RunnerTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = RunnerTests.swift; sourceTree = "<group>"; };
-		331C8081294A63A400263BE5 /* RunnerTests.xctest */ = {isa = PBXFileReference; explicitFileType = wrapper.cfbundle; includeInIndex = 0; path = RunnerTests.xctest; sourceTree = BUILT_PRODUCTS_DIR; };
-		3B3967151E833CAA004F5970 /* AppFrameworkInfo.plist */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.xml; name = AppFrameworkInfo.plist; path = Flutter/AppFrameworkInfo.plist; sourceTree = "<group>"; };
-		74858FAD1ED2DC5600515810 /* Runner-Bridging-Header.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = "Runner-Bridging-Header.h"; sourceTree = "<group>"; };
-		74858FAE1ED2DC5600515810 /* AppDelegate.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = AppDelegate.swift; sourceTree = "<group>"; };
-		7AFA3C8E1D35360C0083082E /* Release.xcconfig */ = {isa = PBXFileReference; lastKnownFileType = text.xcconfig; name = Release.xcconfig; path = Flutter/Release.xcconfig; sourceTree = "<group>"; };
-		9740EEB21CF90195004384FC /* Debug.xcconfig */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.xcconfig; name = Debug.xcconfig; path = Flutter/Debug.xcconfig; sourceTree = "<group>"; };
-		9740EEB31CF90195004384FC /* Generated.xcconfig */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.xcconfig; name = Generated.xcconfig; path = Flutter/Generated.xcconfig; sourceTree = "<group>"; };
-		97C146EE1CF9000F007C117D /* Runner.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = Runner.app; sourceTree = BUILT_PRODUCTS_DIR; };
-		97C146FB1CF9000F007C117D /* Base */ = {isa = PBXFileReference; lastKnownFileType = file.storyboard; name = Base; path = Base.lproj/Main.storyboard; sourceTree = "<group>"; };
-		97C146FD1CF9000F007C117D /* Assets.xcassets */ = {isa = PBXFileReference; lastKnownFileType = folder.assetcatalog; path = Assets.xcassets; sourceTree = "<group>"; };
-		97C147001CF9000F007C117D /* Base */ = {isa = PBXFileReference; lastKnownFileType = file.storyboard; name = Base; path = Base.lproj/LaunchScreen.storyboard; sourceTree = "<group>"; };
-		97C147021CF9000F007C117D /* Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; path = Info.plist; sourceTree = "<group>"; };
-/* End PBXFileReference section */
-
-/* Begin PBXFrameworksBuildPhase section */
-		97C146EB1CF9000F007C117D /* Frameworks */ = {
-			isa = PBXFrameworksBuildPhase;
-			buildActionMask = 2147483647;
-			files = (
-			);
-			runOnlyForDeploymentPostprocessing = 0;
-		};
-/* End PBXFrameworksBuildPhase section */
-
-/* Begin PBXGroup section */
-		331C8082294A63A400263BE5 /* RunnerTests */ = {
-			isa = PBXGroup;
-			children = (
-				331C807B294A618700263BE5 /* RunnerTests.swift */,
-			);
-			path = RunnerTests;
-			sourceTree = "<group>";
-		};
-		9740EEB11CF90186004384FC /* Flutter */ = {
-			isa = PBXGroup;
-			children = (
-				3B3967151E833CAA004F5970 /* AppFrameworkInfo.plist */,
-				9740EEB21CF90195004384FC /* Debug.xcconfig */,
-				7AFA3C8E1D35360C0083082E /* Release.xcconfig */,
-				9740EEB31CF90195004384FC /* Generated.xcconfig */,
-			);
-			name = Flutter;
-			sourceTree = "<group>";
-		};
-		97C146E51CF9000F007C117D = {
-			isa = PBXGroup;
-			children = (
-				9740EEB11CF90186004384FC /* Flutter */,
-				97C146F01CF9000F007C117D /* Runner */,
-				97C146EF1CF9000F007C117D /* Products */,
-				331C8082294A63A400263BE5 /* RunnerTests */,
-			);
-			sourceTree = "<group>";
-		};
-		97C146EF1CF9000F007C117D /* Products */ = {
-			isa = PBXGroup;
-			children = (
-				97C146EE1CF9000F007C117D /* Runner.app */,
-				331C8081294A63A400263BE5 /* RunnerTests.xctest */,
-			);
-			name = Products;
-			sourceTree = "<group>";
-		};
-		97C146F01CF9000F007C117D /* Runner */ = {
-			isa = PBXGroup;
-			children = (
-				97C146FA1CF9000F007C117D /* Main.storyboard */,
-				97C146FD1CF9000F007C117D /* Assets.xcassets */,
-				97C146FF1CF9000F007C117D /* LaunchScreen.storyboard */,
-				97C147021CF9000F007C117D /* Info.plist */,
-				1498D2321E8E86230040F4C2 /* GeneratedPluginRegistrant.h */,
-				1498D2331E8E89220040F4C2 /* GeneratedPluginRegistrant.m */,
-				74858FAE1ED2DC5600515810 /* AppDelegate.swift */,
-				74858FAD1ED2DC5600515810 /* Runner-Bridging-Header.h */,
-			);
-			path = Runner;
-			sourceTree = "<group>";
-		};
-/* End PBXGroup section */
-
-/* Begin PBXNativeTarget section */
-		331C8080294A63A400263BE5 /* RunnerTests */ = {
-			isa = PBXNativeTarget;
-			buildConfigurationList = 331C8087294A63A400263BE5 /* Build configuration list for PBXNativeTarget "RunnerTests" */;
-			buildPhases = (
-				331C807D294A63A400263BE5 /* Sources */,
-				331C807F294A63A400263BE5 /* Resources */,
-			);
-			buildRules = (
-			);
-			dependencies = (
-				331C8086294A63A400263BE5 /* PBXTargetDependency */,
-			);
-			name = RunnerTests;
-			productName = RunnerTests;
-			productReference = 331C8081294A63A400263BE5 /* RunnerTests.xctest */;
-			productType = "com.apple.product-type.bundle.unit-test";
-		};
-		97C146ED1CF9000F007C117D /* Runner */ = {
-			isa = PBXNativeTarget;
-			buildConfigurationList = 97C147051CF9000F007C117D /* Build configuration list for PBXNativeTarget "Runner" */;
-			buildPhases = (
-				9740EEB61CF901F6004384FC /* Run Script */,
-				97C146EA1CF9000F007C117D /* Sources */,
-				97C146EB1CF9000F007C117D /* Frameworks */,
-				97C146EC1CF9000F007C117D /* Resources */,
-				9705A1C41CF9048500538489 /* Embed Frameworks */,
-				3B06AD1E1E4923F5004D2608 /* Thin Binary */,
-			);
-			buildRules = (
-			);
-			dependencies = (
-			);
-			name = Runner;
-			productName = Runner;
-			productReference = 97C146EE1CF9000F007C117D /* Runner.app */;
-			productType = "com.apple.product-type.application";
-		};
-/* End PBXNativeTarget section */
-
-/* Begin PBXProject section */
-		97C146E61CF9000F007C117D /* Project object */ = {
-			isa = PBXProject;
-			attributes = {
-				BuildIndependentTargetsInParallel = YES;
-				LastUpgradeCheck = 1510;
-				ORGANIZATIONNAME = "";
-				TargetAttributes = {
-					331C8080294A63A400263BE5 = {
-						CreatedOnToolsVersion = 14.0;
-						TestTargetID = 97C146ED1CF9000F007C117D;
-					};
-					97C146ED1CF9000F007C117D = {
-						CreatedOnToolsVersion = 7.3.1;
-						LastSwiftMigration = 1100;
-					};
-				};
-			};
-			buildConfigurationList = 97C146E91CF9000F007C117D /* Build configuration list for PBXProject "Runner" */;
-			compatibilityVersion = "Xcode 9.3";
-			developmentRegion = en;
-			hasScannedForEncodings = 0;
-			knownRegions = (
-				en,
-				Base,
-			);
-			mainGroup = 97C146E51CF9000F007C117D;
-			productRefGroup = 97C146EF1CF9000F007C117D /* Products */;
-			projectDirPath = "";
-			projectRoot = "";
-			targets = (
-				97C146ED1CF9000F007C117D /* Runner */,
-				331C8080294A63A400263BE5 /* RunnerTests */,
-			);
-		};
-/* End PBXProject section */
-
-/* Begin PBXResourcesBuildPhase section */
-		331C807F294A63A400263BE5 /* Resources */ = {
-			isa = PBXResourcesBuildPhase;
-			buildActionMask = 2147483647;
-			files = (
-			);
-			runOnlyForDeploymentPostprocessing = 0;
-		};
-		97C146EC1CF9000F007C117D /* Resources */ = {
-			isa = PBXResourcesBuildPhase;
-			buildActionMask = 2147483647;
-			files = (
-				97C147011CF9000F007C117D /* LaunchScreen.storyboard in Resources */,
-				3B3967161E833CAA004F5970 /* AppFrameworkInfo.plist in Resources */,
-				97C146FE1CF9000F007C117D /* Assets.xcassets in Resources */,
-				97C146FC1CF9000F007C117D /* Main.storyboard in Resources */,
-			);
-			runOnlyForDeploymentPostprocessing = 0;
-		};
-/* End PBXResourcesBuildPhase section */
-
-/* Begin PBXShellScriptBuildPhase section */
-		3B06AD1E1E4923F5004D2608 /* Thin Binary */ = {
-			isa = PBXShellScriptBuildPhase;
-			alwaysOutOfDate = 1;
-			buildActionMask = 2147483647;
-			files = (
-			);
-			inputPaths = (
-				"${TARGET_BUILD_DIR}/${INFOPLIST_PATH}",
-			);
-			name = "Thin Binary";
-			outputPaths = (
-			);
-			runOnlyForDeploymentPostprocessing = 0;
-			shellPath = /bin/sh;
-			shellScript = "/bin/sh \"$FLUTTER_ROOT/packages/flutter_tools/bin/xcode_backend.sh\" embed_and_thin";
-		};
-		9740EEB61CF901F6004384FC /* Run Script */ = {
-			isa = PBXShellScriptBuildPhase;
-			alwaysOutOfDate = 1;
-			buildActionMask = 2147483647;
-			files = (
-			);
-			inputPaths = (
-			);
-			name = "Run Script";
-			outputPaths = (
-			);
-			runOnlyForDeploymentPostprocessing = 0;
-			shellPath = /bin/sh;
-			shellScript = "/bin/sh \"$FLUTTER_ROOT/packages/flutter_tools/bin/xcode_backend.sh\" build";
-		};
-/* End PBXShellScriptBuildPhase section */
-
-/* Begin PBXSourcesBuildPhase section */
-		331C807D294A63A400263BE5 /* Sources */ = {
-			isa = PBXSourcesBuildPhase;
-			buildActionMask = 2147483647;
-			files = (
-				331C808B294A63AB00263BE5 /* RunnerTests.swift in Sources */,
-			);
-			runOnlyForDeploymentPostprocessing = 0;
-		};
-		97C146EA1CF9000F007C117D /* Sources */ = {
-			isa = PBXSourcesBuildPhase;
-			buildActionMask = 2147483647;
-			files = (
-				74858FAF1ED2DC5600515810 /* AppDelegate.swift in Sources */,
-				1498D2341E8E89220040F4C2 /* GeneratedPluginRegistrant.m in Sources */,
-			);
-			runOnlyForDeploymentPostprocessing = 0;
-		};
-/* End PBXSourcesBuildPhase section */
-
-/* Begin PBXTargetDependency section */
-		331C8086294A63A400263BE5 /* PBXTargetDependency */ = {
-			isa = PBXTargetDependency;
-			target = 97C146ED1CF9000F007C117D /* Runner */;
-			targetProxy = 331C8085294A63A400263BE5 /* PBXContainerItemProxy */;
-		};
-/* End PBXTargetDependency section */
-
-/* Begin PBXVariantGroup section */
-		97C146FA1CF9000F007C117D /* Main.storyboard */ = {
-			isa = PBXVariantGroup;
-			children = (
-				97C146FB1CF9000F007C117D /* Base */,
-			);
-			name = Main.storyboard;
-			sourceTree = "<group>";
-		};
-		97C146FF1CF9000F007C117D /* LaunchScreen.storyboard */ = {
-			isa = PBXVariantGroup;
-			children = (
-				97C147001CF9000F007C117D /* Base */,
-			);
-			name = LaunchScreen.storyboard;
-			sourceTree = "<group>";
-		};
-/* End PBXVariantGroup section */
-
-/* Begin XCBuildConfiguration section */
-		249021D3217E4FDB00AE95B9 /* Profile */ = {
-			isa = XCBuildConfiguration;
-			buildSettings = {
-				ALWAYS_SEARCH_USER_PATHS = NO;
-				ASSETCATALOG_COMPILER_GENERATE_SWIFT_ASSET_SYMBOL_EXTENSIONS = YES;
-				CLANG_ANALYZER_NONNULL = YES;
-				CLANG_CXX_LANGUAGE_STANDARD = "gnu++0x";
-				CLANG_CXX_LIBRARY = "libc++";
-				CLANG_ENABLE_MODULES = YES;
-				CLANG_ENABLE_OBJC_ARC = YES;
-				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
-				CLANG_WARN_BOOL_CONVERSION = YES;
-				CLANG_WARN_COMMA = YES;
-				CLANG_WARN_CONSTANT_CONVERSION = YES;
-				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
-				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
-				CLANG_WARN_EMPTY_BODY = YES;
-				CLANG_WARN_ENUM_CONVERSION = YES;
-				CLANG_WARN_INFINITE_RECURSION = YES;
-				CLANG_WARN_INT_CONVERSION = YES;
-				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
-				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
-				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
-				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
-				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
-				CLANG_WARN_STRICT_PROTOTYPES = YES;
-				CLANG_WARN_SUSPICIOUS_MOVE = YES;
-				CLANG_WARN_UNREACHABLE_CODE = YES;
-				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
-				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "iPhone Developer";
-				COPY_PHASE_STRIP = NO;
-				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
-				ENABLE_NS_ASSERTIONS = NO;
-				ENABLE_STRICT_OBJC_MSGSEND = YES;
-				ENABLE_USER_SCRIPT_SANDBOXING = NO;
-				GCC_C_LANGUAGE_STANDARD = gnu99;
-				GCC_NO_COMMON_BLOCKS = YES;
-				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
-				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
-				GCC_WARN_UNDECLARED_SELECTOR = YES;
-				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
-				GCC_WARN_UNUSED_FUNCTION = YES;
-				GCC_WARN_UNUSED_VARIABLE = YES;
-				IPHONEOS_DEPLOYMENT_TARGET = 12.0;
-				MTL_ENABLE_DEBUG_INFO = NO;
-				SDKROOT = iphoneos;
-				SUPPORTED_PLATFORMS = iphoneos;
-				TARGETED_DEVICE_FAMILY = "1,2";
-				VALIDATE_PRODUCT = YES;
-			};
-			name = Profile;
-		};
-		249021D4217E4FDB00AE95B9 /* Profile */ = {
-			isa = XCBuildConfiguration;
-			baseConfigurationReference = 7AFA3C8E1D35360C0083082E /* Release.xcconfig */;
-			buildSettings = {
-				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
-				CLANG_ENABLE_MODULES = YES;
-				CURRENT_PROJECT_VERSION = "$(FLUTTER_BUILD_NUMBER)";
-				ENABLE_BITCODE = NO;
-				INFOPLIST_FILE = Runner/Info.plist;
-				LD_RUNPATH_SEARCH_PATHS = (
-					"$(inherited)",
-					"@executable_path/Frameworks",
-				);
-				PRODUCT_BUNDLE_IDENTIFIER = com.example.petitpal;
-				PRODUCT_NAME = "$(TARGET_NAME)";
-				SWIFT_OBJC_BRIDGING_HEADER = "Runner/Runner-Bridging-Header.h";
-				SWIFT_VERSION = 5.0;
-				VERSIONING_SYSTEM = "apple-generic";
-			};
-			name = Profile;
-		};
-		331C8088294A63A400263BE5 /* Debug */ = {
-			isa = XCBuildConfiguration;
-			buildSettings = {
-				BUNDLE_LOADER = "$(TEST_HOST)";
-				CODE_SIGN_STYLE = Automatic;
-				CURRENT_PROJECT_VERSION = 1;
-				GENERATE_INFOPLIST_FILE = YES;
-				MARKETING_VERSION = 1.0;
-				PRODUCT_BUNDLE_IDENTIFIER = com.example.petitpal.RunnerTests;
-				PRODUCT_NAME = "$(TARGET_NAME)";
-				SWIFT_ACTIVE_COMPILATION_CONDITIONS = DEBUG;
-				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
-				SWIFT_VERSION = 5.0;
-				TEST_HOST = "$(BUILT_PRODUCTS_DIR)/Runner.app/$(BUNDLE_EXECUTABLE_FOLDER_PATH)/Runner";
-			};
-			name = Debug;
-		};
-		331C8089294A63A400263BE5 /* Release */ = {
-			isa = XCBuildConfiguration;
-			buildSettings = {
-				BUNDLE_LOADER = "$(TEST_HOST)";
-				CODE_SIGN_STYLE = Automatic;
-				CURRENT_PROJECT_VERSION = 1;
-				GENERATE_INFOPLIST_FILE = YES;
-				MARKETING_VERSION = 1.0;
-				PRODUCT_BUNDLE_IDENTIFIER = com.example.petitpal.RunnerTests;
-				PRODUCT_NAME = "$(TARGET_NAME)";
-				SWIFT_VERSION = 5.0;
-				TEST_HOST = "$(BUILT_PRODUCTS_DIR)/Runner.app/$(BUNDLE_EXECUTABLE_FOLDER_PATH)/Runner";
-			};
-			name = Release;
-		};
-		331C808A294A63A400263BE5 /* Profile */ = {
-			isa = XCBuildConfiguration;
-			buildSettings = {
-				BUNDLE_LOADER = "$(TEST_HOST)";
-				CODE_SIGN_STYLE = Automatic;
-				CURRENT_PROJECT_VERSION = 1;
-				GENERATE_INFOPLIST_FILE = YES;
-				MARKETING_VERSION = 1.0;
-				PRODUCT_BUNDLE_IDENTIFIER = com.example.petitpal.RunnerTests;
-				PRODUCT_NAME = "$(TARGET_NAME)";
-				SWIFT_VERSION = 5.0;
-				TEST_HOST = "$(BUILT_PRODUCTS_DIR)/Runner.app/$(BUNDLE_EXECUTABLE_FOLDER_PATH)/Runner";
-			};
-			name = Profile;
-		};
-		97C147031CF9000F007C117D /* Debug */ = {
-			isa = XCBuildConfiguration;
-			buildSettings = {
-				ALWAYS_SEARCH_USER_PATHS = NO;
-				ASSETCATALOG_COMPILER_GENERATE_SWIFT_ASSET_SYMBOL_EXTENSIONS = YES;
-				CLANG_ANALYZER_NONNULL = YES;
-				CLANG_CXX_LANGUAGE_STANDARD = "gnu++0x";
-				CLANG_CXX_LIBRARY = "libc++";
-				CLANG_ENABLE_MODULES = YES;
-				CLANG_ENABLE_OBJC_ARC = YES;
-				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
-				CLANG_WARN_BOOL_CONVERSION = YES;
-				CLANG_WARN_COMMA = YES;
-				CLANG_WARN_CONSTANT_CONVERSION = YES;
-				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
-				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
-				CLANG_WARN_EMPTY_BODY = YES;
-				CLANG_WARN_ENUM_CONVERSION = YES;
-				CLANG_WARN_INFINITE_RECURSION = YES;
-				CLANG_WARN_INT_CONVERSION = YES;
-				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
-				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
-				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
-				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
-				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
-				CLANG_WARN_STRICT_PROTOTYPES = YES;
-				CLANG_WARN_SUSPICIOUS_MOVE = YES;
-				CLANG_WARN_UNREACHABLE_CODE = YES;
-				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
-				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "iPhone Developer";
-				COPY_PHASE_STRIP = NO;
-				DEBUG_INFORMATION_FORMAT = dwarf;
-				ENABLE_STRICT_OBJC_MSGSEND = YES;
-				ENABLE_TESTABILITY = YES;
-				ENABLE_USER_SCRIPT_SANDBOXING = NO;
-				GCC_C_LANGUAGE_STANDARD = gnu99;
-				GCC_DYNAMIC_NO_PIC = NO;
-				GCC_NO_COMMON_BLOCKS = YES;
-				GCC_OPTIMIZATION_LEVEL = 0;
-				GCC_PREPROCESSOR_DEFINITIONS = (
-					"DEBUG=1",
-					"$(inherited)",
-				);
-				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
-				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
-				GCC_WARN_UNDECLARED_SELECTOR = YES;
-				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
-				GCC_WARN_UNUSED_FUNCTION = YES;
-				GCC_WARN_UNUSED_VARIABLE = YES;
-				IPHONEOS_DEPLOYMENT_TARGET = 12.0;
-				MTL_ENABLE_DEBUG_INFO = YES;
-				ONLY_ACTIVE_ARCH = YES;
-				SDKROOT = iphoneos;
-				TARGETED_DEVICE_FAMILY = "1,2";
-			};
-			name = Debug;
-		};
-		97C147041CF9000F007C117D /* Release */ = {
-			isa = XCBuildConfiguration;
-			buildSettings = {
-				ALWAYS_SEARCH_USER_PATHS = NO;
-				ASSETCATALOG_COMPILER_GENERATE_SWIFT_ASSET_SYMBOL_EXTENSIONS = YES;
-				CLANG_ANALYZER_NONNULL = YES;
-				CLANG_CXX_LANGUAGE_STANDARD = "gnu++0x";
-				CLANG_CXX_LIBRARY = "libc++";
-				CLANG_ENABLE_MODULES = YES;
-				CLANG_ENABLE_OBJC_ARC = YES;
-				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
-				CLANG_WARN_BOOL_CONVERSION = YES;
-				CLANG_WARN_COMMA = YES;
-				CLANG_WARN_CONSTANT_CONVERSION = YES;
-				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
-				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
-				CLANG_WARN_EMPTY_BODY = YES;
-				CLANG_WARN_ENUM_CONVERSION = YES;
-				CLANG_WARN_INFINITE_RECURSION = YES;
-				CLANG_WARN_INT_CONVERSION = YES;
-				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
-				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
-				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
-				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
-				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
-				CLANG_WARN_STRICT_PROTOTYPES = YES;
-				CLANG_WARN_SUSPICIOUS_MOVE = YES;
-				CLANG_WARN_UNREACHABLE_CODE = YES;
-				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
-				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "iPhone Developer";
-				COPY_PHASE_STRIP = NO;
-				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
-				ENABLE_NS_ASSERTIONS = NO;
-				ENABLE_STRICT_OBJC_MSGSEND = YES;
-				ENABLE_USER_SCRIPT_SANDBOXING = NO;
-				GCC_C_LANGUAGE_STANDARD = gnu99;
-				GCC_NO_COMMON_BLOCKS = YES;
-				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
-				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
-				GCC_WARN_UNDECLARED_SELECTOR = YES;
-				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
-				GCC_WARN_UNUSED_FUNCTION = YES;
-				GCC_WARN_UNUSED_VARIABLE = YES;
-				IPHONEOS_DEPLOYMENT_TARGET = 12.0;
-				MTL_ENABLE_DEBUG_INFO = NO;
-				SDKROOT = iphoneos;
-				SUPPORTED_PLATFORMS = iphoneos;
-				SWIFT_COMPILATION_MODE = wholemodule;
-				SWIFT_OPTIMIZATION_LEVEL = "-O";
-				TARGETED_DEVICE_FAMILY = "1,2";
-				VALIDATE_PRODUCT = YES;
-			};
-			name = Release;
-		};
-		97C147061CF9000F007C117D /* Debug */ = {
-			isa = XCBuildConfiguration;
-			baseConfigurationReference = 9740EEB21CF90195004384FC /* Debug.xcconfig */;
-			buildSettings = {
-				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
-				CLANG_ENABLE_MODULES = YES;
-				CURRENT_PROJECT_VERSION = "$(FLUTTER_BUILD_NUMBER)";
-				ENABLE_BITCODE = NO;
-				INFOPLIST_FILE = Runner/Info.plist;
-				LD_RUNPATH_SEARCH_PATHS = (
-					"$(inherited)",
-					"@executable_path/Frameworks",
-				);
-				PRODUCT_BUNDLE_IDENTIFIER = com.example.petitpal;
-				PRODUCT_NAME = "$(TARGET_NAME)";
-				SWIFT_OBJC_BRIDGING_HEADER = "Runner/Runner-Bridging-Header.h";
-				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
-				SWIFT_VERSION = 5.0;
-				VERSIONING_SYSTEM = "apple-generic";
-			};
-			name = Debug;
-		};
-		97C147071CF9000F007C117D /* Release */ = {
-			isa = XCBuildConfiguration;
-			baseConfigurationReference = 7AFA3C8E1D35360C0083082E /* Release.xcconfig */;
-			buildSettings = {
-				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
-				CLANG_ENABLE_MODULES = YES;
-				CURRENT_PROJECT_VERSION = "$(FLUTTER_BUILD_NUMBER)";
-				ENABLE_BITCODE = NO;
-				INFOPLIST_FILE = Runner/Info.plist;
-				LD_RUNPATH_SEARCH_PATHS = (
-					"$(inherited)",
-					"@executable_path/Frameworks",
-				);
-				PRODUCT_BUNDLE_IDENTIFIER = com.example.petitpal;
-				PRODUCT_NAME = "$(TARGET_NAME)";
-				SWIFT_OBJC_BRIDGING_HEADER = "Runner/Runner-Bridging-Header.h";
-				SWIFT_VERSION = 5.0;
-				VERSIONING_SYSTEM = "apple-generic";
-			};
-			name = Release;
-		};
-/* End XCBuildConfiguration section */
-
-/* Begin XCConfigurationList section */
-		331C8087294A63A400263BE5 /* Build configuration list for PBXNativeTarget "RunnerTests" */ = {
-			isa = XCConfigurationList;
-			buildConfigurations = (
-				331C8088294A63A400263BE5 /* Debug */,
-				331C8089294A63A400263BE5 /* Release */,
-				331C808A294A63A400263BE5 /* Profile */,
-			);
-			defaultConfigurationIsVisible = 0;
-			defaultConfigurationName = Release;
-		};
-		97C146E91CF9000F007C117D /* Build configuration list for PBXProject "Runner" */ = {
-			isa = XCConfigurationList;
-			buildConfigurations = (
-				97C147031CF9000F007C117D /* Debug */,
-				97C147041CF9000F007C117D /* Release */,
-				249021D3217E4FDB00AE95B9 /* Profile */,
-			);
-			defaultConfigurationIsVisible = 0;
-			defaultConfigurationName = Release;
-		};
-		97C147051CF9000F007C117D /* Build configuration list for PBXNativeTarget "Runner" */ = {
-			isa = XCConfigurationList;
-			buildConfigurations = (
-				97C147061CF9000F007C117D /* Debug */,
-				97C147071CF9000F007C117D /* Release */,
-				249021D4217E4FDB00AE95B9 /* Profile */,
-			);
-			defaultConfigurationIsVisible = 0;
-			defaultConfigurationName = Release;
-		};
-/* End XCConfigurationList section */
-	};
-	rootObject = 97C146E61CF9000F007C117D /* Project object */;
-}
+// !$*UTF8*$!
+{
+	archiveVersion = 1;
+	classes = {
+	};
+	objectVersion = 54;
+	objects = {
+
+/* Begin PBXBuildFile section */
+		1498D2341E8E89220040F4C2 /* GeneratedPluginRegistrant.m in Sources */ = {isa = PBXBuildFile; fileRef = 1498D2331E8E89220040F4C2 /* GeneratedPluginRegistrant.m */; };
+		331C808B294A63AB00263BE5 /* RunnerTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = 331C807B294A618700263BE5 /* RunnerTests.swift */; };
+		3B3967161E833CAA004F5970 /* AppFrameworkInfo.plist in Resources */ = {isa = PBXBuildFile; fileRef = 3B3967151E833CAA004F5970 /* AppFrameworkInfo.plist */; };
+		74858FAF1ED2DC5600515810 /* AppDelegate.swift in Sources */ = {isa = PBXBuildFile; fileRef = 74858FAE1ED2DC5600515810 /* AppDelegate.swift */; };
+		97C146FC1CF9000F007C117D /* Main.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = 97C146FA1CF9000F007C117D /* Main.storyboard */; };
+		97C146FE1CF9000F007C117D /* Assets.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 97C146FD1CF9000F007C117D /* Assets.xcassets */; };
+		97C147011CF9000F007C117D /* LaunchScreen.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = 97C146FF1CF9000F007C117D /* LaunchScreen.storyboard */; };
+/* End PBXBuildFile section */
+
+/* Begin PBXContainerItemProxy section */
+		331C8085294A63A400263BE5 /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 97C146E61CF9000F007C117D /* Project object */;
+			proxyType = 1;
+			remoteGlobalIDString = 97C146ED1CF9000F007C117D;
+			remoteInfo = Runner;
+		};
+/* End PBXContainerItemProxy section */
+
+/* Begin PBXCopyFilesBuildPhase section */
+		9705A1C41CF9048500538489 /* Embed Frameworks */ = {
+			isa = PBXCopyFilesBuildPhase;
+			buildActionMask = 2147483647;
+			dstPath = "";
+			dstSubfolderSpec = 10;
+			files = (
+			);
+			name = "Embed Frameworks";
+			runOnlyForDeploymentPostprocessing = 0;
+		};
+/* End PBXCopyFilesBuildPhase section */
+
+/* Begin PBXFileReference section */
+		1498D2321E8E86230040F4C2 /* GeneratedPluginRegistrant.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = GeneratedPluginRegistrant.h; sourceTree = "<group>"; };
+		1498D2331E8E89220040F4C2 /* GeneratedPluginRegistrant.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = GeneratedPluginRegistrant.m; sourceTree = "<group>"; };
+		331C807B294A618700263BE5 /* RunnerTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = RunnerTests.swift; sourceTree = "<group>"; };
+		331C8081294A63A400263BE5 /* RunnerTests.xctest */ = {isa = PBXFileReference; explicitFileType = wrapper.cfbundle; includeInIndex = 0; path = RunnerTests.xctest; sourceTree = BUILT_PRODUCTS_DIR; };
+		3B3967151E833CAA004F5970 /* AppFrameworkInfo.plist */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.xml; name = AppFrameworkInfo.plist; path = Flutter/AppFrameworkInfo.plist; sourceTree = "<group>"; };
+		74858FAD1ED2DC5600515810 /* Runner-Bridging-Header.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = "Runner-Bridging-Header.h"; sourceTree = "<group>"; };
+		74858FAE1ED2DC5600515810 /* AppDelegate.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = AppDelegate.swift; sourceTree = "<group>"; };
+		7AFA3C8E1D35360C0083082E /* Release.xcconfig */ = {isa = PBXFileReference; lastKnownFileType = text.xcconfig; name = Release.xcconfig; path = Flutter/Release.xcconfig; sourceTree = "<group>"; };
+		9740EEB21CF90195004384FC /* Debug.xcconfig */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.xcconfig; name = Debug.xcconfig; path = Flutter/Debug.xcconfig; sourceTree = "<group>"; };
+		9740EEB31CF90195004384FC /* Generated.xcconfig */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.xcconfig; name = Generated.xcconfig; path = Flutter/Generated.xcconfig; sourceTree = "<group>"; };
+		97C146EE1CF9000F007C117D /* Runner.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = Runner.app; sourceTree = BUILT_PRODUCTS_DIR; };
+		97C146FB1CF9000F007C117D /* Base */ = {isa = PBXFileReference; lastKnownFileType = file.storyboard; name = Base; path = Base.lproj/Main.storyboard; sourceTree = "<group>"; };
+		97C146FD1CF9000F007C117D /* Assets.xcassets */ = {isa = PBXFileReference; lastKnownFileType = folder.assetcatalog; path = Assets.xcassets; sourceTree = "<group>"; };
+		97C147001CF9000F007C117D /* Base */ = {isa = PBXFileReference; lastKnownFileType = file.storyboard; name = Base; path = Base.lproj/LaunchScreen.storyboard; sourceTree = "<group>"; };
+		97C147021CF9000F007C117D /* Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; path = Info.plist; sourceTree = "<group>"; };
+/* End PBXFileReference section */
+
+/* Begin PBXFrameworksBuildPhase section */
+		97C146EB1CF9000F007C117D /* Frameworks */ = {
+			isa = PBXFrameworksBuildPhase;
+			buildActionMask = 2147483647;
+			files = (
+			);
+			runOnlyForDeploymentPostprocessing = 0;
+		};
+/* End PBXFrameworksBuildPhase section */
+
+/* Begin PBXGroup section */
+		331C8082294A63A400263BE5 /* RunnerTests */ = {
+			isa = PBXGroup;
+			children = (
+				331C807B294A618700263BE5 /* RunnerTests.swift */,
+			);
+			path = RunnerTests;
+			sourceTree = "<group>";
+		};
+		9740EEB11CF90186004384FC /* Flutter */ = {
+			isa = PBXGroup;
+			children = (
+				3B3967151E833CAA004F5970 /* AppFrameworkInfo.plist */,
+				9740EEB21CF90195004384FC /* Debug.xcconfig */,
+				7AFA3C8E1D35360C0083082E /* Release.xcconfig */,
+				9740EEB31CF90195004384FC /* Generated.xcconfig */,
+			);
+			name = Flutter;
+			sourceTree = "<group>";
+		};
+		97C146E51CF9000F007C117D = {
+			isa = PBXGroup;
+			children = (
+				9740EEB11CF90186004384FC /* Flutter */,
+				97C146F01CF9000F007C117D /* Runner */,
+				97C146EF1CF9000F007C117D /* Products */,
+				331C8082294A63A400263BE5 /* RunnerTests */,
+			);
+			sourceTree = "<group>";
+		};
+		97C146EF1CF9000F007C117D /* Products */ = {
+			isa = PBXGroup;
+			children = (
+				97C146EE1CF9000F007C117D /* Runner.app */,
+				331C8081294A63A400263BE5 /* RunnerTests.xctest */,
+			);
+			name = Products;
+			sourceTree = "<group>";
+		};
+		97C146F01CF9000F007C117D /* Runner */ = {
+			isa = PBXGroup;
+			children = (
+				97C146FA1CF9000F007C117D /* Main.storyboard */,
+				97C146FD1CF9000F007C117D /* Assets.xcassets */,
+				97C146FF1CF9000F007C117D /* LaunchScreen.storyboard */,
+				97C147021CF9000F007C117D /* Info.plist */,
+				1498D2321E8E86230040F4C2 /* GeneratedPluginRegistrant.h */,
+				1498D2331E8E89220040F4C2 /* GeneratedPluginRegistrant.m */,
+				74858FAE1ED2DC5600515810 /* AppDelegate.swift */,
+				74858FAD1ED2DC5600515810 /* Runner-Bridging-Header.h */,
+			);
+			path = Runner;
+			sourceTree = "<group>";
+		};
+/* End PBXGroup section */
+
+/* Begin PBXNativeTarget section */
+		331C8080294A63A400263BE5 /* RunnerTests */ = {
+			isa = PBXNativeTarget;
+			buildConfigurationList = 331C8087294A63A400263BE5 /* Build configuration list for PBXNativeTarget "RunnerTests" */;
+			buildPhases = (
+				331C807D294A63A400263BE5 /* Sources */,
+				331C807F294A63A400263BE5 /* Resources */,
+			);
+			buildRules = (
+			);
+			dependencies = (
+				331C8086294A63A400263BE5 /* PBXTargetDependency */,
+			);
+			name = RunnerTests;
+			productName = RunnerTests;
+			productReference = 331C8081294A63A400263BE5 /* RunnerTests.xctest */;
+			productType = "com.apple.product-type.bundle.unit-test";
+		};
+		97C146ED1CF9000F007C117D /* Runner */ = {
+			isa = PBXNativeTarget;
+			buildConfigurationList = 97C147051CF9000F007C117D /* Build configuration list for PBXNativeTarget "Runner" */;
+			buildPhases = (
+				9740EEB61CF901F6004384FC /* Run Script */,
+				97C146EA1CF9000F007C117D /* Sources */,
+				97C146EB1CF9000F007C117D /* Frameworks */,
+				97C146EC1CF9000F007C117D /* Resources */,
+				9705A1C41CF9048500538489 /* Embed Frameworks */,
+				3B06AD1E1E4923F5004D2608 /* Thin Binary */,
+			);
+			buildRules = (
+			);
+			dependencies = (
+			);
+			name = Runner;
+			productName = Runner;
+			productReference = 97C146EE1CF9000F007C117D /* Runner.app */;
+			productType = "com.apple.product-type.application";
+		};
+/* End PBXNativeTarget section */
+
+/* Begin PBXProject section */
+		97C146E61CF9000F007C117D /* Project object */ = {
+			isa = PBXProject;
+			attributes = {
+				BuildIndependentTargetsInParallel = YES;
+				LastUpgradeCheck = 1510;
+				ORGANIZATIONNAME = "";
+				TargetAttributes = {
+					331C8080294A63A400263BE5 = {
+						CreatedOnToolsVersion = 14.0;
+						TestTargetID = 97C146ED1CF9000F007C117D;
+					};
+					97C146ED1CF9000F007C117D = {
+						CreatedOnToolsVersion = 7.3.1;
+						LastSwiftMigration = 1100;
+					};
+				};
+			};
+			buildConfigurationList = 97C146E91CF9000F007C117D /* Build configuration list for PBXProject "Runner" */;
+			compatibilityVersion = "Xcode 9.3";
+			developmentRegion = en;
+			hasScannedForEncodings = 0;
+			knownRegions = (
+				en,
+				Base,
+			);
+			mainGroup = 97C146E51CF9000F007C117D;
+			productRefGroup = 97C146EF1CF9000F007C117D /* Products */;
+			projectDirPath = "";
+			projectRoot = "";
+			targets = (
+				97C146ED1CF9000F007C117D /* Runner */,
+				331C8080294A63A400263BE5 /* RunnerTests */,
+			);
+		};
+/* End PBXProject section */
+
+/* Begin PBXResourcesBuildPhase section */
+		331C807F294A63A400263BE5 /* Resources */ = {
+			isa = PBXResourcesBuildPhase;
+			buildActionMask = 2147483647;
+			files = (
+			);
+			runOnlyForDeploymentPostprocessing = 0;
+		};
+		97C146EC1CF9000F007C117D /* Resources */ = {
+			isa = PBXResourcesBuildPhase;
+			buildActionMask = 2147483647;
+			files = (
+				97C147011CF9000F007C117D /* LaunchScreen.storyboard in Resources */,
+				3B3967161E833CAA004F5970 /* AppFrameworkInfo.plist in Resources */,
+				97C146FE1CF9000F007C117D /* Assets.xcassets in Resources */,
+				97C146FC1CF9000F007C117D /* Main.storyboard in Resources */,
+			);
+			runOnlyForDeploymentPostprocessing = 0;
+		};
+/* End PBXResourcesBuildPhase section */
+
+/* Begin PBXShellScriptBuildPhase section */
+		3B06AD1E1E4923F5004D2608 /* Thin Binary */ = {
+			isa = PBXShellScriptBuildPhase;
+			alwaysOutOfDate = 1;
+			buildActionMask = 2147483647;
+			files = (
+			);
+			inputPaths = (
+				"${TARGET_BUILD_DIR}/${INFOPLIST_PATH}",
+			);
+			name = "Thin Binary";
+			outputPaths = (
+			);
+			runOnlyForDeploymentPostprocessing = 0;
+			shellPath = /bin/sh;
+			shellScript = "/bin/sh \"$FLUTTER_ROOT/packages/flutter_tools/bin/xcode_backend.sh\" embed_and_thin";
+		};
+		9740EEB61CF901F6004384FC /* Run Script */ = {
+			isa = PBXShellScriptBuildPhase;
+			alwaysOutOfDate = 1;
+			buildActionMask = 2147483647;
+			files = (
+			);
+			inputPaths = (
+			);
+			name = "Run Script";
+			outputPaths = (
+			);
+			runOnlyForDeploymentPostprocessing = 0;
+			shellPath = /bin/sh;
+			shellScript = "/bin/sh \"$FLUTTER_ROOT/packages/flutter_tools/bin/xcode_backend.sh\" build";
+		};
+/* End PBXShellScriptBuildPhase section */
+
+/* Begin PBXSourcesBuildPhase section */
+		331C807D294A63A400263BE5 /* Sources */ = {
+			isa = PBXSourcesBuildPhase;
+			buildActionMask = 2147483647;
+			files = (
+				331C808B294A63AB00263BE5 /* RunnerTests.swift in Sources */,
+			);
+			runOnlyForDeploymentPostprocessing = 0;
+		};
+		97C146EA1CF9000F007C117D /* Sources */ = {
+			isa = PBXSourcesBuildPhase;
+			buildActionMask = 2147483647;
+			files = (
+				74858FAF1ED2DC5600515810 /* AppDelegate.swift in Sources */,
+				1498D2341E8E89220040F4C2 /* GeneratedPluginRegistrant.m in Sources */,
+			);
+			runOnlyForDeploymentPostprocessing = 0;
+		};
+/* End PBXSourcesBuildPhase section */
+
+/* Begin PBXTargetDependency section */
+		331C8086294A63A400263BE5 /* PBXTargetDependency */ = {
+			isa = PBXTargetDependency;
+			target = 97C146ED1CF9000F007C117D /* Runner */;
+			targetProxy = 331C8085294A63A400263BE5 /* PBXContainerItemProxy */;
+		};
+/* End PBXTargetDependency section */
+
+/* Begin PBXVariantGroup section */
+		97C146FA1CF9000F007C117D /* Main.storyboard */ = {
+			isa = PBXVariantGroup;
+			children = (
+				97C146FB1CF9000F007C117D /* Base */,
+			);
+			name = Main.storyboard;
+			sourceTree = "<group>";
+		};
+		97C146FF1CF9000F007C117D /* LaunchScreen.storyboard */ = {
+			isa = PBXVariantGroup;
+			children = (
+				97C147001CF9000F007C117D /* Base */,
+			);
+			name = LaunchScreen.storyboard;
+			sourceTree = "<group>";
+		};
+/* End PBXVariantGroup section */
+
+/* Begin XCBuildConfiguration section */
+		249021D3217E4FDB00AE95B9 /* Profile */ = {
+			isa = XCBuildConfiguration;
+			buildSettings = {
+				ALWAYS_SEARCH_USER_PATHS = NO;
+				ASSETCATALOG_COMPILER_GENERATE_SWIFT_ASSET_SYMBOL_EXTENSIONS = YES;
+				CLANG_ANALYZER_NONNULL = YES;
+				CLANG_CXX_LANGUAGE_STANDARD = "gnu++0x";
+				CLANG_CXX_LIBRARY = "libc++";
+				CLANG_ENABLE_MODULES = YES;
+				CLANG_ENABLE_OBJC_ARC = YES;
+				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
+				CLANG_WARN_BOOL_CONVERSION = YES;
+				CLANG_WARN_COMMA = YES;
+				CLANG_WARN_CONSTANT_CONVERSION = YES;
+				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
+				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
+				CLANG_WARN_EMPTY_BODY = YES;
+				CLANG_WARN_ENUM_CONVERSION = YES;
+				CLANG_WARN_INFINITE_RECURSION = YES;
+				CLANG_WARN_INT_CONVERSION = YES;
+				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
+				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
+				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
+				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
+				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
+				CLANG_WARN_STRICT_PROTOTYPES = YES;
+				CLANG_WARN_SUSPICIOUS_MOVE = YES;
+				CLANG_WARN_UNREACHABLE_CODE = YES;
+				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
+				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "iPhone Developer";
+				COPY_PHASE_STRIP = NO;
+				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
+				ENABLE_NS_ASSERTIONS = NO;
+				ENABLE_STRICT_OBJC_MSGSEND = YES;
+				ENABLE_USER_SCRIPT_SANDBOXING = NO;
+				GCC_C_LANGUAGE_STANDARD = gnu99;
+				GCC_NO_COMMON_BLOCKS = YES;
+				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
+				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
+				GCC_WARN_UNDECLARED_SELECTOR = YES;
+				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
+				GCC_WARN_UNUSED_FUNCTION = YES;
+				GCC_WARN_UNUSED_VARIABLE = YES;
+				IPHONEOS_DEPLOYMENT_TARGET = 12.0;
+				MTL_ENABLE_DEBUG_INFO = NO;
+				SDKROOT = iphoneos;
+				SUPPORTED_PLATFORMS = iphoneos;
+				TARGETED_DEVICE_FAMILY = "1,2";
+				VALIDATE_PRODUCT = YES;
+			};
+			name = Profile;
+		};
+		249021D4217E4FDB00AE95B9 /* Profile */ = {
+			isa = XCBuildConfiguration;
+			baseConfigurationReference = 7AFA3C8E1D35360C0083082E /* Release.xcconfig */;
+			buildSettings = {
+				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
+				CLANG_ENABLE_MODULES = YES;
+				CURRENT_PROJECT_VERSION = "$(FLUTTER_BUILD_NUMBER)";
+				ENABLE_BITCODE = NO;
+				INFOPLIST_FILE = Runner/Info.plist;
+				LD_RUNPATH_SEARCH_PATHS = (
+					"$(inherited)",
+					"@executable_path/Frameworks",
+				);
+				PRODUCT_BUNDLE_IDENTIFIER = com.example.petitpal;
+				PRODUCT_NAME = "$(TARGET_NAME)";
+				SWIFT_OBJC_BRIDGING_HEADER = "Runner/Runner-Bridging-Header.h";
+				SWIFT_VERSION = 5.0;
+				VERSIONING_SYSTEM = "apple-generic";
+			};
+			name = Profile;
+		};
+		331C8088294A63A400263BE5 /* Debug */ = {
+			isa = XCBuildConfiguration;
+			buildSettings = {
+				BUNDLE_LOADER = "$(TEST_HOST)";
+				CODE_SIGN_STYLE = Automatic;
+				CURRENT_PROJECT_VERSION = 1;
+				GENERATE_INFOPLIST_FILE = YES;
+				MARKETING_VERSION = 1.0;
+				PRODUCT_BUNDLE_IDENTIFIER = com.example.petitpal.RunnerTests;
+				PRODUCT_NAME = "$(TARGET_NAME)";
+				SWIFT_ACTIVE_COMPILATION_CONDITIONS = DEBUG;
+				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
+				SWIFT_VERSION = 5.0;
+				TEST_HOST = "$(BUILT_PRODUCTS_DIR)/Runner.app/$(BUNDLE_EXECUTABLE_FOLDER_PATH)/Runner";
+			};
+			name = Debug;
+		};
+		331C8089294A63A400263BE5 /* Release */ = {
+			isa = XCBuildConfiguration;
+			buildSettings = {
+				BUNDLE_LOADER = "$(TEST_HOST)";
+				CODE_SIGN_STYLE = Automatic;
+				CURRENT_PROJECT_VERSION = 1;
+				GENERATE_INFOPLIST_FILE = YES;
+				MARKETING_VERSION = 1.0;
+				PRODUCT_BUNDLE_IDENTIFIER = com.example.petitpal.RunnerTests;
+				PRODUCT_NAME = "$(TARGET_NAME)";
+				SWIFT_VERSION = 5.0;
+				TEST_HOST = "$(BUILT_PRODUCTS_DIR)/Runner.app/$(BUNDLE_EXECUTABLE_FOLDER_PATH)/Runner";
+			};
+			name = Release;
+		};
+		331C808A294A63A400263BE5 /* Profile */ = {
+			isa = XCBuildConfiguration;
+			buildSettings = {
+				BUNDLE_LOADER = "$(TEST_HOST)";
+				CODE_SIGN_STYLE = Automatic;
+				CURRENT_PROJECT_VERSION = 1;
+				GENERATE_INFOPLIST_FILE = YES;
+				MARKETING_VERSION = 1.0;
+				PRODUCT_BUNDLE_IDENTIFIER = com.example.petitpal.RunnerTests;
+				PRODUCT_NAME = "$(TARGET_NAME)";
+				SWIFT_VERSION = 5.0;
+				TEST_HOST = "$(BUILT_PRODUCTS_DIR)/Runner.app/$(BUNDLE_EXECUTABLE_FOLDER_PATH)/Runner";
+			};
+			name = Profile;
+		};
+		97C147031CF9000F007C117D /* Debug */ = {
+			isa = XCBuildConfiguration;
+			buildSettings = {
+				ALWAYS_SEARCH_USER_PATHS = NO;
+				ASSETCATALOG_COMPILER_GENERATE_SWIFT_ASSET_SYMBOL_EXTENSIONS = YES;
+				CLANG_ANALYZER_NONNULL = YES;
+				CLANG_CXX_LANGUAGE_STANDARD = "gnu++0x";
+				CLANG_CXX_LIBRARY = "libc++";
+				CLANG_ENABLE_MODULES = YES;
+				CLANG_ENABLE_OBJC_ARC = YES;
+				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
+				CLANG_WARN_BOOL_CONVERSION = YES;
+				CLANG_WARN_COMMA = YES;
+				CLANG_WARN_CONSTANT_CONVERSION = YES;
+				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
+				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
+				CLANG_WARN_EMPTY_BODY = YES;
+				CLANG_WARN_ENUM_CONVERSION = YES;
+				CLANG_WARN_INFINITE_RECURSION = YES;
+				CLANG_WARN_INT_CONVERSION = YES;
+				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
+				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
+				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
+				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
+				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
+				CLANG_WARN_STRICT_PROTOTYPES = YES;
+				CLANG_WARN_SUSPICIOUS_MOVE = YES;
+				CLANG_WARN_UNREACHABLE_CODE = YES;
+				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
+				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "iPhone Developer";
+				COPY_PHASE_STRIP = NO;
+				DEBUG_INFORMATION_FORMAT = dwarf;
+				ENABLE_STRICT_OBJC_MSGSEND = YES;
+				ENABLE_TESTABILITY = YES;
+				ENABLE_USER_SCRIPT_SANDBOXING = NO;
+				GCC_C_LANGUAGE_STANDARD = gnu99;
+				GCC_DYNAMIC_NO_PIC = NO;
+				GCC_NO_COMMON_BLOCKS = YES;
+				GCC_OPTIMIZATION_LEVEL = 0;
+				GCC_PREPROCESSOR_DEFINITIONS = (
+					"DEBUG=1",
+					"$(inherited)",
+				);
+				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
+				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
+				GCC_WARN_UNDECLARED_SELECTOR = YES;
+				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
+				GCC_WARN_UNUSED_FUNCTION = YES;
+				GCC_WARN_UNUSED_VARIABLE = YES;
+				IPHONEOS_DEPLOYMENT_TARGET = 12.0;
+				MTL_ENABLE_DEBUG_INFO = YES;
+				ONLY_ACTIVE_ARCH = YES;
+				SDKROOT = iphoneos;
+				TARGETED_DEVICE_FAMILY = "1,2";
+			};
+			name = Debug;
+		};
+		97C147041CF9000F007C117D /* Release */ = {
+			isa = XCBuildConfiguration;
+			buildSettings = {
+				ALWAYS_SEARCH_USER_PATHS = NO;
+				ASSETCATALOG_COMPILER_GENERATE_SWIFT_ASSET_SYMBOL_EXTENSIONS = YES;
+				CLANG_ANALYZER_NONNULL = YES;
+				CLANG_CXX_LANGUAGE_STANDARD = "gnu++0x";
+				CLANG_CXX_LIBRARY = "libc++";
+				CLANG_ENABLE_MODULES = YES;
+				CLANG_ENABLE_OBJC_ARC = YES;
+				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
+				CLANG_WARN_BOOL_CONVERSION = YES;
+				CLANG_WARN_COMMA = YES;
+				CLANG_WARN_CONSTANT_CONVERSION = YES;
+				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
+				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
+				CLANG_WARN_EMPTY_BODY = YES;
+				CLANG_WARN_ENUM_CONVERSION = YES;
+				CLANG_WARN_INFINITE_RECURSION = YES;
+				CLANG_WARN_INT_CONVERSION = YES;
+				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
+				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
+				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
+				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
+				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
+				CLANG_WARN_STRICT_PROTOTYPES = YES;
+				CLANG_WARN_SUSPICIOUS_MOVE = YES;
+				CLANG_WARN_UNREACHABLE_CODE = YES;
+				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
+				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "iPhone Developer";
+				COPY_PHASE_STRIP = NO;
+				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
+				ENABLE_NS_ASSERTIONS = NO;
+				ENABLE_STRICT_OBJC_MSGSEND = YES;
+				ENABLE_USER_SCRIPT_SANDBOXING = NO;
+				GCC_C_LANGUAGE_STANDARD = gnu99;
+				GCC_NO_COMMON_BLOCKS = YES;
+				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
+				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
+				GCC_WARN_UNDECLARED_SELECTOR = YES;
+				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
+				GCC_WARN_UNUSED_FUNCTION = YES;
+				GCC_WARN_UNUSED_VARIABLE = YES;
+				IPHONEOS_DEPLOYMENT_TARGET = 12.0;
+				MTL_ENABLE_DEBUG_INFO = NO;
+				SDKROOT = iphoneos;
+				SUPPORTED_PLATFORMS = iphoneos;
+				SWIFT_COMPILATION_MODE = wholemodule;
+				SWIFT_OPTIMIZATION_LEVEL = "-O";
+				TARGETED_DEVICE_FAMILY = "1,2";
+				VALIDATE_PRODUCT = YES;
+			};
+			name = Release;
+		};
+		97C147061CF9000F007C117D /* Debug */ = {
+			isa = XCBuildConfiguration;
+			baseConfigurationReference = 9740EEB21CF90195004384FC /* Debug.xcconfig */;
+			buildSettings = {
+				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
+				CLANG_ENABLE_MODULES = YES;
+				CURRENT_PROJECT_VERSION = "$(FLUTTER_BUILD_NUMBER)";
+				ENABLE_BITCODE = NO;
+				INFOPLIST_FILE = Runner/Info.plist;
+				LD_RUNPATH_SEARCH_PATHS = (
+					"$(inherited)",
+					"@executable_path/Frameworks",
+				);
+				PRODUCT_BUNDLE_IDENTIFIER = com.example.petitpal;
+				PRODUCT_NAME = "$(TARGET_NAME)";
+				SWIFT_OBJC_BRIDGING_HEADER = "Runner/Runner-Bridging-Header.h";
+				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
+				SWIFT_VERSION = 5.0;
+				VERSIONING_SYSTEM = "apple-generic";
+			};
+			name = Debug;
+		};
+		97C147071CF9000F007C117D /* Release */ = {
+			isa = XCBuildConfiguration;
+			baseConfigurationReference = 7AFA3C8E1D35360C0083082E /* Release.xcconfig */;
+			buildSettings = {
+				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
+				CLANG_ENABLE_MODULES = YES;
+				CURRENT_PROJECT_VERSION = "$(FLUTTER_BUILD_NUMBER)";
+				ENABLE_BITCODE = NO;
+				INFOPLIST_FILE = Runner/Info.plist;
+				LD_RUNPATH_SEARCH_PATHS = (
+					"$(inherited)",
+					"@executable_path/Frameworks",
+				);
+				PRODUCT_BUNDLE_IDENTIFIER = com.example.petitpal;
+				PRODUCT_NAME = "$(TARGET_NAME)";
+				SWIFT_OBJC_BRIDGING_HEADER = "Runner/Runner-Bridging-Header.h";
+				SWIFT_VERSION = 5.0;
+				VERSIONING_SYSTEM = "apple-generic";
+			};
+			name = Release;
+		};
+/* End XCBuildConfiguration section */
+
+/* Begin XCConfigurationList section */
+		331C8087294A63A400263BE5 /* Build configuration list for PBXNativeTarget "RunnerTests" */ = {
+			isa = XCConfigurationList;
+			buildConfigurations = (
+				331C8088294A63A400263BE5 /* Debug */,
+				331C8089294A63A400263BE5 /* Release */,
+				331C808A294A63A400263BE5 /* Profile */,
+			);
+			defaultConfigurationIsVisible = 0;
+			defaultConfigurationName = Release;
+		};
+		97C146E91CF9000F007C117D /* Build configuration list for PBXProject "Runner" */ = {
+			isa = XCConfigurationList;
+			buildConfigurations = (
+				97C147031CF9000F007C117D /* Debug */,
+				97C147041CF9000F007C117D /* Release */,
+				249021D3217E4FDB00AE95B9 /* Profile */,
+			);
+			defaultConfigurationIsVisible = 0;
+			defaultConfigurationName = Release;
+		};
+		97C147051CF9000F007C117D /* Build configuration list for PBXNativeTarget "Runner" */ = {
+			isa = XCConfigurationList;
+			buildConfigurations = (
+				97C147061CF9000F007C117D /* Debug */,
+				97C147071CF9000F007C117D /* Release */,
+				249021D4217E4FDB00AE95B9 /* Profile */,
+			);
+			defaultConfigurationIsVisible = 0;
+			defaultConfigurationName = Release;
+		};
+/* End XCConfigurationList section */
+	};
+	rootObject = 97C146E61CF9000F007C117D /* Project object */;
+}
diff --git a/petitpal/ios/Runner.xcodeproj/project.xcworkspace/contents.xcworkspacedata b/petitpal/ios/Runner.xcodeproj/project.xcworkspace/contents.xcworkspacedata
index 919434a..c4b79bd 100644
--- a/petitpal/ios/Runner.xcodeproj/project.xcworkspace/contents.xcworkspacedata
+++ b/petitpal/ios/Runner.xcodeproj/project.xcworkspace/contents.xcworkspacedata
@@ -1,7 +1,7 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<Workspace
-   version = "1.0">
-   <FileRef
-      location = "self:">
-   </FileRef>
-</Workspace>
+<?xml version="1.0" encoding="UTF-8"?>
+<Workspace
+   version = "1.0">
+   <FileRef
+      location = "self:">
+   </FileRef>
+</Workspace>
diff --git a/petitpal/ios/Runner.xcodeproj/project.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist b/petitpal/ios/Runner.xcodeproj/project.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist
index 18d9810..fc6bf80 100644
--- a/petitpal/ios/Runner.xcodeproj/project.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist
+++ b/petitpal/ios/Runner.xcodeproj/project.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist
@@ -1,8 +1,8 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
-<plist version="1.0">
-<dict>
-	<key>IDEDidComputeMac32BitWarning</key>
-	<true/>
-</dict>
-</plist>
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
+<plist version="1.0">
+<dict>
+	<key>IDEDidComputeMac32BitWarning</key>
+	<true/>
+</dict>
+</plist>
diff --git a/petitpal/ios/Runner.xcodeproj/project.xcworkspace/xcshareddata/WorkspaceSettings.xcsettings b/petitpal/ios/Runner.xcodeproj/project.xcworkspace/xcshareddata/WorkspaceSettings.xcsettings
index f9b0d7c..af0309c 100644
--- a/petitpal/ios/Runner.xcodeproj/project.xcworkspace/xcshareddata/WorkspaceSettings.xcsettings
+++ b/petitpal/ios/Runner.xcodeproj/project.xcworkspace/xcshareddata/WorkspaceSettings.xcsettings
@@ -1,8 +1,8 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
-<plist version="1.0">
-<dict>
-	<key>PreviewsEnabled</key>
-	<false/>
-</dict>
-</plist>
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
+<plist version="1.0">
+<dict>
+	<key>PreviewsEnabled</key>
+	<false/>
+</dict>
+</plist>
diff --git a/petitpal/ios/Runner.xcodeproj/xcshareddata/xcschemes/Runner.xcscheme b/petitpal/ios/Runner.xcodeproj/xcshareddata/xcschemes/Runner.xcscheme
index e3773d4..bbabc4e 100644
--- a/petitpal/ios/Runner.xcodeproj/xcshareddata/xcschemes/Runner.xcscheme
+++ b/petitpal/ios/Runner.xcodeproj/xcshareddata/xcschemes/Runner.xcscheme
@@ -1,101 +1,101 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<Scheme
-   LastUpgradeVersion = "1510"
-   version = "1.3">
-   <BuildAction
-      parallelizeBuildables = "YES"
-      buildImplicitDependencies = "YES">
-      <BuildActionEntries>
-         <BuildActionEntry
-            buildForTesting = "YES"
-            buildForRunning = "YES"
-            buildForProfiling = "YES"
-            buildForArchiving = "YES"
-            buildForAnalyzing = "YES">
-            <BuildableReference
-               BuildableIdentifier = "primary"
-               BlueprintIdentifier = "97C146ED1CF9000F007C117D"
-               BuildableName = "Runner.app"
-               BlueprintName = "Runner"
-               ReferencedContainer = "container:Runner.xcodeproj">
-            </BuildableReference>
-         </BuildActionEntry>
-      </BuildActionEntries>
-   </BuildAction>
-   <TestAction
-      buildConfiguration = "Debug"
-      selectedDebuggerIdentifier = "Xcode.DebuggerFoundation.Debugger.LLDB"
-      selectedLauncherIdentifier = "Xcode.DebuggerFoundation.Launcher.LLDB"
-      customLLDBInitFile = "$(SRCROOT)/Flutter/ephemeral/flutter_lldbinit"
-      shouldUseLaunchSchemeArgsEnv = "YES">
-      <MacroExpansion>
-         <BuildableReference
-            BuildableIdentifier = "primary"
-            BlueprintIdentifier = "97C146ED1CF9000F007C117D"
-            BuildableName = "Runner.app"
-            BlueprintName = "Runner"
-            ReferencedContainer = "container:Runner.xcodeproj">
-         </BuildableReference>
-      </MacroExpansion>
-      <Testables>
-         <TestableReference
-            skipped = "NO"
-            parallelizable = "YES">
-            <BuildableReference
-               BuildableIdentifier = "primary"
-               BlueprintIdentifier = "331C8080294A63A400263BE5"
-               BuildableName = "RunnerTests.xctest"
-               BlueprintName = "RunnerTests"
-               ReferencedContainer = "container:Runner.xcodeproj">
-            </BuildableReference>
-         </TestableReference>
-      </Testables>
-   </TestAction>
-   <LaunchAction
-      buildConfiguration = "Debug"
-      selectedDebuggerIdentifier = "Xcode.DebuggerFoundation.Debugger.LLDB"
-      selectedLauncherIdentifier = "Xcode.DebuggerFoundation.Launcher.LLDB"
-      customLLDBInitFile = "$(SRCROOT)/Flutter/ephemeral/flutter_lldbinit"
-      launchStyle = "0"
-      useCustomWorkingDirectory = "NO"
-      ignoresPersistentStateOnLaunch = "NO"
-      debugDocumentVersioning = "YES"
-      debugServiceExtension = "internal"
-      enableGPUValidationMode = "1"
-      allowLocationSimulation = "YES">
-      <BuildableProductRunnable
-         runnableDebuggingMode = "0">
-         <BuildableReference
-            BuildableIdentifier = "primary"
-            BlueprintIdentifier = "97C146ED1CF9000F007C117D"
-            BuildableName = "Runner.app"
-            BlueprintName = "Runner"
-            ReferencedContainer = "container:Runner.xcodeproj">
-         </BuildableReference>
-      </BuildableProductRunnable>
-   </LaunchAction>
-   <ProfileAction
-      buildConfiguration = "Profile"
-      shouldUseLaunchSchemeArgsEnv = "YES"
-      savedToolIdentifier = ""
-      useCustomWorkingDirectory = "NO"
-      debugDocumentVersioning = "YES">
-      <BuildableProductRunnable
-         runnableDebuggingMode = "0">
-         <BuildableReference
-            BuildableIdentifier = "primary"
-            BlueprintIdentifier = "97C146ED1CF9000F007C117D"
-            BuildableName = "Runner.app"
-            BlueprintName = "Runner"
-            ReferencedContainer = "container:Runner.xcodeproj">
-         </BuildableReference>
-      </BuildableProductRunnable>
-   </ProfileAction>
-   <AnalyzeAction
-      buildConfiguration = "Debug">
-   </AnalyzeAction>
-   <ArchiveAction
-      buildConfiguration = "Release"
-      revealArchiveInOrganizer = "YES">
-   </ArchiveAction>
-</Scheme>
+<?xml version="1.0" encoding="UTF-8"?>
+<Scheme
+   LastUpgradeVersion = "1510"
+   version = "1.3">
+   <BuildAction
+      parallelizeBuildables = "YES"
+      buildImplicitDependencies = "YES">
+      <BuildActionEntries>
+         <BuildActionEntry
+            buildForTesting = "YES"
+            buildForRunning = "YES"
+            buildForProfiling = "YES"
+            buildForArchiving = "YES"
+            buildForAnalyzing = "YES">
+            <BuildableReference
+               BuildableIdentifier = "primary"
+               BlueprintIdentifier = "97C146ED1CF9000F007C117D"
+               BuildableName = "Runner.app"
+               BlueprintName = "Runner"
+               ReferencedContainer = "container:Runner.xcodeproj">
+            </BuildableReference>
+         </BuildActionEntry>
+      </BuildActionEntries>
+   </BuildAction>
+   <TestAction
+      buildConfiguration = "Debug"
+      selectedDebuggerIdentifier = "Xcode.DebuggerFoundation.Debugger.LLDB"
+      selectedLauncherIdentifier = "Xcode.DebuggerFoundation.Launcher.LLDB"
+      customLLDBInitFile = "$(SRCROOT)/Flutter/ephemeral/flutter_lldbinit"
+      shouldUseLaunchSchemeArgsEnv = "YES">
+      <MacroExpansion>
+         <BuildableReference
+            BuildableIdentifier = "primary"
+            BlueprintIdentifier = "97C146ED1CF9000F007C117D"
+            BuildableName = "Runner.app"
+            BlueprintName = "Runner"
+            ReferencedContainer = "container:Runner.xcodeproj">
+         </BuildableReference>
+      </MacroExpansion>
+      <Testables>
+         <TestableReference
+            skipped = "NO"
+            parallelizable = "YES">
+            <BuildableReference
+               BuildableIdentifier = "primary"
+               BlueprintIdentifier = "331C8080294A63A400263BE5"
+               BuildableName = "RunnerTests.xctest"
+               BlueprintName = "RunnerTests"
+               ReferencedContainer = "container:Runner.xcodeproj">
+            </BuildableReference>
+         </TestableReference>
+      </Testables>
+   </TestAction>
+   <LaunchAction
+      buildConfiguration = "Debug"
+      selectedDebuggerIdentifier = "Xcode.DebuggerFoundation.Debugger.LLDB"
+      selectedLauncherIdentifier = "Xcode.DebuggerFoundation.Launcher.LLDB"
+      customLLDBInitFile = "$(SRCROOT)/Flutter/ephemeral/flutter_lldbinit"
+      launchStyle = "0"
+      useCustomWorkingDirectory = "NO"
+      ignoresPersistentStateOnLaunch = "NO"
+      debugDocumentVersioning = "YES"
+      debugServiceExtension = "internal"
+      enableGPUValidationMode = "1"
+      allowLocationSimulation = "YES">
+      <BuildableProductRunnable
+         runnableDebuggingMode = "0">
+         <BuildableReference
+            BuildableIdentifier = "primary"
+            BlueprintIdentifier = "97C146ED1CF9000F007C117D"
+            BuildableName = "Runner.app"
+            BlueprintName = "Runner"
+            ReferencedContainer = "container:Runner.xcodeproj">
+         </BuildableReference>
+      </BuildableProductRunnable>
+   </LaunchAction>
+   <ProfileAction
+      buildConfiguration = "Profile"
+      shouldUseLaunchSchemeArgsEnv = "YES"
+      savedToolIdentifier = ""
+      useCustomWorkingDirectory = "NO"
+      debugDocumentVersioning = "YES">
+      <BuildableProductRunnable
+         runnableDebuggingMode = "0">
+         <BuildableReference
+            BuildableIdentifier = "primary"
+            BlueprintIdentifier = "97C146ED1CF9000F007C117D"
+            BuildableName = "Runner.app"
+            BlueprintName = "Runner"
+            ReferencedContainer = "container:Runner.xcodeproj">
+         </BuildableReference>
+      </BuildableProductRunnable>
+   </ProfileAction>
+   <AnalyzeAction
+      buildConfiguration = "Debug">
+   </AnalyzeAction>
+   <ArchiveAction
+      buildConfiguration = "Release"
+      revealArchiveInOrganizer = "YES">
+   </ArchiveAction>
+</Scheme>
diff --git a/petitpal/ios/Runner.xcworkspace/contents.xcworkspacedata b/petitpal/ios/Runner.xcworkspace/contents.xcworkspacedata
index 1d526a1..59c6d39 100644
--- a/petitpal/ios/Runner.xcworkspace/contents.xcworkspacedata
+++ b/petitpal/ios/Runner.xcworkspace/contents.xcworkspacedata
@@ -1,7 +1,7 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<Workspace
-   version = "1.0">
-   <FileRef
-      location = "group:Runner.xcodeproj">
-   </FileRef>
-</Workspace>
+<?xml version="1.0" encoding="UTF-8"?>
+<Workspace
+   version = "1.0">
+   <FileRef
+      location = "group:Runner.xcodeproj">
+   </FileRef>
+</Workspace>
diff --git a/petitpal/ios/Runner.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist b/petitpal/ios/Runner.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist
index 18d9810..fc6bf80 100644
--- a/petitpal/ios/Runner.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist
+++ b/petitpal/ios/Runner.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist
@@ -1,8 +1,8 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
-<plist version="1.0">
-<dict>
-	<key>IDEDidComputeMac32BitWarning</key>
-	<true/>
-</dict>
-</plist>
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
+<plist version="1.0">
+<dict>
+	<key>IDEDidComputeMac32BitWarning</key>
+	<true/>
+</dict>
+</plist>
diff --git a/petitpal/ios/Runner.xcworkspace/xcshareddata/WorkspaceSettings.xcsettings b/petitpal/ios/Runner.xcworkspace/xcshareddata/WorkspaceSettings.xcsettings
index f9b0d7c..af0309c 100644
--- a/petitpal/ios/Runner.xcworkspace/xcshareddata/WorkspaceSettings.xcsettings
+++ b/petitpal/ios/Runner.xcworkspace/xcshareddata/WorkspaceSettings.xcsettings
@@ -1,8 +1,8 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
-<plist version="1.0">
-<dict>
-	<key>PreviewsEnabled</key>
-	<false/>
-</dict>
-</plist>
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
+<plist version="1.0">
+<dict>
+	<key>PreviewsEnabled</key>
+	<false/>
+</dict>
+</plist>
diff --git a/petitpal/ios/Runner/AppDelegate.swift b/petitpal/ios/Runner/AppDelegate.swift
index 6266644..8be1cec 100644
--- a/petitpal/ios/Runner/AppDelegate.swift
+++ b/petitpal/ios/Runner/AppDelegate.swift
@@ -1,13 +1,13 @@
-import Flutter
-import UIKit
-
-@main
-@objc class AppDelegate: FlutterAppDelegate {
-  override func application(
-    _ application: UIApplication,
-    didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?
-  ) -> Bool {
-    GeneratedPluginRegistrant.register(with: self)
-    return super.application(application, didFinishLaunchingWithOptions: launchOptions)
-  }
-}
+import Flutter
+import UIKit
+
+@main
+@objc class AppDelegate: FlutterAppDelegate {
+  override func application(
+    _ application: UIApplication,
+    didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?
+  ) -> Bool {
+    GeneratedPluginRegistrant.register(with: self)
+    return super.application(application, didFinishLaunchingWithOptions: launchOptions)
+  }
+}
diff --git a/petitpal/ios/Runner/Assets.xcassets/AppIcon.appiconset/Contents.json b/petitpal/ios/Runner/Assets.xcassets/AppIcon.appiconset/Contents.json
index d36b1fa..1950fd8 100644
--- a/petitpal/ios/Runner/Assets.xcassets/AppIcon.appiconset/Contents.json
+++ b/petitpal/ios/Runner/Assets.xcassets/AppIcon.appiconset/Contents.json
@@ -1,122 +1,122 @@
-{
-  "images" : [
-    {
-      "size" : "20x20",
-      "idiom" : "iphone",
-      "filename" : "Icon-App-20x20@2x.png",
-      "scale" : "2x"
-    },
-    {
-      "size" : "20x20",
-      "idiom" : "iphone",
-      "filename" : "Icon-App-20x20@3x.png",
-      "scale" : "3x"
-    },
-    {
-      "size" : "29x29",
-      "idiom" : "iphone",
-      "filename" : "Icon-App-29x29@1x.png",
-      "scale" : "1x"
-    },
-    {
-      "size" : "29x29",
-      "idiom" : "iphone",
-      "filename" : "Icon-App-29x29@2x.png",
-      "scale" : "2x"
-    },
-    {
-      "size" : "29x29",
-      "idiom" : "iphone",
-      "filename" : "Icon-App-29x29@3x.png",
-      "scale" : "3x"
-    },
-    {
-      "size" : "40x40",
-      "idiom" : "iphone",
-      "filename" : "Icon-App-40x40@2x.png",
-      "scale" : "2x"
-    },
-    {
-      "size" : "40x40",
-      "idiom" : "iphone",
-      "filename" : "Icon-App-40x40@3x.png",
-      "scale" : "3x"
-    },
-    {
-      "size" : "60x60",
-      "idiom" : "iphone",
-      "filename" : "Icon-App-60x60@2x.png",
-      "scale" : "2x"
-    },
-    {
-      "size" : "60x60",
-      "idiom" : "iphone",
-      "filename" : "Icon-App-60x60@3x.png",
-      "scale" : "3x"
-    },
-    {
-      "size" : "20x20",
-      "idiom" : "ipad",
-      "filename" : "Icon-App-20x20@1x.png",
-      "scale" : "1x"
-    },
-    {
-      "size" : "20x20",
-      "idiom" : "ipad",
-      "filename" : "Icon-App-20x20@2x.png",
-      "scale" : "2x"
-    },
-    {
-      "size" : "29x29",
-      "idiom" : "ipad",
-      "filename" : "Icon-App-29x29@1x.png",
-      "scale" : "1x"
-    },
-    {
-      "size" : "29x29",
-      "idiom" : "ipad",
-      "filename" : "Icon-App-29x29@2x.png",
-      "scale" : "2x"
-    },
-    {
-      "size" : "40x40",
-      "idiom" : "ipad",
-      "filename" : "Icon-App-40x40@1x.png",
-      "scale" : "1x"
-    },
-    {
-      "size" : "40x40",
-      "idiom" : "ipad",
-      "filename" : "Icon-App-40x40@2x.png",
-      "scale" : "2x"
-    },
-    {
-      "size" : "76x76",
-      "idiom" : "ipad",
-      "filename" : "Icon-App-76x76@1x.png",
-      "scale" : "1x"
-    },
-    {
-      "size" : "76x76",
-      "idiom" : "ipad",
-      "filename" : "Icon-App-76x76@2x.png",
-      "scale" : "2x"
-    },
-    {
-      "size" : "83.5x83.5",
-      "idiom" : "ipad",
-      "filename" : "Icon-App-83.5x83.5@2x.png",
-      "scale" : "2x"
-    },
-    {
-      "size" : "1024x1024",
-      "idiom" : "ios-marketing",
-      "filename" : "Icon-App-1024x1024@1x.png",
-      "scale" : "1x"
-    }
-  ],
-  "info" : {
-    "version" : 1,
-    "author" : "xcode"
-  }
-}
+{
+  "images" : [
+    {
+      "size" : "20x20",
+      "idiom" : "iphone",
+      "filename" : "Icon-App-20x20@2x.png",
+      "scale" : "2x"
+    },
+    {
+      "size" : "20x20",
+      "idiom" : "iphone",
+      "filename" : "Icon-App-20x20@3x.png",
+      "scale" : "3x"
+    },
+    {
+      "size" : "29x29",
+      "idiom" : "iphone",
+      "filename" : "Icon-App-29x29@1x.png",
+      "scale" : "1x"
+    },
+    {
+      "size" : "29x29",
+      "idiom" : "iphone",
+      "filename" : "Icon-App-29x29@2x.png",
+      "scale" : "2x"
+    },
+    {
+      "size" : "29x29",
+      "idiom" : "iphone",
+      "filename" : "Icon-App-29x29@3x.png",
+      "scale" : "3x"
+    },
+    {
+      "size" : "40x40",
+      "idiom" : "iphone",
+      "filename" : "Icon-App-40x40@2x.png",
+      "scale" : "2x"
+    },
+    {
+      "size" : "40x40",
+      "idiom" : "iphone",
+      "filename" : "Icon-App-40x40@3x.png",
+      "scale" : "3x"
+    },
+    {
+      "size" : "60x60",
+      "idiom" : "iphone",
+      "filename" : "Icon-App-60x60@2x.png",
+      "scale" : "2x"
+    },
+    {
+      "size" : "60x60",
+      "idiom" : "iphone",
+      "filename" : "Icon-App-60x60@3x.png",
+      "scale" : "3x"
+    },
+    {
+      "size" : "20x20",
+      "idiom" : "ipad",
+      "filename" : "Icon-App-20x20@1x.png",
+      "scale" : "1x"
+    },
+    {
+      "size" : "20x20",
+      "idiom" : "ipad",
+      "filename" : "Icon-App-20x20@2x.png",
+      "scale" : "2x"
+    },
+    {
+      "size" : "29x29",
+      "idiom" : "ipad",
+      "filename" : "Icon-App-29x29@1x.png",
+      "scale" : "1x"
+    },
+    {
+      "size" : "29x29",
+      "idiom" : "ipad",
+      "filename" : "Icon-App-29x29@2x.png",
+      "scale" : "2x"
+    },
+    {
+      "size" : "40x40",
+      "idiom" : "ipad",
+      "filename" : "Icon-App-40x40@1x.png",
+      "scale" : "1x"
+    },
+    {
+      "size" : "40x40",
+      "idiom" : "ipad",
+      "filename" : "Icon-App-40x40@2x.png",
+      "scale" : "2x"
+    },
+    {
+      "size" : "76x76",
+      "idiom" : "ipad",
+      "filename" : "Icon-App-76x76@1x.png",
+      "scale" : "1x"
+    },
+    {
+      "size" : "76x76",
+      "idiom" : "ipad",
+      "filename" : "Icon-App-76x76@2x.png",
+      "scale" : "2x"
+    },
+    {
+      "size" : "83.5x83.5",
+      "idiom" : "ipad",
+      "filename" : "Icon-App-83.5x83.5@2x.png",
+      "scale" : "2x"
+    },
+    {
+      "size" : "1024x1024",
+      "idiom" : "ios-marketing",
+      "filename" : "Icon-App-1024x1024@1x.png",
+      "scale" : "1x"
+    }
+  ],
+  "info" : {
+    "version" : 1,
+    "author" : "xcode"
+  }
+}
diff --git a/petitpal/ios/Runner/Assets.xcassets/LaunchImage.imageset/Contents.json b/petitpal/ios/Runner/Assets.xcassets/LaunchImage.imageset/Contents.json
index 0bedcf2..d08a4de 100644
--- a/petitpal/ios/Runner/Assets.xcassets/LaunchImage.imageset/Contents.json
+++ b/petitpal/ios/Runner/Assets.xcassets/LaunchImage.imageset/Contents.json
@@ -1,23 +1,23 @@
-{
-  "images" : [
-    {
-      "idiom" : "universal",
-      "filename" : "LaunchImage.png",
-      "scale" : "1x"
-    },
-    {
-      "idiom" : "universal",
-      "filename" : "LaunchImage@2x.png",
-      "scale" : "2x"
-    },
-    {
-      "idiom" : "universal",
-      "filename" : "LaunchImage@3x.png",
-      "scale" : "3x"
-    }
-  ],
-  "info" : {
-    "version" : 1,
-    "author" : "xcode"
-  }
-}
+{
+  "images" : [
+    {
+      "idiom" : "universal",
+      "filename" : "LaunchImage.png",
+      "scale" : "1x"
+    },
+    {
+      "idiom" : "universal",
+      "filename" : "LaunchImage@2x.png",
+      "scale" : "2x"
+    },
+    {
+      "idiom" : "universal",
+      "filename" : "LaunchImage@3x.png",
+      "scale" : "3x"
+    }
+  ],
+  "info" : {
+    "version" : 1,
+    "author" : "xcode"
+  }
+}
diff --git a/petitpal/ios/Runner/Assets.xcassets/LaunchImage.imageset/README.md b/petitpal/ios/Runner/Assets.xcassets/LaunchImage.imageset/README.md
index 89c2725..65a94b5 100644
--- a/petitpal/ios/Runner/Assets.xcassets/LaunchImage.imageset/README.md
+++ b/petitpal/ios/Runner/Assets.xcassets/LaunchImage.imageset/README.md
@@ -1,5 +1,5 @@
-# Launch Screen Assets
-
-You can customize the launch screen with your own desired assets by replacing the image files in this directory.
-
+# Launch Screen Assets
+
+You can customize the launch screen with your own desired assets by replacing the image files in this directory.
+
 You can also do it by opening your Flutter project's Xcode project with `open ios/Runner.xcworkspace`, selecting `Runner/Assets.xcassets` in the Project Navigator and dropping in the desired images.
\ No newline at end of file
diff --git a/petitpal/ios/Runner/Base.lproj/LaunchScreen.storyboard b/petitpal/ios/Runner/Base.lproj/LaunchScreen.storyboard
index f2e259c..497371e 100644
--- a/petitpal/ios/Runner/Base.lproj/LaunchScreen.storyboard
+++ b/petitpal/ios/Runner/Base.lproj/LaunchScreen.storyboard
@@ -1,37 +1,37 @@
-<?xml version="1.0" encoding="UTF-8" standalone="no"?>
-<document type="com.apple.InterfaceBuilder3.CocoaTouch.Storyboard.XIB" version="3.0" toolsVersion="12121" systemVersion="16G29" targetRuntime="iOS.CocoaTouch" propertyAccessControl="none" useAutolayout="YES" launchScreen="YES" colorMatched="YES" initialViewController="01J-lp-oVM">
-    <dependencies>
-        <deployment identifier="iOS"/>
-        <plugIn identifier="com.apple.InterfaceBuilder.IBCocoaTouchPlugin" version="12089"/>
-    </dependencies>
-    <scenes>
-        <!--View Controller-->
-        <scene sceneID="EHf-IW-A2E">
-            <objects>
-                <viewController id="01J-lp-oVM" sceneMemberID="viewController">
-                    <layoutGuides>
-                        <viewControllerLayoutGuide type="top" id="Ydg-fD-yQy"/>
-                        <viewControllerLayoutGuide type="bottom" id="xbc-2k-c8Z"/>
-                    </layoutGuides>
-                    <view key="view" contentMode="scaleToFill" id="Ze5-6b-2t3">
-                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
-                        <subviews>
-                            <imageView opaque="NO" clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="center" image="LaunchImage" translatesAutoresizingMaskIntoConstraints="NO" id="YRO-k0-Ey4">
-                            </imageView>
-                        </subviews>
-                        <color key="backgroundColor" red="1" green="1" blue="1" alpha="1" colorSpace="custom" customColorSpace="sRGB"/>
-                        <constraints>
-                            <constraint firstItem="YRO-k0-Ey4" firstAttribute="centerX" secondItem="Ze5-6b-2t3" secondAttribute="centerX" id="1a2-6s-vTC"/>
-                            <constraint firstItem="YRO-k0-Ey4" firstAttribute="centerY" secondItem="Ze5-6b-2t3" secondAttribute="centerY" id="4X2-HB-R7a"/>
-                        </constraints>
-                    </view>
-                </viewController>
-                <placeholder placeholderIdentifier="IBFirstResponder" id="iYj-Kq-Ea1" userLabel="First Responder" sceneMemberID="firstResponder"/>
-            </objects>
-            <point key="canvasLocation" x="53" y="375"/>
-        </scene>
-    </scenes>
-    <resources>
-        <image name="LaunchImage" width="168" height="185"/>
-    </resources>
-</document>
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<document type="com.apple.InterfaceBuilder3.CocoaTouch.Storyboard.XIB" version="3.0" toolsVersion="12121" systemVersion="16G29" targetRuntime="iOS.CocoaTouch" propertyAccessControl="none" useAutolayout="YES" launchScreen="YES" colorMatched="YES" initialViewController="01J-lp-oVM">
+    <dependencies>
+        <deployment identifier="iOS"/>
+        <plugIn identifier="com.apple.InterfaceBuilder.IBCocoaTouchPlugin" version="12089"/>
+    </dependencies>
+    <scenes>
+        <!--View Controller-->
+        <scene sceneID="EHf-IW-A2E">
+            <objects>
+                <viewController id="01J-lp-oVM" sceneMemberID="viewController">
+                    <layoutGuides>
+                        <viewControllerLayoutGuide type="top" id="Ydg-fD-yQy"/>
+                        <viewControllerLayoutGuide type="bottom" id="xbc-2k-c8Z"/>
+                    </layoutGuides>
+                    <view key="view" contentMode="scaleToFill" id="Ze5-6b-2t3">
+                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
+                        <subviews>
+                            <imageView opaque="NO" clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="center" image="LaunchImage" translatesAutoresizingMaskIntoConstraints="NO" id="YRO-k0-Ey4">
+                            </imageView>
+                        </subviews>
+                        <color key="backgroundColor" red="1" green="1" blue="1" alpha="1" colorSpace="custom" customColorSpace="sRGB"/>
+                        <constraints>
+                            <constraint firstItem="YRO-k0-Ey4" firstAttribute="centerX" secondItem="Ze5-6b-2t3" secondAttribute="centerX" id="1a2-6s-vTC"/>
+                            <constraint firstItem="YRO-k0-Ey4" firstAttribute="centerY" secondItem="Ze5-6b-2t3" secondAttribute="centerY" id="4X2-HB-R7a"/>
+                        </constraints>
+                    </view>
+                </viewController>
+                <placeholder placeholderIdentifier="IBFirstResponder" id="iYj-Kq-Ea1" userLabel="First Responder" sceneMemberID="firstResponder"/>
+            </objects>
+            <point key="canvasLocation" x="53" y="375"/>
+        </scene>
+    </scenes>
+    <resources>
+        <image name="LaunchImage" width="168" height="185"/>
+    </resources>
+</document>
diff --git a/petitpal/ios/Runner/Base.lproj/Main.storyboard b/petitpal/ios/Runner/Base.lproj/Main.storyboard
index f3c2851..bbb83ca 100644
--- a/petitpal/ios/Runner/Base.lproj/Main.storyboard
+++ b/petitpal/ios/Runner/Base.lproj/Main.storyboard
@@ -1,26 +1,26 @@
-<?xml version="1.0" encoding="UTF-8" standalone="no"?>
-<document type="com.apple.InterfaceBuilder3.CocoaTouch.Storyboard.XIB" version="3.0" toolsVersion="10117" systemVersion="15F34" targetRuntime="iOS.CocoaTouch" propertyAccessControl="none" useAutolayout="YES" useTraitCollections="YES" initialViewController="BYZ-38-t0r">
-    <dependencies>
-        <deployment identifier="iOS"/>
-        <plugIn identifier="com.apple.InterfaceBuilder.IBCocoaTouchPlugin" version="10085"/>
-    </dependencies>
-    <scenes>
-        <!--Flutter View Controller-->
-        <scene sceneID="tne-QT-ifu">
-            <objects>
-                <viewController id="BYZ-38-t0r" customClass="FlutterViewController" sceneMemberID="viewController">
-                    <layoutGuides>
-                        <viewControllerLayoutGuide type="top" id="y3c-jy-aDJ"/>
-                        <viewControllerLayoutGuide type="bottom" id="wfy-db-euE"/>
-                    </layoutGuides>
-                    <view key="view" contentMode="scaleToFill" id="8bC-Xf-vdC">
-                        <rect key="frame" x="0.0" y="0.0" width="600" height="600"/>
-                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
-                        <color key="backgroundColor" white="1" alpha="1" colorSpace="custom" customColorSpace="calibratedWhite"/>
-                    </view>
-                </viewController>
-                <placeholder placeholderIdentifier="IBFirstResponder" id="dkx-z0-nzr" sceneMemberID="firstResponder"/>
-            </objects>
-        </scene>
-    </scenes>
-</document>
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<document type="com.apple.InterfaceBuilder3.CocoaTouch.Storyboard.XIB" version="3.0" toolsVersion="10117" systemVersion="15F34" targetRuntime="iOS.CocoaTouch" propertyAccessControl="none" useAutolayout="YES" useTraitCollections="YES" initialViewController="BYZ-38-t0r">
+    <dependencies>
+        <deployment identifier="iOS"/>
+        <plugIn identifier="com.apple.InterfaceBuilder.IBCocoaTouchPlugin" version="10085"/>
+    </dependencies>
+    <scenes>
+        <!--Flutter View Controller-->
+        <scene sceneID="tne-QT-ifu">
+            <objects>
+                <viewController id="BYZ-38-t0r" customClass="FlutterViewController" sceneMemberID="viewController">
+                    <layoutGuides>
+                        <viewControllerLayoutGuide type="top" id="y3c-jy-aDJ"/>
+                        <viewControllerLayoutGuide type="bottom" id="wfy-db-euE"/>
+                    </layoutGuides>
+                    <view key="view" contentMode="scaleToFill" id="8bC-Xf-vdC">
+                        <rect key="frame" x="0.0" y="0.0" width="600" height="600"/>
+                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
+                        <color key="backgroundColor" white="1" alpha="1" colorSpace="custom" customColorSpace="calibratedWhite"/>
+                    </view>
+                </viewController>
+                <placeholder placeholderIdentifier="IBFirstResponder" id="dkx-z0-nzr" sceneMemberID="firstResponder"/>
+            </objects>
+        </scene>
+    </scenes>
+</document>
diff --git a/petitpal/ios/Runner/Info.plist b/petitpal/ios/Runner/Info.plist
index eea6518..ae25e6b 100644
--- a/petitpal/ios/Runner/Info.plist
+++ b/petitpal/ios/Runner/Info.plist
@@ -1,49 +1,49 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
-<plist version="1.0">
-<dict>
-	<key>CFBundleDevelopmentRegion</key>
-	<string>$(DEVELOPMENT_LANGUAGE)</string>
-	<key>CFBundleDisplayName</key>
-	<string>Petitpal</string>
-	<key>CFBundleExecutable</key>
-	<string>$(EXECUTABLE_NAME)</string>
-	<key>CFBundleIdentifier</key>
-	<string>$(PRODUCT_BUNDLE_IDENTIFIER)</string>
-	<key>CFBundleInfoDictionaryVersion</key>
-	<string>6.0</string>
-	<key>CFBundleName</key>
-	<string>petitpal</string>
-	<key>CFBundlePackageType</key>
-	<string>APPL</string>
-	<key>CFBundleShortVersionString</key>
-	<string>$(FLUTTER_BUILD_NAME)</string>
-	<key>CFBundleSignature</key>
-	<string>????</string>
-	<key>CFBundleVersion</key>
-	<string>$(FLUTTER_BUILD_NUMBER)</string>
-	<key>LSRequiresIPhoneOS</key>
-	<true/>
-	<key>UILaunchStoryboardName</key>
-	<string>LaunchScreen</string>
-	<key>UIMainStoryboardFile</key>
-	<string>Main</string>
-	<key>UISupportedInterfaceOrientations</key>
-	<array>
-		<string>UIInterfaceOrientationPortrait</string>
-		<string>UIInterfaceOrientationLandscapeLeft</string>
-		<string>UIInterfaceOrientationLandscapeRight</string>
-	</array>
-	<key>UISupportedInterfaceOrientations~ipad</key>
-	<array>
-		<string>UIInterfaceOrientationPortrait</string>
-		<string>UIInterfaceOrientationPortraitUpsideDown</string>
-		<string>UIInterfaceOrientationLandscapeLeft</string>
-		<string>UIInterfaceOrientationLandscapeRight</string>
-	</array>
-	<key>CADisableMinimumFrameDurationOnPhone</key>
-	<true/>
-	<key>UIApplicationSupportsIndirectInputEvents</key>
-	<true/>
-</dict>
-</plist>
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
+<plist version="1.0">
+<dict>
+	<key>CFBundleDevelopmentRegion</key>
+	<string>$(DEVELOPMENT_LANGUAGE)</string>
+	<key>CFBundleDisplayName</key>
+	<string>Petitpal</string>
+	<key>CFBundleExecutable</key>
+	<string>$(EXECUTABLE_NAME)</string>
+	<key>CFBundleIdentifier</key>
+	<string>$(PRODUCT_BUNDLE_IDENTIFIER)</string>
+	<key>CFBundleInfoDictionaryVersion</key>
+	<string>6.0</string>
+	<key>CFBundleName</key>
+	<string>petitpal</string>
+	<key>CFBundlePackageType</key>
+	<string>APPL</string>
+	<key>CFBundleShortVersionString</key>
+	<string>$(FLUTTER_BUILD_NAME)</string>
+	<key>CFBundleSignature</key>
+	<string>????</string>
+	<key>CFBundleVersion</key>
+	<string>$(FLUTTER_BUILD_NUMBER)</string>
+	<key>LSRequiresIPhoneOS</key>
+	<true/>
+	<key>UILaunchStoryboardName</key>
+	<string>LaunchScreen</string>
+	<key>UIMainStoryboardFile</key>
+	<string>Main</string>
+	<key>UISupportedInterfaceOrientations</key>
+	<array>
+		<string>UIInterfaceOrientationPortrait</string>
+		<string>UIInterfaceOrientationLandscapeLeft</string>
+		<string>UIInterfaceOrientationLandscapeRight</string>
+	</array>
+	<key>UISupportedInterfaceOrientations~ipad</key>
+	<array>
+		<string>UIInterfaceOrientationPortrait</string>
+		<string>UIInterfaceOrientationPortraitUpsideDown</string>
+		<string>UIInterfaceOrientationLandscapeLeft</string>
+		<string>UIInterfaceOrientationLandscapeRight</string>
+	</array>
+	<key>CADisableMinimumFrameDurationOnPhone</key>
+	<true/>
+	<key>UIApplicationSupportsIndirectInputEvents</key>
+	<true/>
+</dict>
+</plist>
diff --git a/petitpal/ios/Runner/Runner-Bridging-Header.h b/petitpal/ios/Runner/Runner-Bridging-Header.h
index 308a2a5..fae207f 100644
--- a/petitpal/ios/Runner/Runner-Bridging-Header.h
+++ b/petitpal/ios/Runner/Runner-Bridging-Header.h
@@ -1 +1 @@
-#import "GeneratedPluginRegistrant.h"
+#import "GeneratedPluginRegistrant.h"
diff --git a/petitpal/ios/RunnerTests/RunnerTests.swift b/petitpal/ios/RunnerTests/RunnerTests.swift
index 86a7c3b..4d206de 100644
--- a/petitpal/ios/RunnerTests/RunnerTests.swift
+++ b/petitpal/ios/RunnerTests/RunnerTests.swift
@@ -1,12 +1,12 @@
-import Flutter
-import UIKit
-import XCTest
-
-class RunnerTests: XCTestCase {
-
-  func testExample() {
-    // If you add code to the Runner application, consider adding tests here.
-    // See https://developer.apple.com/documentation/xctest for more information about using XCTest.
-  }
-
-}
+import Flutter
+import UIKit
+import XCTest
+
+class RunnerTests: XCTestCase {
+
+  func testExample() {
+    // If you add code to the Runner application, consider adding tests here.
+    // See https://developer.apple.com/documentation/xctest for more information about using XCTest.
+  }
+
+}
diff --git a/petitpal/lib/app_router.dart b/petitpal/lib/app_router.dart
new file mode 100644
index 0000000..d9b6e38
--- /dev/null
+++ b/petitpal/lib/app_router.dart
@@ -0,0 +1 @@
+'"$@"'
diff --git a/petitpal/lib/config/analytics_events.dart b/petitpal/lib/config/analytics_events.dart
index 845d3eb..40f2081 100644
--- a/petitpal/lib/config/analytics_events.dart
+++ b/petitpal/lib/config/analytics_events.dart
@@ -1,21 +1,21 @@
-enum AnalyticsEvent {
-  app_open,
-  app_first_open,
-  onboarding_start,
-  onboarding_theme_selected,
-  onboarding_provider_saved,
-  onboarding_invite_joined,
-  onboarding_complete,
-  voice_activation_started,
-  question_asked,
-  tts_spoken,
-  interaction_completed,
-  speech_recognition_error,
-  provider_request_failed,
-  family_member_invited,
-  family_invite_joined,
-}
-
-extension AnalyticsEventName on AnalyticsEvent {
-  String get name => toString().split('.').last;
-}
+enum AnalyticsEvent {
+  app_open,
+  app_first_open,
+  onboarding_start,
+  onboarding_theme_selected,
+  onboarding_provider_saved,
+  onboarding_invite_joined,
+  onboarding_complete,
+  voice_activation_started,
+  question_asked,
+  tts_spoken,
+  interaction_completed,
+  speech_recognition_error,
+  provider_request_failed,
+  family_member_invited,
+  family_invite_joined,
+}
+
+extension AnalyticsEventName on AnalyticsEvent {
+  String get name => toString().split('.').last;
+}
diff --git a/petitpal/lib/config/api_config.dart b/petitpal/lib/config/api_config.dart
index be571d0..d9b6e38 100644
--- a/petitpal/lib/config/api_config.dart
+++ b/petitpal/lib/config/api_config.dart
@@ -1,21 +1 @@
-enum ApiEnvironment { dev, staging, prod }
-
-class ApiConfig {
-  static late ApiEnvironment _env;
-  static void setEnvironment(ApiEnvironment env) => _env = env;
-
-  static String get baseUrl {
-    switch (_env) {
-      case ApiEnvironment.dev:
-        return 'https://petitpal-api.kristyc.workers.dev';
-      case ApiEnvironment.staging:
-        return 'https://petitpal-api.kristyc.workers.dev?env=staging';
-      case ApiEnvironment.prod:
-        return 'https://petitpal-api.kristyc.workers.dev';
-    }
-  }
-
-  static const int timeoutSeconds = 20;
-  static const int workerTimeoutSeconds = 30;
-  static const int appRetries = 3;
-}
+'"$@"'
diff --git a/petitpal/lib/config/app_config.dart b/petitpal/lib/config/app_config.dart
index 38ff92b..2f07eb3 100644
--- a/petitpal/lib/config/app_config.dart
+++ b/petitpal/lib/config/app_config.dart
@@ -1,4 +1,4 @@
-class AppConfig {
-  static const appName = 'PetitPal';
-  static const appVersion = '1.0.1';
-}
+class AppConfig {
+  static const appName = 'PetitPal';
+  static const appVersion = '1.0.1';
+}
diff --git a/petitpal/lib/config/launch_config.dart b/petitpal/lib/config/launch_config.dart
index 2cd6e87..d9b6e38 100644
--- a/petitpal/lib/config/launch_config.dart
+++ b/petitpal/lib/config/launch_config.dart
@@ -1,26 +1 @@
-class LaunchConfig {
-  // CRITICAL: Set to true before production launch
-  static const bool isProductionReady = false;
-  
-  // Analytics (disabled in development)
-  static bool get analyticsEnabled => isProductionReady;
-  static bool get crashlyticsEnabled => isProductionReady;
-  static bool get sentryEnabled => isProductionReady;
-  
-  // API Configuration
-  static String get workerBaseUrl => isProductionReady 
-      ? 'https://petitpal-api.kristyc.workers.dev'
-      : 'https://dev-petitpal-api.kristyc.workers.dev';
-  
-  // Feature Flags
-  static const bool enableHotwordDetection = true;
-  static const bool enableFamilySharing = true;
-  static const bool enableMultipleLLMs = true;
-  static const bool enableVoiceOnboarding = true;
-  static const bool enablePremiumAnimations = true;
-  
-  // Debug Features (only in development)
-  static bool get showDebugBanner => !isProductionReady;
-  static bool get enableDebugMenu => !isProductionReady;
-  static bool get verboseLogging => !isProductionReady;
-}
\ No newline at end of file
+'"$@"'
diff --git a/petitpal/lib/config/strings_config.dart b/petitpal/lib/config/strings_config.dart
index 4dcb792..d9b6e38 100644
--- a/petitpal/lib/config/strings_config.dart
+++ b/petitpal/lib/config/strings_config.dart
@@ -1,61 +1 @@
-// lib/config/strings_config.dart
-class StringsConfig {
-  // App
-  static const String appTitle = 'PetitPal';
-  static const String appDescription = 'Your voice-first assistant';
-  
-  // Voice Interface
-  static const String tapToTalk = 'Tap to talk';
-  static const String listening = 'I\'m listening...';
-  static const String processing = 'Processing your request...';
-  static const String speaking = 'Speaking...';
-  static const String voiceError = 'Voice error';
-  static const String voiceErrorOccurred = 'A voice error occurred';
-  static const String unknownError = 'An unknown error occurred';
-  
-  // Permissions
-  static const String permissionDialogTitle = 'Microphone Permission Required';
-  static const String permissionDialogMessage = 
-      'PetitPal needs microphone access to hear your voice commands. Please grant permission in settings.';
-  static const String microphonePermissionError = 
-      'Microphone permission is required for voice features';
-  static const String openSettings = 'Open Settings';
-  static const String cancel = 'Cancel';
-  static const String tryAgain = 'Try Again';
-  
-  // Onboarding
-  static const String welcomeTitle = 'Welcome to PetitPal';
-  static const String welcomeSubtitle = 'Your voice-first assistant is ready to help';
-  static const String getStarted = 'Get Started';
-  static const String skipOnboarding = 'Skip';
-  
-  // Themes
-  static const String themeSelection = 'Choose Your Theme';
-  static const String lightTheme = 'Light Theme';
-  static const String darkTheme = 'Dark Theme';
-  static const String highContrastTheme = 'High Contrast';
-  static const String systemTheme = 'System Adaptive';
-  
-  // Family Sharing
-  static const String inviteFamily = 'Invite Family';
-  static const String joinFamily = 'Join Family';
-  static const String familyConnected = 'Family Connected';
-  
-  // LLM Providers
-  static const String selectProvider = 'Select AI Provider';
-  static const String enterApiKey = 'Enter API Key';
-  static const String testConnection = 'Test Connection';
-  static const String connectionSuccessful = 'Connection Successful';
-  static const String connectionFailed = 'Connection Failed';
-  
-  // Common
-  static const String next = 'Next';
-  static const String previous = 'Previous';
-  static const String done = 'Done';
-  static const String save = 'Save';
-  static const String edit = 'Edit';
-  static const String delete = 'Delete';
-  static const String settings = 'Settings';
-  static const String help = 'Help';
-  static const String about = 'About';
-}
\ No newline at end of file
+'"$@"'
diff --git a/petitpal/lib/config/theme_config.dart b/petitpal/lib/config/theme_config.dart
index 8aaf136..c894881 100644
--- a/petitpal/lib/config/theme_config.dart
+++ b/petitpal/lib/config/theme_config.dart
@@ -1,143 +1,143 @@
-// lib/config/theme_config.dart
-import 'package:flutter/material.dart';
-
-class AppThemeConfig {
-  // Spacing
-  static const double spacingSmall = 8.0;
-  static const double spacingMedium = 16.0;
-  static const double spacingLarge = 24.0;
-  static const double spacingXLarge = 32.0;
-  static const double spacingXXLarge = 48.0;
-  
-  // Padding
-  static const double paddingSmall = 8.0;
-  static const double paddingMedium = 16.0;
-  static const double paddingLarge = 24.0;
-  static const double paddingXLarge = 32.0;
-  
-  // Border Radius
-  static const double borderRadius = 12.0;
-  static const double borderRadiusLarge = 16.0;
-  static const double borderRadiusButton = 24.0;
-  
-  // Animation
-  static const Duration animationDuration = Duration(milliseconds: 300);
-  static const Duration animationDurationFast = Duration(milliseconds: 150);
-  static const Duration animationDurationSlow = Duration(milliseconds: 500);
-  
-  // Touch Targets (Accessibility)
-  static const double minTouchTarget = 48.0;
-  static const double largeTouchTarget = 80.0; // For seniors
-  
-  // Text Sizes
-  static const double textSizeSmall = 12.0;
-  static const double textSizeMedium = 16.0;
-  static const double textSizeLarge = 20.0;
-  static const double textSizeXLarge = 24.0;
-  static const double textSizeXXLarge = 32.0;
-  
-  // Colors - Light Theme
-  static const Color lightPrimary = Color(0xFF6366F1);
-  static const Color lightSecondary = Color(0xFF10B981);
-  static const Color lightBackground = Color(0xFFF8F9FA);
-  static const Color lightSurface = Color(0xFFFFFFFF);
-  static const Color lightError = Color(0xFFEF4444);
-  
-  // Colors - Dark Theme
-  static const Color darkPrimary = Color(0xFF818CF8);
-  static const Color darkSecondary = Color(0xFF34D399);
-  static const Color darkBackground = Color(0xFF1F2937);
-  static const Color darkSurface = Color(0xFF374151);
-  static const Color darkError = Color(0xFFF87171);
-  
-  // Colors - High Contrast
-  static const Color highContrastBackground = Color(0xFF000000);
-  static const Color highContrastSurface = Color(0xFF000000);
-  static const Color highContrastText = Color(0xFFFFFFFF);
-  static const Color highContrastPrimary = Color(0xFFFFFFFF);
-  
-  // Create Theme Data
-  static ThemeData lightTheme = ThemeData(
-    useMaterial3: true,
-    colorScheme: const ColorScheme.light(
-      primary: lightPrimary,
-      secondary: lightSecondary,
-      background: lightBackground,
-      surface: lightSurface,
-      error: lightError,
-    ),
-    textTheme: _getTextTheme(false),
-    elevatedButtonTheme: _getElevatedButtonTheme(false),
-  );
-  
-  static ThemeData darkTheme = ThemeData(
-    useMaterial3: true,
-    colorScheme: const ColorScheme.dark(
-      primary: darkPrimary,
-      secondary: darkSecondary,
-      background: darkBackground,
-      surface: darkSurface,
-      error: darkError,
-    ),
-    textTheme: _getTextTheme(true),
-    elevatedButtonTheme: _getElevatedButtonTheme(true),
-  );
-  
-  static ThemeData highContrastTheme = ThemeData(
-    useMaterial3: true,
-    colorScheme: const ColorScheme.dark(
-      primary: highContrastPrimary,
-      secondary: highContrastPrimary,
-      background: highContrastBackground,
-      surface: highContrastSurface,
-      onBackground: highContrastText,
-      onSurface: highContrastText,
-      error: highContrastText,
-    ),
-    textTheme: _getTextTheme(true, isHighContrast: true),
-    elevatedButtonTheme: _getElevatedButtonTheme(true, isHighContrast: true),
-  );
-  
-  static TextTheme _getTextTheme(bool isDark, {bool isHighContrast = false}) {
-    final baseSize = isHighContrast ? 2.0 : 0.0;
-    final color = isDark ? Colors.white : Colors.black;
-    
-    return TextTheme(
-      headlineLarge: TextStyle(
-        fontSize: textSizeXXLarge + baseSize,
-        fontWeight: FontWeight.bold,
-        color: color,
-      ),
-      headlineMedium: TextStyle(
-        fontSize: textSizeXLarge + baseSize,
-        fontWeight: FontWeight.w600,
-        color: color,
-      ),
-      bodyLarge: TextStyle(
-        fontSize: textSizeLarge + baseSize,
-        fontWeight: FontWeight.normal,
-        color: color,
-      ),
-      bodyMedium: TextStyle(
-        fontSize: textSizeMedium + baseSize,
-        fontWeight: FontWeight.normal,
-        color: color,
-      ),
-    );
-  }
-  
-  static ElevatedButtonThemeData _getElevatedButtonTheme(bool isDark, {bool isHighContrast = false}) {
-    return ElevatedButtonThemeData(
-      style: ElevatedButton.styleFrom(
-        minimumSize: Size.fromHeight(isHighContrast ? largeTouchTarget : minTouchTarget),
-        shape: RoundedRectangleBorder(
-          borderRadius: BorderRadius.circular(borderRadiusButton),
-        ),
-        textStyle: TextStyle(
-          fontSize: isHighContrast ? textSizeLarge : textSizeMedium,
-          fontWeight: FontWeight.w600,
-        ),
-      ),
-    );
-  }
+// lib/config/theme_config.dart
+import 'package:flutter/material.dart';
+
+class AppThemeConfig {
+  // Spacing
+  static const double spacingSmall = 8.0;
+  static const double spacingMedium = 16.0;
+  static const double spacingLarge = 24.0;
+  static const double spacingXLarge = 32.0;
+  static const double spacingXXLarge = 48.0;
+  
+  // Padding
+  static const double paddingSmall = 8.0;
+  static const double paddingMedium = 16.0;
+  static const double paddingLarge = 24.0;
+  static const double paddingXLarge = 32.0;
+  
+  // Border Radius
+  static const double borderRadius = 12.0;
+  static const double borderRadiusLarge = 16.0;
+  static const double borderRadiusButton = 24.0;
+  
+  // Animation
+  static const Duration animationDuration = Duration(milliseconds: 300);
+  static const Duration animationDurationFast = Duration(milliseconds: 150);
+  static const Duration animationDurationSlow = Duration(milliseconds: 500);
+  
+  // Touch Targets (Accessibility)
+  static const double minTouchTarget = 48.0;
+  static const double largeTouchTarget = 80.0; // For seniors
+  
+  // Text Sizes
+  static const double textSizeSmall = 12.0;
+  static const double textSizeMedium = 16.0;
+  static const double textSizeLarge = 20.0;
+  static const double textSizeXLarge = 24.0;
+  static const double textSizeXXLarge = 32.0;
+  
+  // Colors - Light Theme
+  static const Color lightPrimary = Color(0xFF6366F1);
+  static const Color lightSecondary = Color(0xFF10B981);
+  static const Color lightBackground = Color(0xFFF8F9FA);
+  static const Color lightSurface = Color(0xFFFFFFFF);
+  static const Color lightError = Color(0xFFEF4444);
+  
+  // Colors - Dark Theme
+  static const Color darkPrimary = Color(0xFF818CF8);
+  static const Color darkSecondary = Color(0xFF34D399);
+  static const Color darkBackground = Color(0xFF1F2937);
+  static const Color darkSurface = Color(0xFF374151);
+  static const Color darkError = Color(0xFFF87171);
+  
+  // Colors - High Contrast
+  static const Color highContrastBackground = Color(0xFF000000);
+  static const Color highContrastSurface = Color(0xFF000000);
+  static const Color highContrastText = Color(0xFFFFFFFF);
+  static const Color highContrastPrimary = Color(0xFFFFFFFF);
+  
+  // Create Theme Data
+  static ThemeData lightTheme = ThemeData(
+    useMaterial3: true,
+    colorScheme: const ColorScheme.light(
+      primary: lightPrimary,
+      secondary: lightSecondary,
+      background: lightBackground,
+      surface: lightSurface,
+      error: lightError,
+    ),
+    textTheme: _getTextTheme(false),
+    elevatedButtonTheme: _getElevatedButtonTheme(false),
+  );
+  
+  static ThemeData darkTheme = ThemeData(
+    useMaterial3: true,
+    colorScheme: const ColorScheme.dark(
+      primary: darkPrimary,
+      secondary: darkSecondary,
+      background: darkBackground,
+      surface: darkSurface,
+      error: darkError,
+    ),
+    textTheme: _getTextTheme(true),
+    elevatedButtonTheme: _getElevatedButtonTheme(true),
+  );
+  
+  static ThemeData highContrastTheme = ThemeData(
+    useMaterial3: true,
+    colorScheme: const ColorScheme.dark(
+      primary: highContrastPrimary,
+      secondary: highContrastPrimary,
+      background: highContrastBackground,
+      surface: highContrastSurface,
+      onBackground: highContrastText,
+      onSurface: highContrastText,
+      error: highContrastText,
+    ),
+    textTheme: _getTextTheme(true, isHighContrast: true),
+    elevatedButtonTheme: _getElevatedButtonTheme(true, isHighContrast: true),
+  );
+  
+  static TextTheme _getTextTheme(bool isDark, {bool isHighContrast = false}) {
+    final baseSize = isHighContrast ? 2.0 : 0.0;
+    final color = isDark ? Colors.white : Colors.black;
+    
+    return TextTheme(
+      headlineLarge: TextStyle(
+        fontSize: textSizeXXLarge + baseSize,
+        fontWeight: FontWeight.bold,
+        color: color,
+      ),
+      headlineMedium: TextStyle(
+        fontSize: textSizeXLarge + baseSize,
+        fontWeight: FontWeight.w600,
+        color: color,
+      ),
+      bodyLarge: TextStyle(
+        fontSize: textSizeLarge + baseSize,
+        fontWeight: FontWeight.normal,
+        color: color,
+      ),
+      bodyMedium: TextStyle(
+        fontSize: textSizeMedium + baseSize,
+        fontWeight: FontWeight.normal,
+        color: color,
+      ),
+    );
+  }
+  
+  static ElevatedButtonThemeData _getElevatedButtonTheme(bool isDark, {bool isHighContrast = false}) {
+    return ElevatedButtonThemeData(
+      style: ElevatedButton.styleFrom(
+        minimumSize: Size.fromHeight(isHighContrast ? largeTouchTarget : minTouchTarget),
+        shape: RoundedRectangleBorder(
+          borderRadius: BorderRadius.circular(borderRadiusButton),
+        ),
+        textStyle: TextStyle(
+          fontSize: isHighContrast ? textSizeLarge : textSizeMedium,
+          fontWeight: FontWeight.w600,
+        ),
+      ),
+    );
+  }
 }
\ No newline at end of file
diff --git a/petitpal/lib/core/services/.gitkeep b/petitpal/lib/core/services/.gitkeep
index 8d1c8b6..56f3b36 100644
--- a/petitpal/lib/core/services/.gitkeep
+++ b/petitpal/lib/core/services/.gitkeep
@@ -1 +1 @@
- 
+ 
diff --git a/petitpal/lib/core/services/analytics_service.dart b/petitpal/lib/core/services/analytics_service.dart
index 294957b..d6fcd33 100644
--- a/petitpal/lib/core/services/analytics_service.dart
+++ b/petitpal/lib/core/services/analytics_service.dart
@@ -1,342 +1,342 @@
-import 'package:flutter/foundation.dart';
-import 'package:firebase_analytics/firebase_analytics.dart';
-import 'package:firebase_crashlytics/firebase_crashlytics.dart';
-import 'package:firebase_core/firebase_core.dart';
-import '../../config/internal_config.dart';
-
-class AnalyticsService {
-  static final AnalyticsService _instance = AnalyticsService._internal();
-  factory AnalyticsService() => _instance;
-  AnalyticsService._internal();
-
-  FirebaseAnalytics? _analytics;
-  FirebaseCrashlytics? _crashlytics;
-  bool _isInitialized = false;
-  bool _firebaseAvailable = false;
-
-  // Initialize analytics services
-  Future<void> initialize() async {
-    if (_isInitialized) return;
-
-    try {
-      // Check if Firebase is available and configured
-      _firebaseAvailable = Firebase.apps.isNotEmpty;
-      
-      if (_firebaseAvailable && InternalConfig.analyticsEnabled) {
-        _analytics = FirebaseAnalytics.instance;
-        await _analytics?.setAnalyticsCollectionEnabled(true);
-        
-        if (kDebugMode) {
-          print('✅ Firebase Analytics initialized');
-        }
-      }
-
-      if (_firebaseAvailable && InternalConfig.crashlyticsEnabled) {
-        _crashlytics = FirebaseCrashlytics.instance;
-        await _crashlytics?.setCrashlyticsCollectionEnabled(true);
-        
-        // Set up automatic crash collection
-        FlutterError.onError = _crashlytics!.recordFlutterFatalError;
-        PlatformDispatcher.instance.onError = (error, stack) {
-          _crashlytics!.recordError(error, stack, fatal: true);
-          return true;
-        };
-
-        if (kDebugMode) {
-          print('✅ Firebase Crashlytics initialized');
-        }
-      }
-
-      if (!_firebaseAvailable) {
-        if (kDebugMode) {
-          print('ℹ️ Firebase not available - analytics will use debug logging only');
-          print('   Add google-services.json and set LAUNCH_MODE=true to enable Firebase');
-        }
-      }
-
-      _isInitialized = true;
-    } catch (e) {
-      if (kDebugMode) {
-        print('❌ Analytics initialization failed: $e');
-      }
-    }
-  }
-
-  // Track events
-  Future<void> trackEvent(String eventName, {Map<String, dynamic>? parameters}) async {
-    if (!InternalConfig.analyticsEnabled) return;
-    
-    if (_firebaseAvailable && _analytics != null) {
-      try {
-        await _analytics!.logEvent(
-          name: eventName,
-          parameters: parameters?.map((key, value) => MapEntry(key, value.toString())),
-        );
-        
-        if (kDebugMode) {
-          print('📊 Analytics event: $eventName ${parameters != null ? 'with params: $parameters' : ''}');
-        }
-      } catch (e) {
-        if (kDebugMode) {
-          print('❌ Failed to track event $eventName: $e');
-        }
-      }
-    } else {
-      // Fallback to debug logging when Firebase not available
-      if (kDebugMode) {
-        print('📊 DEBUG EVENT: $eventName ${parameters != null ? 'with params: $parameters' : ''}');
-      }
-    }
-  }
-
-  // Set user properties
-  Future<void> setUserProperty(String name, String? value) async {
-    if (!InternalConfig.analyticsEnabled) return;
-
-    if (_firebaseAvailable && _analytics != null) {
-      try {
-        await _analytics!.setUserProperty(name: name, value: value);
-        
-        if (kDebugMode) {
-          print('👤 User property set: $name = $value');
-        }
-      } catch (e) {
-        if (kDebugMode) {
-          print('❌ Failed to set user property $name: $e');
-        }
-      }
-    } else {
-      if (kDebugMode) {
-        print('👤 DEBUG USER PROPERTY: $name = $value');
-      }
-    }
-  }
-
-  // Set user ID (anonymous device ID)
-  Future<void> setUserId(String? userId) async {
-    if (!InternalConfig.analyticsEnabled) return;
-
-    if (_firebaseAvailable && _analytics != null) {
-      try {
-        await _analytics!.setUserId(id: userId);
-        
-        if (kDebugMode) {
-          print('🆔 User ID set: $userId');
-        }
-      } catch (e) {
-        if (kDebugMode) {
-          print('❌ Failed to set user ID: $e');
-        }
-      }
-    } else {
-      if (kDebugMode) {
-        print('🆔 DEBUG USER ID: $userId');
-      }
-    }
-  }
-
-  // Log non-fatal errors
-  Future<void> logError(dynamic error, StackTrace? stackTrace, {String? reason}) async {
-    if (!InternalConfig.crashlyticsEnabled) return;
-
-    if (_firebaseAvailable && _crashlytics != null) {
-      try {
-        await _crashlytics!.recordError(
-          error,
-          stackTrace,
-          reason: reason,
-          fatal: false,
-        );
-        
-        if (kDebugMode) {
-          print('🔥 Error logged to Crashlytics: $error');
-        }
-      } catch (e) {
-        if (kDebugMode) {
-          print('❌ Failed to log error to Crashlytics: $e');
-        }
-      }
-    } else {
-      // Fallback to debug logging when Firebase not available
-      if (kDebugMode) {
-        print('🔥 DEBUG ERROR: $error');
-        if (stackTrace != null) {
-          print('Stack trace: $stackTrace');
-        }
-      }
-    }
-  }
-
-  // Log custom messages
-  Future<void> log(String message) async {
-    if (!InternalConfig.crashlyticsEnabled) return;
-
-    if (_firebaseAvailable && _crashlytics != null) {
-      try {
-        await _crashlytics!.log(message);
-        
-        if (kDebugMode) {
-          print('📝 Crashlytics log: $message');
-        }
-      } catch (e) {
-        if (kDebugMode) {
-          print('❌ Failed to log message: $e');
-        }
-      }
-    } else {
-      if (kDebugMode) {
-        print('📝 DEBUG LOG: $message');
-      }
-    }
-  }
-
-  // Set custom keys for crash reports
-  Future<void> setCustomKey(String key, dynamic value) async {
-    if (!InternalConfig.crashlyticsEnabled) return;
-
-    if (_firebaseAvailable && _crashlytics != null) {
-      try {
-        if (value is String) {
-          await _crashlytics!.setCustomKey(key, value);
-        } else if (value is int) {
-          await _crashlytics!.setCustomKey(key, value);
-        } else if (value is bool) {
-          await _crashlytics!.setCustomKey(key, value);
-        } else if (value is double) {
-          await _crashlytics!.setCustomKey(key, value);
-        } else {
-          await _crashlytics!.setCustomKey(key, value.toString());
-        }
-        
-        if (kDebugMode) {
-          print('🔑 Custom key set: $key = $value');
-        }
-      } catch (e) {
-        if (kDebugMode) {
-          print('❌ Failed to set custom key $key: $e');
-        }
-      }
-    } else {
-      if (kDebugMode) {
-        print('🔑 DEBUG CUSTOM KEY: $key = $value');
-      }
-    }
-  }
-
-  // Common app events
-  Future<void> trackAppOpen() async {
-    await trackEvent('app_open');
-  }
-
-  Future<void> trackOnboardingStart() async {
-    await trackEvent('onboarding_start');
-  }
-
-  Future<void> trackOnboardingComplete() async {
-    await trackEvent('onboarding_complete');
-  }
-
-  Future<void> trackThemeSelected(String themeId) async {
-    await trackEvent('theme_selected', parameters: {'theme_id': themeId});
-  }
-
-  Future<void> trackQuestionAsked(String model, int questionLength) async {
-    await trackEvent('question_asked', parameters: {
-      'model': model,
-      'question_length': questionLength,
-    });
-  }
-
-  Future<void> trackTtsSpoken(String model, int responseLength) async {
-    await trackEvent('tts_spoken', parameters: {
-      'model': model,
-      'response_length': responseLength,
-    });
-  }
-
-  Future<void> trackModelAutoSwitch(String fromModel, String toModel, String trigger) async {
-    await trackEvent('model_auto_switch', parameters: {
-      'from_model': fromModel,
-      'to_model': toModel,
-      'trigger': trigger,
-    });
-  }
-
-  Future<void> trackFamilyInviteCreated() async {
-    await trackEvent('family_invite_created');
-  }
-
-  Future<void> trackFamilyInviteJoined(String method) async {
-    await trackEvent('family_invite_joined', parameters: {'method': method});
-  }
-
-  Future<void> trackProviderRequestFailed(String provider, String error) async {
-    await trackEvent('provider_request_failed', parameters: {
-      'provider': provider,
-      'error_type': error,
-    });
-  }
-
-  Future<void> trackSpeechRecognitionError(String error) async {
-    await trackEvent('speech_recognition_error', parameters: {
-      'error_type': error,
-    });
-  }
-
-  Future<void> trackVoiceInteractionStart() async {
-    await trackEvent('voice_interaction_start');
-  }
-
-  Future<void> trackVoiceInteractionComplete(bool successful) async {
-    await trackEvent('voice_interaction_complete', parameters: {
-      'successful': successful,
-    });
-  }
-
-  Future<void> trackProviderKeyAdded(String provider) async {
-    await trackEvent('provider_key_added', parameters: {
-      'provider': provider,
-    });
-  }
-
-  Future<void> trackDeepLinkOpened(String linkType) async {
-    await trackEvent('deep_link_opened', parameters: {
-      'link_type': linkType,
-    });
-  }
-
-  // Debug helper - only works in debug mode
-  void debugEvent(String eventName, {Map<String, dynamic>? parameters}) {
-    if (kDebugMode) {
-      print('🐛 DEBUG EVENT: $eventName ${parameters != null ? 'with params: $parameters' : ''}');
-    }
-  }
-}
-
-// Convenience methods for common analytics operations
-class Analytics {
-  static final _service = AnalyticsService();
-
-  static Future<void> initialize() => _service.initialize();
-  static Future<void> track(String event, {Map<String, dynamic>? params}) => 
-      _service.trackEvent(event, parameters: params);
-  static Future<void> error(dynamic error, StackTrace? stack, {String? reason}) => 
-      _service.logError(error, stack, reason: reason);
-  static Future<void> setUserId(String? id) => _service.setUserId(id);
-  static Future<void> setUserProperty(String name, String? value) => 
-      _service.setUserProperty(name, value);
-
-  // Quick access to common events
-  static Future<void> appOpen() => _service.trackAppOpen();
-  static Future<void> onboardingStart() => _service.trackOnboardingStart();
-  static Future<void> onboardingComplete() => _service.trackOnboardingComplete();
-  static Future<void> themeSelected(String theme) => _service.trackThemeSelected(theme);
-  static Future<void> questionAsked(String model, int length) => 
-      _service.trackQuestionAsked(model, length);
-  static Future<void> modelAutoSwitch(String from, String to, String trigger) => 
-      _service.trackModelAutoSwitch(from, to, trigger);
-  static Future<void> familyInviteCreated() => _service.trackFamilyInviteCreated();
-  static Future<void> familyInviteJoined(String method) => 
-      _service.trackFamilyInviteJoined(method);
-  static Future<void> deepLinkOpened(String type) => _service.trackDeepLinkOpened(type);
+import 'package:flutter/foundation.dart';
+import 'package:firebase_analytics/firebase_analytics.dart';
+import 'package:firebase_crashlytics/firebase_crashlytics.dart';
+import 'package:firebase_core/firebase_core.dart';
+import '../../config/internal_config.dart';
+
+class AnalyticsService {
+  static final AnalyticsService _instance = AnalyticsService._internal();
+  factory AnalyticsService() => _instance;
+  AnalyticsService._internal();
+
+  FirebaseAnalytics? _analytics;
+  FirebaseCrashlytics? _crashlytics;
+  bool _isInitialized = false;
+  bool _firebaseAvailable = false;
+
+  // Initialize analytics services
+  Future<void> initialize() async {
+    if (_isInitialized) return;
+
+    try {
+      // Check if Firebase is available and configured
+      _firebaseAvailable = Firebase.apps.isNotEmpty;
+      
+      if (_firebaseAvailable && InternalConfig.analyticsEnabled) {
+        _analytics = FirebaseAnalytics.instance;
+        await _analytics?.setAnalyticsCollectionEnabled(true);
+        
+        if (kDebugMode) {
+          print('✅ Firebase Analytics initialized');
+        }
+      }
+
+      if (_firebaseAvailable && InternalConfig.crashlyticsEnabled) {
+        _crashlytics = FirebaseCrashlytics.instance;
+        await _crashlytics?.setCrashlyticsCollectionEnabled(true);
+        
+        // Set up automatic crash collection
+        FlutterError.onError = _crashlytics!.recordFlutterFatalError;
+        PlatformDispatcher.instance.onError = (error, stack) {
+          _crashlytics!.recordError(error, stack, fatal: true);
+          return true;
+        };
+
+        if (kDebugMode) {
+          print('✅ Firebase Crashlytics initialized');
+        }
+      }
+
+      if (!_firebaseAvailable) {
+        if (kDebugMode) {
+          print('ℹ️ Firebase not available - analytics will use debug logging only');
+          print('   Add google-services.json and set LAUNCH_MODE=true to enable Firebase');
+        }
+      }
+
+      _isInitialized = true;
+    } catch (e) {
+      if (kDebugMode) {
+        print('❌ Analytics initialization failed: $e');
+      }
+    }
+  }
+
+  // Track events
+  Future<void> trackEvent(String eventName, {Map<String, dynamic>? parameters}) async {
+    if (!InternalConfig.analyticsEnabled) return;
+    
+    if (_firebaseAvailable && _analytics != null) {
+      try {
+        await _analytics!.logEvent(
+          name: eventName,
+          parameters: parameters?.map((key, value) => MapEntry(key, value.toString())),
+        );
+        
+        if (kDebugMode) {
+          print('📊 Analytics event: $eventName ${parameters != null ? 'with params: $parameters' : ''}');
+        }
+      } catch (e) {
+        if (kDebugMode) {
+          print('❌ Failed to track event $eventName: $e');
+        }
+      }
+    } else {
+      // Fallback to debug logging when Firebase not available
+      if (kDebugMode) {
+        print('📊 DEBUG EVENT: $eventName ${parameters != null ? 'with params: $parameters' : ''}');
+      }
+    }
+  }
+
+  // Set user properties
+  Future<void> setUserProperty(String name, String? value) async {
+    if (!InternalConfig.analyticsEnabled) return;
+
+    if (_firebaseAvailable && _analytics != null) {
+      try {
+        await _analytics!.setUserProperty(name: name, value: value);
+        
+        if (kDebugMode) {
+          print('👤 User property set: $name = $value');
+        }
+      } catch (e) {
+        if (kDebugMode) {
+          print('❌ Failed to set user property $name: $e');
+        }
+      }
+    } else {
+      if (kDebugMode) {
+        print('👤 DEBUG USER PROPERTY: $name = $value');
+      }
+    }
+  }
+
+  // Set user ID (anonymous device ID)
+  Future<void> setUserId(String? userId) async {
+    if (!InternalConfig.analyticsEnabled) return;
+
+    if (_firebaseAvailable && _analytics != null) {
+      try {
+        await _analytics!.setUserId(id: userId);
+        
+        if (kDebugMode) {
+          print('🆔 User ID set: $userId');
+        }
+      } catch (e) {
+        if (kDebugMode) {
+          print('❌ Failed to set user ID: $e');
+        }
+      }
+    } else {
+      if (kDebugMode) {
+        print('🆔 DEBUG USER ID: $userId');
+      }
+    }
+  }
+
+  // Log non-fatal errors
+  Future<void> logError(dynamic error, StackTrace? stackTrace, {String? reason}) async {
+    if (!InternalConfig.crashlyticsEnabled) return;
+
+    if (_firebaseAvailable && _crashlytics != null) {
+      try {
+        await _crashlytics!.recordError(
+          error,
+          stackTrace,
+          reason: reason,
+          fatal: false,
+        );
+        
+        if (kDebugMode) {
+          print('🔥 Error logged to Crashlytics: $error');
+        }
+      } catch (e) {
+        if (kDebugMode) {
+          print('❌ Failed to log error to Crashlytics: $e');
+        }
+      }
+    } else {
+      // Fallback to debug logging when Firebase not available
+      if (kDebugMode) {
+        print('🔥 DEBUG ERROR: $error');
+        if (stackTrace != null) {
+          print('Stack trace: $stackTrace');
+        }
+      }
+    }
+  }
+
+  // Log custom messages
+  Future<void> log(String message) async {
+    if (!InternalConfig.crashlyticsEnabled) return;
+
+    if (_firebaseAvailable && _crashlytics != null) {
+      try {
+        await _crashlytics!.log(message);
+        
+        if (kDebugMode) {
+          print('📝 Crashlytics log: $message');
+        }
+      } catch (e) {
+        if (kDebugMode) {
+          print('❌ Failed to log message: $e');
+        }
+      }
+    } else {
+      if (kDebugMode) {
+        print('📝 DEBUG LOG: $message');
+      }
+    }
+  }
+
+  // Set custom keys for crash reports
+  Future<void> setCustomKey(String key, dynamic value) async {
+    if (!InternalConfig.crashlyticsEnabled) return;
+
+    if (_firebaseAvailable && _crashlytics != null) {
+      try {
+        if (value is String) {
+          await _crashlytics!.setCustomKey(key, value);
+        } else if (value is int) {
+          await _crashlytics!.setCustomKey(key, value);
+        } else if (value is bool) {
+          await _crashlytics!.setCustomKey(key, value);
+        } else if (value is double) {
+          await _crashlytics!.setCustomKey(key, value);
+        } else {
+          await _crashlytics!.setCustomKey(key, value.toString());
+        }
+        
+        if (kDebugMode) {
+          print('🔑 Custom key set: $key = $value');
+        }
+      } catch (e) {
+        if (kDebugMode) {
+          print('❌ Failed to set custom key $key: $e');
+        }
+      }
+    } else {
+      if (kDebugMode) {
+        print('🔑 DEBUG CUSTOM KEY: $key = $value');
+      }
+    }
+  }
+
+  // Common app events
+  Future<void> trackAppOpen() async {
+    await trackEvent('app_open');
+  }
+
+  Future<void> trackOnboardingStart() async {
+    await trackEvent('onboarding_start');
+  }
+
+  Future<void> trackOnboardingComplete() async {
+    await trackEvent('onboarding_complete');
+  }
+
+  Future<void> trackThemeSelected(String themeId) async {
+    await trackEvent('theme_selected', parameters: {'theme_id': themeId});
+  }
+
+  Future<void> trackQuestionAsked(String model, int questionLength) async {
+    await trackEvent('question_asked', parameters: {
+      'model': model,
+      'question_length': questionLength,
+    });
+  }
+
+  Future<void> trackTtsSpoken(String model, int responseLength) async {
+    await trackEvent('tts_spoken', parameters: {
+      'model': model,
+      'response_length': responseLength,
+    });
+  }
+
+  Future<void> trackModelAutoSwitch(String fromModel, String toModel, String trigger) async {
+    await trackEvent('model_auto_switch', parameters: {
+      'from_model': fromModel,
+      'to_model': toModel,
+      'trigger': trigger,
+    });
+  }
+
+  Future<void> trackFamilyInviteCreated() async {
+    await trackEvent('family_invite_created');
+  }
+
+  Future<void> trackFamilyInviteJoined(String method) async {
+    await trackEvent('family_invite_joined', parameters: {'method': method});
+  }
+
+  Future<void> trackProviderRequestFailed(String provider, String error) async {
+    await trackEvent('provider_request_failed', parameters: {
+      'provider': provider,
+      'error_type': error,
+    });
+  }
+
+  Future<void> trackSpeechRecognitionError(String error) async {
+    await trackEvent('speech_recognition_error', parameters: {
+      'error_type': error,
+    });
+  }
+
+  Future<void> trackVoiceInteractionStart() async {
+    await trackEvent('voice_interaction_start');
+  }
+
+  Future<void> trackVoiceInteractionComplete(bool successful) async {
+    await trackEvent('voice_interaction_complete', parameters: {
+      'successful': successful,
+    });
+  }
+
+  Future<void> trackProviderKeyAdded(String provider) async {
+    await trackEvent('provider_key_added', parameters: {
+      'provider': provider,
+    });
+  }
+
+  Future<void> trackDeepLinkOpened(String linkType) async {
+    await trackEvent('deep_link_opened', parameters: {
+      'link_type': linkType,
+    });
+  }
+
+  // Debug helper - only works in debug mode
+  void debugEvent(String eventName, {Map<String, dynamic>? parameters}) {
+    if (kDebugMode) {
+      print('🐛 DEBUG EVENT: $eventName ${parameters != null ? 'with params: $parameters' : ''}');
+    }
+  }
+}
+
+// Convenience methods for common analytics operations
+class Analytics {
+  static final _service = AnalyticsService();
+
+  static Future<void> initialize() => _service.initialize();
+  static Future<void> track(String event, {Map<String, dynamic>? params}) => 
+      _service.trackEvent(event, parameters: params);
+  static Future<void> error(dynamic error, StackTrace? stack, {String? reason}) => 
+      _service.logError(error, stack, reason: reason);
+  static Future<void> setUserId(String? id) => _service.setUserId(id);
+  static Future<void> setUserProperty(String name, String? value) => 
+      _service.setUserProperty(name, value);
+
+  // Quick access to common events
+  static Future<void> appOpen() => _service.trackAppOpen();
+  static Future<void> onboardingStart() => _service.trackOnboardingStart();
+  static Future<void> onboardingComplete() => _service.trackOnboardingComplete();
+  static Future<void> themeSelected(String theme) => _service.trackThemeSelected(theme);
+  static Future<void> questionAsked(String model, int length) => 
+      _service.trackQuestionAsked(model, length);
+  static Future<void> modelAutoSwitch(String from, String to, String trigger) => 
+      _service.trackModelAutoSwitch(from, to, trigger);
+  static Future<void> familyInviteCreated() => _service.trackFamilyInviteCreated();
+  static Future<void> familyInviteJoined(String method) => 
+      _service.trackFamilyInviteJoined(method);
+  static Future<void> deepLinkOpened(String type) => _service.trackDeepLinkOpened(type);
 }
\ No newline at end of file
diff --git a/petitpal/lib/core/services/worker_api.dart b/petitpal/lib/core/services/worker_api.dart
index 0e457e4..a60fc19 100644
--- a/petitpal/lib/core/services/worker_api.dart
+++ b/petitpal/lib/core/services/worker_api.dart
@@ -1,255 +1,255 @@
-import 'dart:convert';
-import 'dart:io';
-import 'dart:async';
-import 'package:flutter/foundation.dart';
-import 'package:http/http.dart' as http;
-import '../../config/internal_config.dart';
-
-class WorkerApiService {
-  static final WorkerApiService _instance = WorkerApiService._internal();
-  factory WorkerApiService() => _instance;
-  WorkerApiService._internal();
-
-  static const Duration _defaultTimeout = Duration(seconds: 30);
-  String get _baseUrl => InternalConfig.workerBaseUrl;
-  
-  // HTTP client with timeout
-  final http.Client _client = http.Client();
-
-  // Common headers
-  Map<String, String> get _headers => {
-    'Content-Type': 'application/json',
-    'User-Agent': 'PetitPal-Flutter/${InternalConfig.appVersion}',
-  };
-
-  // Helper method to make HTTP requests with error handling
-  Future<Map<String, dynamic>> _makeRequest(
-    String method,
-    String endpoint, {
-    Map<String, dynamic>? body,
-    Map<String, String>? queryParams,
-    Duration? timeout,
-  }) async {
-    try {
-      final uri = Uri.parse('$_baseUrl$endpoint').replace(
-        queryParameters: queryParams,
-      );
-
-      late http.Response response;
-      final requestTimeout = timeout ?? _defaultTimeout;
-
-      switch (method.toUpperCase()) {
-        case 'GET':
-          response = await _client.get(uri, headers: _headers).timeout(requestTimeout);
-          break;
-        case 'POST':
-          response = await _client.post(
-            uri,
-            headers: _headers,
-            body: body != null ? jsonEncode(body) : null,
-          ).timeout(requestTimeout);
-          break;
-        case 'PUT':
-          response = await _client.put(
-            uri,
-            headers: _headers,
-            body: body != null ? jsonEncode(body) : null,
-          ).timeout(requestTimeout);
-          break;
-        case 'DELETE':
-          response = await _client.delete(uri, headers: _headers).timeout(requestTimeout);
-          break;
-        default:
-          throw Exception('Unsupported HTTP method: $method');
-      }
-
-      if (kDebugMode) {
-        print('🌐 API Request: $method $endpoint');
-        print('📤 Response: ${response.statusCode} - ${response.body}');
-      }
-
-      // Parse response
-      Map<String, dynamic> responseData;
-      try {
-        responseData = jsonDecode(response.body) as Map<String, dynamic>;
-      } catch (e) {
-        responseData = {
-          'success': false,
-          'error': 'Invalid JSON response',
-          'raw_response': response.body,
-        };
-      }
-
-      // Handle HTTP errors
-      if (response.statusCode < 200 || response.statusCode >= 300) {
-        responseData['success'] = false;
-        responseData['status_code'] = response.statusCode;
-        
-        if (!responseData.containsKey('error')) {
-          responseData['error'] = 'HTTP ${response.statusCode}: ${_getStatusMessage(response.statusCode)}';
-        }
-      }
-
-      return responseData;
-
-    } on SocketException {
-      return {
-        'success': false,
-        'error': 'No internet connection. Please check your network and try again.',
-        'error_type': 'network',
-      };
-    } on http.ClientException {
-      return {
-        'success': false,
-        'error': 'Connection failed. Please try again.',
-        'error_type': 'connection',
-      };
-    } on TimeoutException {
-      return {
-        'success': false,
-        'error': 'Request timed out. Please try again.',
-        'error_type': 'timeout',
-      };
-    } catch (e) {
-      return {
-        'success': false,
-        'error': 'An unexpected error occurred: ${e.toString()}',
-        'error_type': 'unknown',
-      };
-    }
-  }
-
-  String _getStatusMessage(int statusCode) {
-    switch (statusCode) {
-      case 400:
-        return 'Bad Request';
-      case 401:
-        return 'Unauthorized';
-      case 403:
-        return 'Forbidden';
-      case 404:
-        return 'Not Found';
-      case 500:
-        return 'Internal Server Error';
-      case 502:
-        return 'Bad Gateway';
-      case 503:
-        return 'Service Unavailable';
-      default:
-        return 'Unknown Error';
-    }
-  }
-
-  // Chat/LLM endpoints
-  Future<Map<String, dynamic>> sendChatMessage({
-    required String message,
-    required String model,
-    String? deviceId,
-  }) async {
-    return await _makeRequest('POST', '/api/chat', body: {
-      'message': message,
-      'model': model,
-      'device_id': deviceId,
-    });
-  }
-
-  // Provider key management
-  Future<Map<String, dynamic>> saveProviderKeys({
-    required String deviceId,
-    required String encryptedData,
-  }) async {
-    return await _makeRequest('POST', '/api/keys/save', body: {
-      'device_id': deviceId,
-      'encrypted_data': encryptedData,
-    });
-  }
-
-  Future<Map<String, dynamic>> getProviderKeys(String deviceId) async {
-    return await _makeRequest('GET', '/api/keys/get', queryParams: {
-      'device_id': deviceId,
-    });
-  }
-
-  // Family management endpoints
-  Future<Map<String, dynamic>> createFamilyInvite(String memberName) async {
-    return await _makeRequest('POST', '/api/family/create_invite', body: {
-      'member_name': memberName,
-    });
-  }
-
-  Future<Map<String, dynamic>> acceptFamilyInvite(String token) async {
-    return await _makeRequest('POST', '/api/family/accept_invite', body: {
-      'token': token,
-    });
-  }
-
-  Future<Map<String, dynamic>> getFamilyMembers() async {
-    return await _makeRequest('GET', '/api/family/list');
-  }
-
-  Future<Map<String, dynamic>> removeFamilyMember(String deviceId) async {
-    return await _makeRequest('DELETE', '/api/family/remove_member', body: {
-      'device_id': deviceId,
-    });
-  }
-
-  // Health check
-  Future<Map<String, dynamic>> healthCheck() async {
-    return await _makeRequest('GET', '/api/health');
-  }
-
-  // Version check
-  Future<Map<String, dynamic>> getVersion() async {
-    return await _makeRequest('GET', '/api/version');
-  }
-
-  // Test provider keys
-  Future<Map<String, dynamic>> testProviderKey({
-    required String provider,
-    required String apiKey,
-  }) async {
-    return await _makeRequest('POST', '/api/test_key', body: {
-      'provider': provider,
-      'api_key': apiKey,
-    });
-  }
-
-  // Cleanup
-  void dispose() {
-    _client.close();
-  }
-}
-
-// Helper class for API responses
-class ApiResponse {
-  final bool success;
-  final Map<String, dynamic> data;
-  final String? error;
-  final String? errorType;
-
-  ApiResponse({
-    required this.success,
-    required this.data,
-    this.error,
-    this.errorType,
-  });
-
-  factory ApiResponse.fromMap(Map<String, dynamic> map) {
-    return ApiResponse(
-      success: map['success'] as bool? ?? false,
-      data: map,
-      error: map['error'] as String?,
-      errorType: map['error_type'] as String?,
-    );
-  }
-
-  bool get isNetworkError => errorType == 'network';
-  bool get isTimeoutError => errorType == 'timeout';
-  bool get isConnectionError => errorType == 'connection';
-  bool get isUnknownError => errorType == 'unknown';
-
-  @override
-  String toString() {
-    return 'ApiResponse(success: $success, error: $error, errorType: $errorType)';
-  }
+import 'dart:convert';
+import 'dart:io';
+import 'dart:async';
+import 'package:flutter/foundation.dart';
+import 'package:http/http.dart' as http;
+import '../../config/internal_config.dart';
+
+class WorkerApiService {
+  static final WorkerApiService _instance = WorkerApiService._internal();
+  factory WorkerApiService() => _instance;
+  WorkerApiService._internal();
+
+  static const Duration _defaultTimeout = Duration(seconds: 30);
+  String get _baseUrl => InternalConfig.workerBaseUrl;
+  
+  // HTTP client with timeout
+  final http.Client _client = http.Client();
+
+  // Common headers
+  Map<String, String> get _headers => {
+    'Content-Type': 'application/json',
+    'User-Agent': 'PetitPal-Flutter/${InternalConfig.appVersion}',
+  };
+
+  // Helper method to make HTTP requests with error handling
+  Future<Map<String, dynamic>> _makeRequest(
+    String method,
+    String endpoint, {
+    Map<String, dynamic>? body,
+    Map<String, String>? queryParams,
+    Duration? timeout,
+  }) async {
+    try {
+      final uri = Uri.parse('$_baseUrl$endpoint').replace(
+        queryParameters: queryParams,
+      );
+
+      late http.Response response;
+      final requestTimeout = timeout ?? _defaultTimeout;
+
+      switch (method.toUpperCase()) {
+        case 'GET':
+          response = await _client.get(uri, headers: _headers).timeout(requestTimeout);
+          break;
+        case 'POST':
+          response = await _client.post(
+            uri,
+            headers: _headers,
+            body: body != null ? jsonEncode(body) : null,
+          ).timeout(requestTimeout);
+          break;
+        case 'PUT':
+          response = await _client.put(
+            uri,
+            headers: _headers,
+            body: body != null ? jsonEncode(body) : null,
+          ).timeout(requestTimeout);
+          break;
+        case 'DELETE':
+          response = await _client.delete(uri, headers: _headers).timeout(requestTimeout);
+          break;
+        default:
+          throw Exception('Unsupported HTTP method: $method');
+      }
+
+      if (kDebugMode) {
+        print('🌐 API Request: $method $endpoint');
+        print('📤 Response: ${response.statusCode} - ${response.body}');
+      }
+
+      // Parse response
+      Map<String, dynamic> responseData;
+      try {
+        responseData = jsonDecode(response.body) as Map<String, dynamic>;
+      } catch (e) {
+        responseData = {
+          'success': false,
+          'error': 'Invalid JSON response',
+          'raw_response': response.body,
+        };
+      }
+
+      // Handle HTTP errors
+      if (response.statusCode < 200 || response.statusCode >= 300) {
+        responseData['success'] = false;
+        responseData['status_code'] = response.statusCode;
+        
+        if (!responseData.containsKey('error')) {
+          responseData['error'] = 'HTTP ${response.statusCode}: ${_getStatusMessage(response.statusCode)}';
+        }
+      }
+
+      return responseData;
+
+    } on SocketException {
+      return {
+        'success': false,
+        'error': 'No internet connection. Please check your network and try again.',
+        'error_type': 'network',
+      };
+    } on http.ClientException {
+      return {
+        'success': false,
+        'error': 'Connection failed. Please try again.',
+        'error_type': 'connection',
+      };
+    } on TimeoutException {
+      return {
+        'success': false,
+        'error': 'Request timed out. Please try again.',
+        'error_type': 'timeout',
+      };
+    } catch (e) {
+      return {
+        'success': false,
+        'error': 'An unexpected error occurred: ${e.toString()}',
+        'error_type': 'unknown',
+      };
+    }
+  }
+
+  String _getStatusMessage(int statusCode) {
+    switch (statusCode) {
+      case 400:
+        return 'Bad Request';
+      case 401:
+        return 'Unauthorized';
+      case 403:
+        return 'Forbidden';
+      case 404:
+        return 'Not Found';
+      case 500:
+        return 'Internal Server Error';
+      case 502:
+        return 'Bad Gateway';
+      case 503:
+        return 'Service Unavailable';
+      default:
+        return 'Unknown Error';
+    }
+  }
+
+  // Chat/LLM endpoints
+  Future<Map<String, dynamic>> sendChatMessage({
+    required String message,
+    required String model,
+    String? deviceId,
+  }) async {
+    return await _makeRequest('POST', '/api/chat', body: {
+      'message': message,
+      'model': model,
+      'device_id': deviceId,
+    });
+  }
+
+  // Provider key management
+  Future<Map<String, dynamic>> saveProviderKeys({
+    required String deviceId,
+    required String encryptedData,
+  }) async {
+    return await _makeRequest('POST', '/api/keys/save', body: {
+      'device_id': deviceId,
+      'encrypted_data': encryptedData,
+    });
+  }
+
+  Future<Map<String, dynamic>> getProviderKeys(String deviceId) async {
+    return await _makeRequest('GET', '/api/keys/get', queryParams: {
+      'device_id': deviceId,
+    });
+  }
+
+  // Family management endpoints
+  Future<Map<String, dynamic>> createFamilyInvite(String memberName) async {
+    return await _makeRequest('POST', '/api/family/create_invite', body: {
+      'member_name': memberName,
+    });
+  }
+
+  Future<Map<String, dynamic>> acceptFamilyInvite(String token) async {
+    return await _makeRequest('POST', '/api/family/accept_invite', body: {
+      'token': token,
+    });
+  }
+
+  Future<Map<String, dynamic>> getFamilyMembers() async {
+    return await _makeRequest('GET', '/api/family/list');
+  }
+
+  Future<Map<String, dynamic>> removeFamilyMember(String deviceId) async {
+    return await _makeRequest('DELETE', '/api/family/remove_member', body: {
+      'device_id': deviceId,
+    });
+  }
+
+  // Health check
+  Future<Map<String, dynamic>> healthCheck() async {
+    return await _makeRequest('GET', '/api/health');
+  }
+
+  // Version check
+  Future<Map<String, dynamic>> getVersion() async {
+    return await _makeRequest('GET', '/api/version');
+  }
+
+  // Test provider keys
+  Future<Map<String, dynamic>> testProviderKey({
+    required String provider,
+    required String apiKey,
+  }) async {
+    return await _makeRequest('POST', '/api/test_key', body: {
+      'provider': provider,
+      'api_key': apiKey,
+    });
+  }
+
+  // Cleanup
+  void dispose() {
+    _client.close();
+  }
+}
+
+// Helper class for API responses
+class ApiResponse {
+  final bool success;
+  final Map<String, dynamic> data;
+  final String? error;
+  final String? errorType;
+
+  ApiResponse({
+    required this.success,
+    required this.data,
+    this.error,
+    this.errorType,
+  });
+
+  factory ApiResponse.fromMap(Map<String, dynamic> map) {
+    return ApiResponse(
+      success: map['success'] as bool? ?? false,
+      data: map,
+      error: map['error'] as String?,
+      errorType: map['error_type'] as String?,
+    );
+  }
+
+  bool get isNetworkError => errorType == 'network';
+  bool get isTimeoutError => errorType == 'timeout';
+  bool get isConnectionError => errorType == 'connection';
+  bool get isUnknownError => errorType == 'unknown';
+
+  @override
+  String toString() {
+    return 'ApiResponse(success: $success, error: $error, errorType: $errorType)';
+  }
 }
\ No newline at end of file
diff --git a/petitpal/lib/firebase_options_stub.dart b/petitpal/lib/firebase_options_stub.dart
new file mode 100644
index 0000000..5af1001
--- /dev/null
+++ b/petitpal/lib/firebase_options_stub.dart
@@ -0,0 +1,6 @@
+class DefaultFirebaseOptions {
+  static get currentPlatform => throw UnsupportedError(
+    'Firebase not configured. Please run `flutterfire configure` to set up Firebase, '
+    'or set LAUNCH_MODE = false in internal_config.dart to run without Firebase.'
+  );
+}
\ No newline at end of file
diff --git a/petitpal/lib/main.dart b/petitpal/lib/main.dart
index 31dcbd3..d9b6e38 100644
--- a/petitpal/lib/main.dart
+++ b/petitpal/lib/main.dart
@@ -1,242 +1 @@
-import 'package:flutter/material.dart';
-import 'package:flutter_riverpod/flutter_riverpod.dart';
-import 'package:app_links/app_links.dart';
-import 'package:firebase_core/firebase_core.dart';
-import 'dart:async';
-import 'dart:io';
-
-// Import providers
-import 'providers/app_provider.dart';
-import 'providers/theme_provider.dart';
-import 'providers/voice_provider.dart';
-import 'providers/family_provider.dart';
-
-// Import services
-import 'core/services/analytics_service.dart' as analytics;
-
-// Import config
-import 'config/internal_config.dart';
-
-// Import screens
-import 'src/onboarding/onboarding_screen.dart';
-import 'src/home/home_screen.dart';
-import 'src/theme/theme_preview_screen.dart';
-import 'src/providers/providers_screen.dart';
-import 'src/family/family_screen.dart';
-
-void main() async {
-  WidgetsFlutterBinding.ensureInitialized();
-
-  // Initialize Firebase conditionally
-  await _initializeFirebase();
-
-  // Initialize analytics
-  await analytics.AnalyticsService().initialize();
-
-  runApp(const ProviderScope(child: PetitPalApp()));
-}
-
-// Initialize Firebase only if google-services.json exists and config allows it
-Future<void> _initializeFirebase() async {
-  try {
-    // Check if Firebase should be initialized
-    if (InternalConfig.analyticsEnabled || InternalConfig.crashlyticsEnabled) {
-      // On Android, check if google-services.json exists
-      // On other platforms, Firebase.apps will be empty if not configured
-      if (Firebase.apps.isEmpty) {
-        await Firebase.initializeApp();
-        debugPrint('✅ Firebase initialized successfully');
-      }
-    } else {
-      debugPrint('📊 Firebase disabled via config (LAUNCH_MODE = false)');
-    }
-  } catch (e) {
-    // This is expected when google-services.json doesn't exist
-    debugPrint('ℹ️ Firebase not configured (missing google-services.json): $e');
-    debugPrint('   App will work without Firebase - add google-services.json to enable');
-  }
-}
-
-class PetitPalApp extends ConsumerStatefulWidget {
-  const PetitPalApp({super.key});
-
-  @override
-  ConsumerState<PetitPalApp> createState() => _PetitPalAppState();
-}
-
-class _PetitPalAppState extends ConsumerState<PetitPalApp> {
-  final AppLinks _appLinks = AppLinks();
-  StreamSubscription<Uri>? _linkSubscription;
-
-  @override
-  void initState() {
-    super.initState();
-    _initializeApp();
-    _initDeepLinks();
-  }
-
-  @override
-  void dispose() {
-    _linkSubscription?.cancel();
-    super.dispose();
-  }
-
-  Future<void> _initializeApp() async {
-    // Track app open
-    await Analytics.appOpen();
-
-    // Load app state
-    await ref.read(appProvider.notifier).initialize();
-    
-    // Load theme
-    await ref.read(themeProvider.notifier).loadTheme();
-    
-    // Load family data if available
-    await ref.read(familyProvider.notifier).loadFamily();
-  }
-
-  Future<void> _initDeepLinks() async {
-    try {
-      // Listen for incoming links when app is already running
-      _linkSubscription = _appLinks.uriLinkStream.listen(
-        (uri) {
-          debugPrint('🔗 Deep link received: $uri');
-          _handleDeepLink(uri);
-        },
-        onError: (err) {
-          debugPrint('❌ Deep link error: $err');
-        },
-      );
-
-      // Check if app was launched from a deep link
-      // Note: This is the correct way to get initial link in app_links 6.x
-      await _checkInitialLink();
-    } catch (e) {
-      debugPrint('❌ Deep link initialization failed: $e');
-    }
-  }
-
-  Future<void> _checkInitialLink() async {
-    try {
-      // For app_links 6.x, initial links are handled through the stream
-      // We just need to make sure we're listening from the start
-      // The stream will emit any initial link automatically
-      debugPrint('🔗 Deep link listener initialized');
-    } catch (e) {
-      debugPrint('❌ Error setting up initial link checking: $e');
-    }
-  }
-
-  void _handleDeepLink(Uri uri) {
-    final path = uri.path;
-    final token = uri.pathSegments.isNotEmpty ? uri.pathSegments.last : null;
-
-    // Track deep link usage
-    analytics.Analytics.deepLinkOpened(path);
-
-    if (path.startsWith('/invite/') && token != null) {
-      _handleFamilyInvite(token);
-    } else {
-      debugPrint('⚠️ Unknown deep link pattern: $uri');
-    }
-  }
-
-  void _handleFamilyInvite(String token) {
-    // Check if onboarding is complete
-    final appState = ref.read(appProvider);
-    
-    if (!appState.isOnboardingComplete) {
-      // Store the invite token to process after onboarding
-      ref.read(familyProvider.notifier).setPendingInviteToken(token);
-      debugPrint('📝 Stored invite token for after onboarding: $token');
-    } else {
-      // Process invite immediately
-      _processInviteToken(token);
-    }
-  }
-
-  void _processInviteToken(String token) {
-    ref.read(familyProvider.notifier).acceptInvite(token).then((success) {
-      if (mounted) {
-        final message = success 
-            ? 'Successfully joined family!' 
-            : 'Failed to join family. Please try again.';
-        
-        ScaffoldMessenger.of(context).showSnackBar(
-          SnackBar(
-            content: Text(message),
-            backgroundColor: success ? Colors.green : Colors.red,
-          ),
-        );
-
-        if (success) {
-          // Navigate to family screen to show the new family
-          Navigator.of(context).pushNamed('/family');
-        }
-      }
-    });
-  }
-
-  @override
-  Widget build(BuildContext context) {
-    final themeState = ref.watch(themeProvider);
-    final appState = ref.watch(appProvider);
-
-    return MaterialApp(
-      title: 'PetitPal',
-      theme: themeState.currentTheme,
-      debugShowCheckedModeBanner: !InternalConfig.isProductionReady,
-      
-      // Initial route based on onboarding status
-      initialRoute: appState.isOnboardingComplete ? '/home' : '/onboarding',
-      
-      routes: {
-        '/onboarding': (context) => const OnboardingScreen(),
-        '/home': (context) => const HomeScreen(),
-        '/themes': (context) => const ThemePreviewScreen(),
-        '/providers': (context) => const ProvidersScreen(),
-        '/family': (context) => const FamilyScreen(),
-      },
-
-      // Handle unknown routes
-      onUnknownRoute: (settings) {
-        return MaterialPageRoute(
-          builder: (context) => Scaffold(
-            appBar: AppBar(title: const Text('Page Not Found')),
-            body: const Center(
-              child: Text('The requested page could not be found.'),
-            ),
-          ),
-        );
-      },
-
-      // Global navigation observer for analytics
-      navigatorObservers: [
-        _AnalyticsNavigatorObserver(),
-      ],
-    );
-  }
-}
-
-// Navigator observer for tracking screen views
-class _AnalyticsNavigatorObserver extends NavigatorObserver {
-  @override
-  void didPush(Route<dynamic> route, Route<dynamic>? previousRoute) {
-    super.didPush(route, previousRoute);
-    if (route.settings.name != null) {
-      analytics.Analytics.track('screen_view', params: {
-        'screen_name': route.settings.name!,
-      });
-    }
-  }
-
-  @override
-  void didReplace({Route<dynamic>? newRoute, Route<dynamic>? oldRoute}) {
-    super.didReplace(newRoute: newRoute, oldRoute: oldRoute);
-    if (newRoute?.settings.name != null) {
-      analytics.Analytics.track('screen_view', params: {
-        'screen_name': newRoute!.settings.name!,
-      });
-    }
-  }
-}
\ No newline at end of file
+'"$@"'
diff --git a/petitpal/lib/main_common.dart b/petitpal/lib/main_common.dart
index 7294186..a5970e5 100644
--- a/petitpal/lib/main_common.dart
+++ b/petitpal/lib/main_common.dart
@@ -1,34 +1,34 @@
-import 'package:flutter/material.dart';
-import 'package:provider/provider.dart' as legacy; // for ChangeNotifier
-import 'src/analytics/analytics.dart';
-import 'src/analytics/sentry_boot.dart';
-import 'src/theme/registry.dart';
-import 'src/onboarding/onboarding_flow.dart';
-import 'src/voice/voice_screen.dart';
-import 'config/launch_config.dart';
-
-class PetitPalApp extends StatelessWidget {
-  const PetitPalApp({super.key});
-
-  @override
-  Widget build(BuildContext context) {
-    final controller = ThemeController();
-    return legacy.ChangeNotifierProvider.value(
-      value: controller,
-      child: Builder(builder: (context) {
-        final choice = controller.choice;
-        return MaterialApp(
-          title: 'PetitPal',
-          debugShowCheckedModeBanner: !LaunchConfig.isProductionReady,
-          theme: choice.lightTheme,
-          darkTheme: choice.darkTheme,
-          themeMode: choice.mode,
-          routes: {
-            '/home': (_) => const VoiceScreen(),
-          },
-          home: OnboardingGate(home: const VoiceScreen(), themeController: controller),
-        );
-      }),
-    );
-  }
-}
+import 'package:flutter/material.dart';
+import 'package:provider/provider.dart' as legacy; // for ChangeNotifier
+import 'src/analytics/analytics.dart';
+import 'src/analytics/sentry_boot.dart';
+import 'src/theme/registry.dart';
+import 'src/onboarding/onboarding_flow.dart';
+import 'src/voice/voice_screen.dart';
+import 'config/launch_config.dart';
+
+class PetitPalApp extends StatelessWidget {
+  const PetitPalApp({super.key});
+
+  @override
+  Widget build(BuildContext context) {
+    final controller = ThemeController();
+    return legacy.ChangeNotifierProvider.value(
+      value: controller,
+      child: Builder(builder: (context) {
+        final choice = controller.choice;
+        return MaterialApp(
+          title: 'PetitPal',
+          debugShowCheckedModeBanner: !LaunchConfig.isProductionReady,
+          theme: choice.lightTheme,
+          darkTheme: choice.darkTheme,
+          themeMode: choice.mode,
+          routes: {
+            '/home': (_) => const VoiceScreen(),
+          },
+          home: OnboardingGate(home: const VoiceScreen(), themeController: controller),
+        );
+      }),
+    );
+  }
+}
diff --git a/petitpal/lib/main_dev.dart b/petitpal/lib/main_dev.dart
index 983d8d2..7091e4e 100644
--- a/petitpal/lib/main_dev.dart
+++ b/petitpal/lib/main_dev.dart
@@ -1,14 +1,14 @@
-import 'package:flutter/material.dart';
-import 'config/api_config.dart';
-import 'config/launch_config.dart';
-import 'main_common.dart';
-import 'src/analytics/analytics.dart';
-import 'src/analytics/sentry_boot.dart';
-
-void main() async {
-  WidgetsFlutterBinding.ensureInitialized();
-  ApiConfig.setEnvironment(ApiEnvironment.dev);
-  await bootSentry();
-  await AnalyticsService().initIfNeeded();
-  runApp(const PetitPalApp());
-}
+import 'package:flutter/material.dart';
+import 'config/api_config.dart';
+import 'config/launch_config.dart';
+import 'main_common.dart';
+import 'src/analytics/analytics.dart';
+import 'src/analytics/sentry_boot.dart';
+
+void main() async {
+  WidgetsFlutterBinding.ensureInitialized();
+  ApiConfig.setEnvironment(ApiEnvironment.dev);
+  await bootSentry();
+  await AnalyticsService().initIfNeeded();
+  runApp(const PetitPalApp());
+}
diff --git a/petitpal/lib/main_prod.dart b/petitpal/lib/main_prod.dart
index 361c33b..a6cb2ef 100644
--- a/petitpal/lib/main_prod.dart
+++ b/petitpal/lib/main_prod.dart
@@ -1,13 +1,13 @@
-import 'package:flutter/material.dart';
-import 'config/api_config.dart';
-import 'main_common.dart';
-import 'src/analytics/analytics.dart';
-import 'src/analytics/sentry_boot.dart';
-
-void main() async {
-  WidgetsFlutterBinding.ensureInitialized();
-  ApiConfig.setEnvironment(ApiEnvironment.prod);
-  await bootSentry();
-  await AnalyticsService().initIfNeeded();
-  runApp(const PetitPalApp());
-}
+import 'package:flutter/material.dart';
+import 'config/api_config.dart';
+import 'main_common.dart';
+import 'src/analytics/analytics.dart';
+import 'src/analytics/sentry_boot.dart';
+
+void main() async {
+  WidgetsFlutterBinding.ensureInitialized();
+  ApiConfig.setEnvironment(ApiEnvironment.prod);
+  await bootSentry();
+  await AnalyticsService().initIfNeeded();
+  runApp(const PetitPalApp());
+}
diff --git a/petitpal/lib/main_staging.dart b/petitpal/lib/main_staging.dart
index 12e1362..15c87ac 100644
--- a/petitpal/lib/main_staging.dart
+++ b/petitpal/lib/main_staging.dart
@@ -1,13 +1,13 @@
-import 'package:flutter/material.dart';
-import 'config/api_config.dart';
-import 'main_common.dart';
-import 'src/analytics/analytics.dart';
-import 'src/analytics/sentry_boot.dart';
-
-void main() async {
-  WidgetsFlutterBinding.ensureInitialized();
-  ApiConfig.setEnvironment(ApiEnvironment.staging);
-  await bootSentry();
-  await AnalyticsService().initIfNeeded();
-  runApp(const PetitPalApp());
-}
+import 'package:flutter/material.dart';
+import 'config/api_config.dart';
+import 'main_common.dart';
+import 'src/analytics/analytics.dart';
+import 'src/analytics/sentry_boot.dart';
+
+void main() async {
+  WidgetsFlutterBinding.ensureInitialized();
+  ApiConfig.setEnvironment(ApiEnvironment.staging);
+  await bootSentry();
+  await AnalyticsService().initIfNeeded();
+  runApp(const PetitPalApp());
+}
diff --git a/petitpal/lib/providers/app_provider.dart b/petitpal/lib/providers/app_provider.dart
index 92b405a..b64d43a 100644
--- a/petitpal/lib/providers/app_provider.dart
+++ b/petitpal/lib/providers/app_provider.dart
@@ -1,252 +1,76 @@
-import 'package:flutter/foundation.dart';
 import 'package:flutter_riverpod/flutter_riverpod.dart';
 import 'package:shared_preferences/shared_preferences.dart';
-import 'package:device_info_plus/device_info_plus.dart';
-import 'dart:io';
-import '../config/internal_config.dart';
 
-// App state model
 class AppState {
   final bool isOnboardingComplete;
-  final String deviceId;
-  final bool isLoading;
-  final String? error;
-  final bool isFirstRun;
-  final Map<String, dynamic> deviceInfo;
+  final bool isFirstLaunch;
+  final String? deviceId;
 
-  AppState({
+  const AppState({
     this.isOnboardingComplete = false,
-    this.deviceId = '',
-    this.isLoading = false,
-    this.error,
-    this.isFirstRun = true,
-    this.deviceInfo = const {},
+    this.isFirstLaunch = true,
+    this.deviceId,
   });
 
   AppState copyWith({
     bool? isOnboardingComplete,
+    bool? isFirstLaunch,
     String? deviceId,
-    bool? isLoading,
-    String? error,
-    bool? isFirstRun,
-    Map<String, dynamic>? deviceInfo,
   }) {
     return AppState(
       isOnboardingComplete: isOnboardingComplete ?? this.isOnboardingComplete,
+      isFirstLaunch: isFirstLaunch ?? this.isFirstLaunch,
       deviceId: deviceId ?? this.deviceId,
-      isLoading: isLoading ?? this.isLoading,
-      error: error ?? this.error,
-      isFirstRun: isFirstRun ?? this.isFirstRun,
-      deviceInfo: deviceInfo ?? this.deviceInfo,
     );
   }
 }
 
-// App provider notifier
 class AppNotifier extends StateNotifier<AppState> {
-  AppNotifier() : super(AppState());
+  AppNotifier() : super(const AppState());
 
-  SharedPreferences? _prefs;
-
-  // Initialize app state
   Future<void> initialize() async {
-    state = state.copyWith(isLoading: true);
-
     try {
-      // Initialize shared preferences
-      _prefs = await SharedPreferences.getInstance();
-
-      // Check if this is first run
-      final isFirstRun = !(_prefs?.containsKey(InternalConfig.storageKeyOnboardingComplete) ?? false);
-
-      // Get or create device ID
-      final deviceId = await _getOrCreateDeviceId();
-
-      // Check onboarding status
-      final isOnboardingComplete = _prefs?.getBool(InternalConfig.storageKeyOnboardingComplete) ?? false;
-
-      // Get device info
-      final deviceInfo = await _getDeviceInfo();
+      final prefs = await SharedPreferences.getInstance();
+      final isOnboardingComplete = prefs.getBool('onboarding_complete') ?? false;
+      final isFirstLaunch = prefs.getBool('first_launch') ?? true;
+      final deviceId = prefs.getString('device_id') ?? _generateDeviceId();
+
+      // Save device ID if it's new
+      if (!prefs.containsKey('device_id')) {
+        await prefs.setString('device_id', deviceId);
+      }
 
-      state = state.copyWith(
-        isFirstRun: isFirstRun,
-        deviceId: deviceId,
+      state = AppState(
         isOnboardingComplete: isOnboardingComplete,
-        deviceInfo: deviceInfo,
-        isLoading: false,
+        isFirstLaunch: isFirstLaunch,
+        deviceId: deviceId,
       );
-
-      if (kDebugMode) {
-        print('✅ App initialized:');
-        print('   Device ID: $deviceId');
-        print('   First Run: $isFirstRun');
-        print('   Onboarding Complete: $isOnboardingComplete');
-        print('   Device Info: $deviceInfo');
-      }
-
     } catch (e) {
-      state = state.copyWith(
-        isLoading: false,
-        error: 'Failed to initialize app: ${e.toString()}',
-      );
-      
-      if (kDebugMode) {
-        print('❌ App initialization failed: $e');
-      }
+      print('Error initializing app state: $e');
     }
   }
 
-  // Complete onboarding
   Future<void> completeOnboarding() async {
     try {
-      await _prefs?.setBool(InternalConfig.storageKeyOnboardingComplete, true);
-      state = state.copyWith(isOnboardingComplete: true);
-      
-      if (kDebugMode) {
-        print('✅ Onboarding completed');
-      }
-    } catch (e) {
-      state = state.copyWith(error: 'Failed to save onboarding status: ${e.toString()}');
-    }
-  }
-
-  // Reset onboarding (for testing)
-  Future<void> resetOnboarding() async {
-    try {
-      await _prefs?.setBool(InternalConfig.storageKeyOnboardingComplete, false);
-      state = state.copyWith(isOnboardingComplete: false);
+      final prefs = await SharedPreferences.getInstance();
+      await prefs.setBool('onboarding_complete', true);
+      await prefs.setBool('first_launch', false);
       
-      if (kDebugMode) {
-        print('🔄 Onboarding reset');
-      }
+      state = state.copyWith(
+        isOnboardingComplete: true,
+        isFirstLaunch: false,
+      );
     } catch (e) {
-      state = state.copyWith(error: 'Failed to reset onboarding: ${e.toString()}');
-    }
-  }
-
-  // Get or create device ID
-  Future<String> _getOrCreateDeviceId() async {
-    String? deviceId = _prefs?.getString(InternalConfig.storageKeyDeviceId);
-    
-    if (deviceId == null || deviceId.isEmpty) {
-      // Generate new device ID
-      deviceId = _generateDeviceId();
-      await _prefs?.setString(InternalConfig.storageKeyDeviceId, deviceId);
-      
-      if (kDebugMode) {
-        print('🆔 Generated new device ID: $deviceId');
-      }
+      print('Error completing onboarding: $e');
     }
-    
-    return deviceId;
   }
 
-  // Generate anonymous device ID
   String _generateDeviceId() {
-    final timestamp = DateTime.now().millisecondsSinceEpoch;
-    final random = (timestamp * 997) % 999999; // Simple pseudo-random
-    return 'device_${timestamp}_$random';
-  }
-
-  // Get device information for analytics
-  Future<Map<String, dynamic>> _getDeviceInfo() async {
-    try {
-      final deviceInfo = DeviceInfoPlugin();
-      final info = <String, dynamic>{};
-
-      if (Platform.isAndroid) {
-        final androidInfo = await deviceInfo.androidInfo;
-        info.addAll({
-          'platform': 'android',
-          'model': androidInfo.model,
-          'brand': androidInfo.brand,
-          'version': androidInfo.version.release,
-          'sdk_int': androidInfo.version.sdkInt,
-          'manufacturer': androidInfo.manufacturer,
-        });
-      } else if (Platform.isIOS) {
-        final iosInfo = await deviceInfo.iosInfo;
-        info.addAll({
-          'platform': 'ios',
-          'model': iosInfo.model,
-          'name': iosInfo.name,
-          'version': iosInfo.systemVersion,
-          'uuid': iosInfo.identifierForVendor,
-        });
-      }
-
-      return info;
-    } catch (e) {
-      if (kDebugMode) {
-        print('❌ Failed to get device info: $e');
-      }
-      return {'platform': Platform.operatingSystem};
-    }
-  }
-
-  // Clear error
-  void clearError() {
-    state = state.copyWith(error: null);
-  }
-
-  // Update device info (if needed)
-  Future<void> refreshDeviceInfo() async {
-    final deviceInfo = await _getDeviceInfo();
-    state = state.copyWith(deviceInfo: deviceInfo);
-  }
-
-  // Check if app needs update (placeholder for future use)
-  Future<bool> checkForUpdates() async {
-    // TODO: Implement version checking logic
-    return false;
-  }
-
-  // Debug methods
-  void printDebugInfo() {
-    if (kDebugMode) {
-      print('🐛 App Debug Info:');
-      print('   Device ID: ${state.deviceId}');
-      print('   Onboarding Complete: ${state.isOnboardingComplete}');
-      print('   First Run: ${state.isFirstRun}');
-      print('   Loading: ${state.isLoading}');
-      print('   Error: ${state.error}');
-      print('   Device Info: ${state.deviceInfo}');
-    }
-  }
-
-  // Clear all app data (for testing/reset)
-  Future<void> clearAllData() async {
-    try {
-      await _prefs?.clear();
-      state = AppState(); // Reset to initial state
-      
-      if (kDebugMode) {
-        print('🧹 All app data cleared');
-      }
-    } catch (e) {
-      state = state.copyWith(error: 'Failed to clear data: ${e.toString()}');
-    }
+    // Generate a simple device ID - in production, you might want something more robust
+    return 'device_${DateTime.now().millisecondsSinceEpoch}_${(1000 + (9000 * (DateTime.now().millisecondsSinceEpoch % 1000) / 1000)).round()}';
   }
 }
 
-// Provider definition
 final appProvider = StateNotifierProvider<AppNotifier, AppState>((ref) {
   return AppNotifier();
 });
-
-// Convenience providers
-final deviceIdProvider = Provider<String>((ref) {
-  return ref.watch(appProvider).deviceId;
-});
-
-final isOnboardingCompleteProvider = Provider<bool>((ref) {
-  return ref.watch(appProvider).isOnboardingComplete;
-});
-
-final isFirstRunProvider = Provider<bool>((ref) {
-  return ref.watch(appProvider).isFirstRun;
-});
-
-final deviceInfoProvider = Provider<Map<String, dynamic>>((ref) {
-  return ref.watch(appProvider).deviceInfo;
-});
\ No newline at end of file
diff --git a/petitpal/lib/providers/family_provider.dart b/petitpal/lib/providers/family_provider.dart
index feaf37f..f6638ac 100644
--- a/petitpal/lib/providers/family_provider.dart
+++ b/petitpal/lib/providers/family_provider.dart
@@ -1,222 +1,105 @@
-import 'package:flutter/foundation.dart';
-import 'package:flutter_riverpod/flutter_riverpod.dart';
-import '../core/services/worker_api.dart';
-
-// Family data model
-class FamilyMember {
-  final String deviceId;
-  final String name;
-  final DateTime joinedAt;
-
-  FamilyMember({
-    required this.deviceId,
-    required this.name,
-    required this.joinedAt,
-  });
-
-  factory FamilyMember.fromJson(Map<String, dynamic> json) {
-    return FamilyMember(
-      deviceId: json['device_id'] as String,
-      name: json['name'] as String,
-      joinedAt: DateTime.parse(json['joined_at'] as String),
-    );
-  }
-
-  Map<String, dynamic> toJson() {
-    return {
-      'device_id': deviceId,
-      'name': name,
-      'joined_at': joinedAt.toIso8601String(),
-    };
-  }
-}
-
-class FamilyGroup {
-  final String familyId;
-  final List<FamilyMember> members;
-  final String ownerDeviceId;
-  final DateTime createdAt;
-
-  FamilyGroup({
-    required this.familyId,
-    required this.members,
-    required this.ownerDeviceId,
-    required this.createdAt,
-  });
-
-  factory FamilyGroup.fromJson(Map<String, dynamic> json) {
-    return FamilyGroup(
-      familyId: json['family_id'] as String,
-      members: (json['members'] as List)
-          .map((m) => FamilyMember.fromJson(m as Map<String, dynamic>))
-          .toList(),
-      ownerDeviceId: json['owner_device_id'] as String,
-      createdAt: DateTime.parse(json['created_at'] as String),
-    );
-  }
-}
-
-// Family state
-class FamilyState {
-  final FamilyGroup? family;
-  final bool isLoading;
-  final String? error;
-  final String? pendingInviteToken;
-
-  FamilyState({
-    this.family,
-    this.isLoading = false,
-    this.error,
-    this.pendingInviteToken,
-  });
-
-  FamilyState copyWith({
-    FamilyGroup? family,
-    bool? isLoading,
-    String? error,
-    String? pendingInviteToken,
-  }) {
-    return FamilyState(
-      family: family ?? this.family,
-      isLoading: isLoading ?? this.isLoading,
-      error: error ?? this.error,
-      pendingInviteToken: pendingInviteToken ?? this.pendingInviteToken,
-    );
-  }
-}
-
-// Family provider
-class FamilyNotifier extends StateNotifier<FamilyState> {
-  FamilyNotifier() : super(FamilyState());
-
-  final WorkerApiService _apiService = WorkerApiService();
-
-  // Create a new family invite
-  Future<String?> createInvite(String memberName) async {
-    state = state.copyWith(isLoading: true, error: null);
-    
-    try {
-      final response = await _apiService.createFamilyInvite(memberName);
-      if (response['success'] == true) {
-        final token = response['token'] as String;
-        return token;
-      } else {
-        state = state.copyWith(
-          isLoading: false,
-          error: response['error'] as String? ?? 'Failed to create invite',
-        );
-        return null;
-      }
-    } catch (e) {
-      state = state.copyWith(
-        isLoading: false,
-        error: 'Network error: ${e.toString()}',
-      );
-      return null;
-    }
-  }
-
-  // Accept family invite
-  Future<bool> acceptInvite(String token) async {
-    state = state.copyWith(isLoading: true, error: null);
-    
-    try {
-      final response = await _apiService.acceptFamilyInvite(token);
-      if (response['success'] == true) {
-        await loadFamily(); // Reload family data
-        state = state.copyWith(isLoading: false);
-        return true;
-      } else {
-        state = state.copyWith(
-          isLoading: false,
-          error: response['error'] as String? ?? 'Failed to accept invite',
-        );
-        return false;
-      }
-    } catch (e) {
-      state = state.copyWith(
-        isLoading: false,
-        error: 'Network error: ${e.toString()}',
-      );
-      return false;
-    }
-  }
-
-  // Load current family data
-  Future<void> loadFamily() async {
-    state = state.copyWith(isLoading: true, error: null);
-    
-    try {
-      final response = await _apiService.getFamilyMembers();
-      if (response['success'] == true && response['family'] != null) {
-        final family = FamilyGroup.fromJson(response['family'] as Map<String, dynamic>);
-        state = state.copyWith(
-          family: family,
-          isLoading: false,
-        );
-      } else {
-        state = state.copyWith(
-          isLoading: false,
-          error: response['error'] as String?,
-        );
-      }
-    } catch (e) {
-      state = state.copyWith(
-        isLoading: false,
-        error: 'Failed to load family: ${e.toString()}',
-      );
-    }
-  }
-
-  // Remove family member
-  Future<bool> removeMember(String deviceId) async {
-    state = state.copyWith(isLoading: true, error: null);
-    
-    try {
-      final response = await _apiService.removeFamilyMember(deviceId);
-      if (response['success'] == true) {
-        await loadFamily(); // Reload family data
-        state = state.copyWith(isLoading: false);
-        return true;
-      } else {
-        state = state.copyWith(
-          isLoading: false,
-          error: response['error'] as String? ?? 'Failed to remove member',
-        );
-        return false;
-      }
-    } catch (e) {
-      state = state.copyWith(
-        isLoading: false,
-        error: 'Network error: ${e.toString()}',
-      );
-      return false;
-    }
-  }
-
-  // Set pending invite token (for deep link handling)
-  void setPendingInviteToken(String? token) {
-    state = state.copyWith(pendingInviteToken: token);
-  }
-
-  // Clear error
-  void clearError() {
-    state = state.copyWith(error: null);
-  }
-}
-
-// Provider definition
-final familyProvider = StateNotifierProvider<FamilyNotifier, FamilyState>((ref) {
-  return FamilyNotifier();
-});
-
-// Convenience providers
-final familyMembersProvider = Provider<List<FamilyMember>>((ref) {
-  final family = ref.watch(familyProvider).family;
-  return family?.members ?? [];
-});
-
-final isInFamilyProvider = Provider<bool>((ref) {
-  final family = ref.watch(familyProvider).family;
-  return family != null && family.members.isNotEmpty;
+import 'package:flutter_riverpod/flutter_riverpod.dart';
+import 'package:flutter_riverpod/flutter_riverpod.dart';
+
+class FamilyMember {
+  final String deviceId;
+  final String name;
+  final DateTime joinedAt;
+
+  const FamilyMember({
+    required this.deviceId,
+    required this.name,
+    required this.joinedAt,
+  });
+
+  FamilyMember copyWith({
+    String? deviceId,
+    String? name,
+    DateTime? joinedAt,
+  }) {
+    return FamilyMember(
+      deviceId: deviceId ?? this.deviceId,
+      name: name ?? this.name,
+      joinedAt: joinedAt ?? this.joinedAt,
+    );
+  }
+}
+
+class FamilyState {
+  final String? familyId;
+  final List<FamilyMember> members;
+  final String? pendingInviteToken;
+  final bool isLoading;
+
+  const FamilyState({
+    this.familyId,
+    this.members = const [],
+    this.pendingInviteToken,
+    this.isLoading = false,
+  });
+
+  FamilyState copyWith({
+    String? familyId,
+    List<FamilyMember>? members,
+    String? pendingInviteToken,
+    bool? isLoading,
+  }) {
+    return FamilyState(
+      familyId: familyId ?? this.familyId,
+      members: members ?? this.members,
+      pendingInviteToken: pendingInviteToken ?? this.pendingInviteToken,
+      isLoading: isLoading ?? this.isLoading,
+    );
+  }
+}
+
+class FamilyNotifier extends StateNotifier<FamilyState> {
+  FamilyNotifier() : super(const FamilyState());
+
+  Future<void> loadFamily() async {
+    // TODO: Implement loading family from storage/API
+    print('Loading family data...');
+  }
+
+  void setPendingInviteToken(String token) {
+    state = state.copyWith(pendingInviteToken: token);
+  }
+
+  Future<bool> acceptInvite(String token) async {
+    state = state.copyWith(isLoading: true);
+    
+    try {
+      // TODO: Implement actual invite acceptance
+      print('Accepting invite with token: $token');
+      
+      // Simulate API call
+      await Future.delayed(const Duration(seconds: 1));
+      
+      // For now, just clear the pending token
+      state = state.copyWith(
+        pendingInviteToken: null,
+        isLoading: false,
+      );
+      
+      return true; // Success
+    } catch (e) {
+      print('Error accepting invite: $e');
+      state = state.copyWith(isLoading: false);
+      return false; // Failure
+    }
+  }
+
+  Future<void> createInvite() async {
+    // TODO: Implement invite creation
+    print('Creating family invite...');
+  }
+
+  Future<void> removeMember(String deviceId) async {
+    // TODO: Implement member removal
+    print('Removing member: $deviceId');
+  }
+}
+
+final familyProvider = StateNotifierProvider<FamilyNotifier, FamilyState>((ref) {
+  return FamilyNotifier();
 });
\ No newline at end of file
diff --git a/petitpal/lib/providers/theme_provider.dart b/petitpal/lib/providers/theme_provider.dart
index fbe03dc..5dece46 100644
--- a/petitpal/lib/providers/theme_provider.dart
+++ b/petitpal/lib/providers/theme_provider.dart
@@ -1,235 +1,90 @@
 import 'package:flutter/material.dart';
 import 'package:flutter_riverpod/flutter_riverpod.dart';
 import 'package:shared_preferences/shared_preferences.dart';
-import '../config/internal_config.dart';
 
-// Theme state model
 class ThemeState {
   final ThemeData currentTheme;
   final String themeId;
-  final bool isLoading;
-  final String? error;
+  final bool isDarkMode;
 
-  ThemeState({
+  const ThemeState({
     required this.currentTheme,
-    this.themeId = 'modern_light',
-    this.isLoading = false,
-    this.error,
+    required this.themeId,
+    required this.isDarkMode,
   });
 
   ThemeState copyWith({
     ThemeData? currentTheme,
     String? themeId,
-    bool? isLoading,
-    String? error,
+    bool? isDarkMode,
   }) {
     return ThemeState(
       currentTheme: currentTheme ?? this.currentTheme,
       themeId: themeId ?? this.themeId,
-      isLoading: isLoading ?? this.isLoading,
-      error: error ?? this.error,
+      isDarkMode: isDarkMode ?? this.isDarkMode,
     );
   }
 }
 
-// Theme provider notifier
 class ThemeNotifier extends StateNotifier<ThemeState> {
-  ThemeNotifier() : super(ThemeState(currentTheme: _getDefaultTheme()));
+  ThemeNotifier() : super(ThemeState(
+    currentTheme: _getDefaultTheme(),
+    themeId: 'modern_light',
+    isDarkMode: false,
+  ));
+
+  static ThemeData _getDefaultTheme() {
+    return ThemeData(
+      useMaterial3: true,
+      colorScheme: ColorScheme.fromSeed(seedColor: Colors.blue),
+    );
+  }
 
-  SharedPreferences? _prefs;
+  static ThemeData _getDarkTheme() {
+    return ThemeData(
+      useMaterial3: true,
+      colorScheme: ColorScheme.fromSeed(
+        seedColor: Colors.blue,
+        brightness: Brightness.dark,
+      ),
+    );
+  }
 
-  // Load saved theme
   Future<void> loadTheme() async {
-    state = state.copyWith(isLoading: true);
-
     try {
-      _prefs = await SharedPreferences.getInstance();
-      final savedThemeId = _prefs?.getString(InternalConfig.storageKeySelectedTheme) ?? 
-                          InternalConfig.defaultThemeId;
+      final prefs = await SharedPreferences.getInstance();
+      final themeId = prefs.getString('theme_id') ?? 'modern_light';
+      final isDarkMode = prefs.getBool('is_dark_mode') ?? false;
       
-      final theme = _getThemeById(savedThemeId);
-      state = state.copyWith(
-        currentTheme: theme,
-        themeId: savedThemeId,
-        isLoading: false,
+      state = ThemeState(
+        currentTheme: isDarkMode ? _getDarkTheme() : _getDefaultTheme(),
+        themeId: themeId,
+        isDarkMode: isDarkMode,
       );
     } catch (e) {
-      state = state.copyWith(
-        isLoading: false,
-        error: 'Failed to load theme: ${e.toString()}',
-      );
+      print('Error loading theme: $e');
     }
   }
 
-  // Set new theme
   Future<void> setTheme(String themeId) async {
     try {
-      final theme = _getThemeById(themeId);
-      await _prefs?.setString(InternalConfig.storageKeySelectedTheme, themeId);
+      final prefs = await SharedPreferences.getInstance();
+      await prefs.setString('theme_id', themeId);
+      
+      final isDarkMode = themeId.contains('dark');
+      await prefs.setBool('is_dark_mode', isDarkMode);
       
-      state = state.copyWith(
-        currentTheme: theme,
+      state = ThemeState(
+        currentTheme: isDarkMode ? _getDarkTheme() : _getDefaultTheme(),
         themeId: themeId,
-        error: null,
+        isDarkMode: isDarkMode,
       );
     } catch (e) {
-      state = state.copyWith(
-        error: 'Failed to set theme: ${e.toString()}',
-      );
-    }
-  }
-
-  // Get theme by ID
-  static ThemeData _getThemeById(String themeId) {
-    switch (themeId) {
-      case 'modern_light':
-        return _modernLightTheme;
-      case 'modern_dark':
-        return _modernDarkTheme;
-      case 'high_contrast_light':
-        return _highContrastLightTheme;
-      case 'high_contrast_dark':
-        return _highContrastDarkTheme;
-      default:
-        return _getDefaultTheme();
+      print('Error setting theme: $e');
     }
   }
-
-  static ThemeData _getDefaultTheme() => _modernLightTheme;
-
-  // Clear error
-  void clearError() {
-    state = state.copyWith(error: null);
-  }
 }
 
-// Theme definitions
-final _modernLightTheme = ThemeData(
-  useMaterial3: true,
-  colorScheme: ColorScheme.fromSeed(
-    seedColor: const Color(0xFF6750A4),
-    brightness: Brightness.light,
-  ),
-  textTheme: const TextTheme(
-    displayLarge: TextStyle(fontSize: 32, fontWeight: FontWeight.bold),
-    displayMedium: TextStyle(fontSize: 28, fontWeight: FontWeight.bold),
-    displaySmall: TextStyle(fontSize: 24, fontWeight: FontWeight.bold),
-    headlineLarge: TextStyle(fontSize: 22, fontWeight: FontWeight.w600),
-    headlineMedium: TextStyle(fontSize: 20, fontWeight: FontWeight.w600),
-    headlineSmall: TextStyle(fontSize: 18, fontWeight: FontWeight.w600),
-    bodyLarge: TextStyle(fontSize: 18, fontWeight: FontWeight.normal),
-    bodyMedium: TextStyle(fontSize: 16, fontWeight: FontWeight.normal),
-    bodySmall: TextStyle(fontSize: 14, fontWeight: FontWeight.normal),
-  ),
-  elevatedButtonTheme: ElevatedButtonThemeData(
-    style: ElevatedButton.styleFrom(
-      minimumSize: const Size(88, 88), // Large touch targets for seniors
-      textStyle: const TextStyle(fontSize: 18, fontWeight: FontWeight.w600),
-      shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(16)),
-    ),
-  ),
-);
-
-final _modernDarkTheme = ThemeData(
-  useMaterial3: true,
-  colorScheme: ColorScheme.fromSeed(
-    seedColor: const Color(0xFF6750A4),
-    brightness: Brightness.dark,
-  ),
-  textTheme: const TextTheme(
-    displayLarge: TextStyle(fontSize: 32, fontWeight: FontWeight.bold),
-    displayMedium: TextStyle(fontSize: 28, fontWeight: FontWeight.bold),
-    displaySmall: TextStyle(fontSize: 24, fontWeight: FontWeight.bold),
-    headlineLarge: TextStyle(fontSize: 22, fontWeight: FontWeight.w600),
-    headlineMedium: TextStyle(fontSize: 20, fontWeight: FontWeight.w600),
-    headlineSmall: TextStyle(fontSize: 18, fontWeight: FontWeight.w600),
-    bodyLarge: TextStyle(fontSize: 18, fontWeight: FontWeight.normal),
-    bodyMedium: TextStyle(fontSize: 16, fontWeight: FontWeight.normal),
-    bodySmall: TextStyle(fontSize: 14, fontWeight: FontWeight.normal),
-  ),
-  elevatedButtonTheme: ElevatedButtonThemeData(
-    style: ElevatedButton.styleFrom(
-      minimumSize: const Size(88, 88), // Large touch targets for seniors
-      textStyle: const TextStyle(fontSize: 18, fontWeight: FontWeight.w600),
-      shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(16)),
-    ),
-  ),
-);
-
-final _highContrastLightTheme = ThemeData(
-  useMaterial3: true,
-  colorScheme: const ColorScheme.light(
-    primary: Color(0xFF000000),
-    onPrimary: Color(0xFFFFFFFF),
-    surface: Color(0xFFFFFFFF),
-    onSurface: Color(0xFF000000),
-    background: Color(0xFFFFFFFF),
-    onBackground: Color(0xFF000000),
-  ),
-  textTheme: const TextTheme(
-    displayLarge: TextStyle(fontSize: 36, fontWeight: FontWeight.bold, color: Color(0xFF000000)),
-    displayMedium: TextStyle(fontSize: 32, fontWeight: FontWeight.bold, color: Color(0xFF000000)),
-    displaySmall: TextStyle(fontSize: 28, fontWeight: FontWeight.bold, color: Color(0xFF000000)),
-    headlineLarge: TextStyle(fontSize: 26, fontWeight: FontWeight.w600, color: Color(0xFF000000)),
-    headlineMedium: TextStyle(fontSize: 24, fontWeight: FontWeight.w600, color: Color(0xFF000000)),
-    headlineSmall: TextStyle(fontSize: 22, fontWeight: FontWeight.w600, color: Color(0xFF000000)),
-    bodyLarge: TextStyle(fontSize: 22, fontWeight: FontWeight.normal, color: Color(0xFF000000)),
-    bodyMedium: TextStyle(fontSize: 20, fontWeight: FontWeight.normal, color: Color(0xFF000000)),
-    bodySmall: TextStyle(fontSize: 18, fontWeight: FontWeight.normal, color: Color(0xFF000000)),
-  ),
-  elevatedButtonTheme: ElevatedButtonThemeData(
-    style: ElevatedButton.styleFrom(
-      minimumSize: const Size(100, 100), // Extra large for high contrast
-      textStyle: const TextStyle(fontSize: 22, fontWeight: FontWeight.bold),
-      shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(16)),
-      backgroundColor: const Color(0xFF000000),
-      foregroundColor: const Color(0xFFFFFFFF),
-    ),
-  ),
-);
-
-final _highContrastDarkTheme = ThemeData(
-  useMaterial3: true,
-  colorScheme: const ColorScheme.dark(
-    primary: Color(0xFFFFFFFF),
-    onPrimary: Color(0xFF000000),
-    surface: Color(0xFF000000),
-    onSurface: Color(0xFFFFFFFF),
-    background: Color(0xFF000000),
-    onBackground: Color(0xFFFFFFFF),
-  ),
-  textTheme: const TextTheme(
-    displayLarge: TextStyle(fontSize: 36, fontWeight: FontWeight.bold, color: Color(0xFFFFFFFF)),
-    displayMedium: TextStyle(fontSize: 32, fontWeight: FontWeight.bold, color: Color(0xFFFFFFFF)),
-    displaySmall: TextStyle(fontSize: 28, fontWeight: FontWeight.bold, color: Color(0xFFFFFFFF)),
-    headlineLarge: TextStyle(fontSize: 26, fontWeight: FontWeight.w600, color: Color(0xFFFFFFFF)),
-    headlineMedium: TextStyle(fontSize: 24, fontWeight: FontWeight.w600, color: Color(0xFFFFFFFF)),
-    headlineSmall: TextStyle(fontSize: 22, fontWeight: FontWeight.w600, color: Color(0xFFFFFFFF)),
-    bodyLarge: TextStyle(fontSize: 22, fontWeight: FontWeight.normal, color: Color(0xFFFFFFFF)),
-    bodyMedium: TextStyle(fontSize: 20, fontWeight: FontWeight.normal, color: Color(0xFFFFFFFF)),
-    bodySmall: TextStyle(fontSize: 18, fontWeight: FontWeight.normal, color: Color(0xFFFFFFFF)),
-  ),
-  elevatedButtonTheme: ElevatedButtonThemeData(
-    style: ElevatedButton.styleFrom(
-      minimumSize: const Size(100, 100), // Extra large for high contrast
-      textStyle: const TextStyle(fontSize: 22, fontWeight: FontWeight.bold),
-      shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(16)),
-      backgroundColor: const Color(0xFFFFFFFF),
-      foregroundColor: const Color(0xFF000000),
-    ),
-  ),
-);
-
-// Provider definition
 final themeProvider = StateNotifierProvider<ThemeNotifier, ThemeState>((ref) {
   return ThemeNotifier();
 });
-
-// Convenience providers
-final currentThemeProvider = Provider<ThemeData>((ref) {
-  return ref.watch(themeProvider).currentTheme;
-});
-
-final currentThemeIdProvider = Provider<String>((ref) {
-  return ref.watch(themeProvider).themeId;
-});
diff --git a/petitpal/lib/providers/voice_provider.dart b/petitpal/lib/providers/voice_provider.dart
index 66fd4cd..62b96fb 100644
--- a/petitpal/lib/providers/voice_provider.dart
+++ b/petitpal/lib/providers/voice_provider.dart
@@ -1,328 +1,104 @@
-import 'package:flutter/foundation.dart';
 import 'package:flutter_riverpod/flutter_riverpod.dart';
-import 'package:speech_to_text/speech_to_text.dart';
-import 'package:flutter_tts/flutter_tts.dart';
-import 'package:permission_handler/permission_handler.dart';
-import '../core/services/analytics_service.dart' as analytics;
+import 'package:flutter_riverpod/flutter_riverpod.dart';
+
+enum VoiceState {
+  idle,
+  listening,
+  processing,
+  speaking,
+  error,
+}
 
-// Voice state model
-class VoiceState {
+class VoiceProviderState {
+  final VoiceState state;
+  final String recognizedText;
+  final String lastError;
   final bool isListening;
-  final bool isProcessing;
   final bool isSpeaking;
-  final String recognizedText;
-  final String? error;
-  final bool hasPermission;
-  final bool isInitialized;
 
-  VoiceState({
+  const VoiceProviderState({
+    this.state = VoiceState.idle,
+    this.recognizedText = '',
+    this.lastError = '',
     this.isListening = false,
-    this.isProcessing = false,
     this.isSpeaking = false,
-    this.recognizedText = '',
-    this.error,
-    this.hasPermission = false,
-    this.isInitialized = false,
   });
 
-  VoiceState copyWith({
+  VoiceProviderState copyWith({
+    VoiceState? state,
+    String? recognizedText,
+    String? lastError,
     bool? isListening,
-    bool? isProcessing,
     bool? isSpeaking,
-    String? recognizedText,
-    String? error,
-    bool? hasPermission,
-    bool? isInitialized,
   }) {
-    return VoiceState(
+    return VoiceProviderState(
+      state: state ?? this.state,
+      recognizedText: recognizedText ?? this.recognizedText,
+      lastError: lastError ?? this.lastError,
       isListening: isListening ?? this.isListening,
-      isProcessing: isProcessing ?? this.isProcessing,
       isSpeaking: isSpeaking ?? this.isSpeaking,
-      recognizedText: recognizedText ?? this.recognizedText,
-      error: error ?? this.error,
-      hasPermission: hasPermission ?? this.hasPermission,
-      isInitialized: isInitialized ?? this.isInitialized,
     );
   }
 }
 
-// Voice provider notifier
-class VoiceNotifier extends StateNotifier<VoiceState> {
-  VoiceNotifier() : super(VoiceState());
-
-  final SpeechToText _speechToText = SpeechToText();
-  final FlutterTts _flutterTts = FlutterTts();
-  bool _isInitialized = false;
-
-  // Initialize voice services
-  Future<void> initializeVoice() async {
-    if (_isInitialized) return;
+class VoiceNotifier extends StateNotifier<VoiceProviderState> {
+  VoiceNotifier() : super(const VoiceProviderState());
 
-    try {
-      // Request microphone permission
-      final permissionStatus = await Permission.microphone.request();
-      final hasPermission = permissionStatus == PermissionStatus.granted;
-
-      if (!hasPermission) {
-        state = state.copyWith(
-          error: 'Microphone permission is required for voice features',
-          hasPermission: false,
-        );
-        return;
-      }
-
-      // Initialize speech to text
-      final speechAvailable = await _speechToText.initialize(
-        onError: (error) {
-          if (kDebugMode) {
-            print('❌ Speech recognition error: ${error.errorMsg}');
-          }
-          state = state.copyWith(
-            error: 'Speech recognition error: ${error.errorMsg}',
-            isListening: false,
-          );
-          analytics.AnalyticsService().trackSpeechRecognitionError(error.errorMsg);
-        },
-        onStatus: (status) {
-          if (kDebugMode) {
-            print('🗣️ Speech status: $status');
-          }
-        },
-      );
-
-      if (!speechAvailable) {
-        state = state.copyWith(
-          error: 'Speech recognition not available on this device',
-          hasPermission: hasPermission,
-        );
-        return;
-      }
-
-      // Initialize text to speech
-      await _flutterTts.setLanguage('en-US');
-      await _flutterTts.setSpeechRate(0.5); // Slower rate for seniors
-      await _flutterTts.setVolume(1.0);
-      await _flutterTts.setPitch(1.0);
-
-      // Set TTS callbacks
-      _flutterTts.setStartHandler(() {
-        state = state.copyWith(isSpeaking: true);
-      });
-
-      _flutterTts.setCompletionHandler(() {
-        state = state.copyWith(isSpeaking: false);
-      });
-
-      _flutterTts.setErrorHandler((msg) {
-        if (kDebugMode) {
-          print('❌ TTS error: $msg');
-        }
-        state = state.copyWith(
-          error: 'Text-to-speech error: $msg',
-          isSpeaking: false,
-        );
-      });
-
-      _isInitialized = true;
-      state = state.copyWith(
-        hasPermission: hasPermission,
-        isInitialized: true,
-        error: null,
-      );
-
-      if (kDebugMode) {
-        print('✅ Voice services initialized successfully');
-      }
-
-    } catch (e) {
-      state = state.copyWith(
-        error: 'Failed to initialize voice services: ${e.toString()}',
-        hasPermission: false,
-        isInitialized: false,
-      );
-      
-      if (kDebugMode) {
-        print('❌ Voice initialization failed: $e');
-      }
-    }
+  void startListening() {
+    state = state.copyWith(
+      state: VoiceState.listening,
+      isListening: true,
+      recognizedText: '',
+      lastError: '',
+    );
   }
 
-  // Start listening for speech
-  Future<void> startListening() async {
-    if (!state.isInitialized || !state.hasPermission) {
-      await initializeVoice();
-      if (!state.isInitialized) return;
-    }
-
-    if (state.isListening) return;
-
-    try {
-      state = state.copyWith(
-        isListening: true,
-        recognizedText: '',
-        error: null,
-      );
-
-      await _speechToText.listen(
-        onResult: (result) {
-          state = state.copyWith(
-            recognizedText: result.recognizedWords,
-          );
-          
-          if (result.finalResult) {
-            _handleSpeechResult(result.recognizedWords);
-          }
-        },
-        listenFor: const Duration(seconds: 30),
-        pauseFor: const Duration(seconds: 3),
-        partialResults: true,
-        localeId: 'en_US',
-        onSoundLevelChange: (level) {
-          // Could be used for visual feedback
-        },
-      );
-
-      // Track analytics
-      analytics.AnalyticsService().trackVoiceInteractionStart();
-
-    } catch (e) {
-      state = state.copyWith(
-        isListening: false,
-        error: 'Failed to start listening: ${e.toString()}',
-      );
-      
-      if (kDebugMode) {
-        print('❌ Failed to start listening: $e');
-      }
-    }
+  void stopListening() {
+    state = state.copyWith(
+      state: VoiceState.idle,
+      isListening: false,
+    );
   }
 
-  // Stop listening
-  Future<void> stopListening() async {
-    if (!state.isListening) return;
-
-    try {
-      await _speechToText.stop();
-      state = state.copyWith(isListening: false);
-      
-      if (kDebugMode) {
-        print('🛑 Stopped listening');
-      }
-    } catch (e) {
-      state = state.copyWith(
-        isListening: false,
-        error: 'Failed to stop listening: ${e.toString()}',
-      );
-    }
+  void updateRecognizedText(String text) {
+    state = state.copyWith(recognizedText: text);
   }
 
-  // Handle speech recognition result
-  void _handleSpeechResult(String recognizedText) async {
-    if (recognizedText.trim().isEmpty) return;
-
+  void setProcessing() {
     state = state.copyWith(
+      state: VoiceState.processing,
       isListening: false,
-      isProcessing: true,
     );
-
-    try {
-      // TODO: Process the recognized text with LLM
-      // For now, just echo back the text
-      final response = 'You said: $recognizedText';
-      
-      await speak(response);
-      
-      // Track analytics
-      analytics.AnalyticsService().trackQuestionAsked('echo', recognizedText.length);
-      analytics.AnalyticsService().trackVoiceInteractionComplete(true);
-      
-      state = state.copyWith(isProcessing: false);
-      
-    } catch (e) {
-      state = state.copyWith(
-        isProcessing: false,
-        error: 'Failed to process speech: ${e.toString()}',
-      );
-      
-      analytics.AnalyticsService().trackVoiceInteractionComplete(false);
-      
-      if (kDebugMode) {
-        print('❌ Failed to process speech: $e');
-      }
-    }
   }
 
-  // Speak text using TTS
-  Future<void> speak(String text) async {
-    if (!state.isInitialized) {
-      await initializeVoice();
-      if (!state.isInitialized) return;
-    }
-
-    try {
-      // Stop any current speech
-      await _flutterTts.stop();
-      
-      // Speak the text
-      await _flutterTts.speak(text);
-      
-      // Track analytics
-      analytics.AnalyticsService().trackTtsSpoken('flutter_tts', text.length);
-      
-      if (kDebugMode) {
-        print('🔊 Speaking: $text');
-      }
-      
-    } catch (e) {
-      state = state.copyWith(
-        error: 'Failed to speak: ${e.toString()}',
-        isSpeaking: false,
-      );
-      
-      if (kDebugMode) {
-        print('❌ Failed to speak: $e');
-      }
-    }
+  void startSpeaking() {
+    state = state.copyWith(
+      state: VoiceState.speaking,
+      isSpeaking: true,
+    );
   }
 
-  // Stop speaking
-  Future<void> stopSpeaking() async {
-    try {
-      await _flutterTts.stop();
-      state = state.copyWith(isSpeaking: false);
-    } catch (e) {
-      if (kDebugMode) {
-        print('❌ Failed to stop speaking: $e');
-      }
-    }
+  void stopSpeaking() {
+    state = state.copyWith(
+      state: VoiceState.idle,
+      isSpeaking: false,
+    );
   }
 
-  // Clear error
-  void clearError() {
-    state = state.copyWith(error: null);
+  void setError(String error) {
+    state = state.copyWith(
+      state: VoiceState.error,
+      lastError: error,
+      isListening: false,
+      isSpeaking: false,
+    );
   }
 
-  // Dispose resources
-  void dispose() {
-    _speechToText.cancel();
-    _flutterTts.stop();
+  void reset() {
+    state = const VoiceProviderState();
   }
 }
 
-// Provider definition
-final voiceProvider = StateNotifierProvider<VoiceNotifier, VoiceState>((ref) {
+final voiceProvider = StateNotifierProvider<VoiceNotifier, VoiceProviderState>((ref) {
   return VoiceNotifier();
 });
-
-// Convenience providers
-final isListeningProvider = Provider<bool>((ref) {
-  return ref.watch(voiceProvider).isListening;
-});
-
-final recognizedTextProvider = Provider<String>((ref) {
-  return ref.watch(voiceProvider).recognizedText;
-});
-
-final hasVoicePermissionProvider = Provider<bool>((ref) {
-  return ref.watch(voiceProvider).hasPermission;
-});
diff --git a/petitpal/lib/router/app_router.dart.txt b/petitpal/lib/router/app_router.dart.txt
index 4af0b03..d350ebd 100644
--- a/petitpal/lib/router/app_router.dart.txt
+++ b/petitpal/lib/router/app_router.dart.txt
@@ -1,730 +1,730 @@
-// ============================================
-// FILE: /app/lib/router/app_router.dart
-// ============================================
-
-import 'package:flutter/material.dart';
-import 'package:flutter_riverpod/flutter_riverpod.dart';
-import 'package:go_router/go_router.dart';
-import '../features/home/home_screen.dart';
-import '../features/onboarding/onboarding_screen.dart';
-import '../features/theme/theme_preview_screen.dart';
-import '../features/providers/providers_screen.dart';
-import '../features/family/family_screen.dart';
-import '../providers/app_provider.dart';
-
-final appRouterProvider = Provider<GoRouter>((ref) {
-  final isFirstRun = ref.watch(isFirstRunProvider);
-  
-  return GoRouter(
-    initialLocation: isFirstRun ? '/onboarding' : '/home',
-    routes: [
-      GoRoute(
-        path: '/home',
-        builder: (context, state) => const HomeScreen(),
-      ),
-      GoRoute(
-        path: '/onboarding',
-        builder: (context, state) => const OnboardingScreen(),
-      ),
-      GoRoute(
-        path: '/themes',
-        builder: (context, state) => const ThemePreviewScreen(),
-      ),
-      GoRoute(
-        path: '/providers',
-        builder: (context, state) => const ProvidersScreen(),
-      ),
-      GoRoute(
-        path: '/family',
-        builder: (context, state) => const FamilyScreen(),
-      ),
-      GoRoute(
-        path: '/invite/:token',
-        builder: (context, state) {
-          final token = state.pathParameters['token']!;
-          return FamilyScreen(inviteToken: token);
-        },
-      ),
-    ],
-    errorBuilder: (context, state) => Scaffold(
-      body: Center(
-        child: Text('Page not found: ${state.error}'),
-      ),
-    ),
-  );
-});
-
-// ============================================
-// FILE: /app/lib/core/widgets/speech_preview_widget.dart
-// ============================================
-
-import 'package:flutter/material.dart';
-import 'package:flutter_animate/flutter_animate.dart';
-import '../../config/internal_config.dart';
-import '../../config/strings_config.dart';
-
-class SpeechPreviewWidget extends StatelessWidget {
-  final String text;
-  final bool isListening;
-  final double height;
-  
-  const SpeechPreviewWidget({
-    Key? key,
-    required this.text,
-    required this.isListening,
-    this.height = 120,
-  }) : super(key: key);
-  
-  @override
-  Widget build(BuildContext context) {
-    final theme = Theme.of(context);
-    final isDarkMode = theme.brightness == Brightness.dark;
-    final isHighContrast = _isHighContrastTheme(theme);
-    
-    return AnimatedContainer(
-      duration: InternalConfig.animationDuration,
-      height: height,
-      decoration: BoxDecoration(
-        color: theme.cardTheme.color ?? theme.colorScheme.surface,
-        borderRadius: BorderRadius.circular(16),
-        border: Border.all(
-          color: isListening 
-              ? theme.colorScheme.primary 
-              : Colors.transparent,
-          width: isHighContrast ? 3 : 2,
-        ),
-        boxShadow: isListening ? [
-          BoxShadow(
-            color: theme.colorScheme.primary.withOpacity(0.3),
-            blurRadius: 10,
-            spreadRadius: 2,
-          ),
-        ] : [],
-      ),
-      child: Padding(
-        padding: const EdgeInsets.all(16.0),
-        child: SingleChildScrollView(
-          child: Column(
-            crossAxisAlignment: CrossAxisAlignment.start,
-            children: [
-              if (text.isEmpty && isListening)
-                _buildListeningIndicator(theme)
-              else if (text.isEmpty)
-                Text(
-                  'Tap the button to start talking',
-                  style: theme.textTheme.bodyLarge?.copyWith(
-                    color: theme.textTheme.bodySmall?.color,
-                    fontSize: _getTextSize(isHighContrast),
-                  ),
-                )
-              else
-                Text(
-                  text,
-                  style: theme.textTheme.bodyLarge?.copyWith(
-                    fontSize: _getTextSize(isHighContrast),
-                    fontWeight: FontWeight.w500,
-                  ),
-                ),
-            ],
-          ),
-        ),
-      ),
-    ).animate(target: isListening ? 1.0 : 0.0)
-      .scale(
-        begin: const Offset(1, 1),
-        end: const Offset(1.02, 1.02),
-        duration: const Duration(seconds: 2),
-        curve: Curves.easeInOut,
-      );
-  }
-  
-  Widget _buildListeningIndicator(ThemeData theme) {
-    return Row(
-      children: [
-        Text(
-          StringsConfig.listeningText,
-          style: theme.textTheme.bodyLarge?.copyWith(
-            fontSize: _getTextSize(false),
-            fontStyle: FontStyle.italic,
-          ),
-        ),
-        const SizedBox(width: 8),
-        ..._buildAnimatedDots(theme),
-      ],
-    );
-  }
-  
-  List<Widget> _buildAnimatedDots(ThemeData theme) {
-    return List.generate(3, (index) {
-      return Container(
-        margin: const EdgeInsets.symmetric(horizontal: 2),
-        child: Container(
-          width: 8,
-          height: 8,
-          decoration: BoxDecoration(
-            color: theme.colorScheme.primary,
-            shape: BoxShape.circle,
-          ),
-        ).animate(
-          onPlay: (controller) => controller.repeat(),
-        ).scale(
-          delay: Duration(milliseconds: index * 200),
-          duration: const Duration(milliseconds: 600),
-          curve: Curves.easeInOut,
-          begin: const Offset(1, 1),
-          end: const Offset(1.5, 1.5),
-        ).then()
-          .scale(
-            duration: const Duration(milliseconds: 600),
-            curve: Curves.easeInOut,
-            begin: const Offset(1.5, 1.5),
-            end: const Offset(1, 1),
-          ),
-      );
-    }).toList();
-  }
-  
-  double _getTextSize(bool isHighContrast) {
-    return isHighContrast ? 22.0 : 18.0;
-  }
-  
-  bool _isHighContrastTheme(ThemeData theme) {
-    // Check if this is a high contrast theme based on colors
-    final backgroundColor = theme.colorScheme.background;
-    final textColor = theme.textTheme.bodyLarge?.color ?? Colors.black;
-    
-    // Pure black background with white text = high contrast dark
-    if (backgroundColor == Colors.black && textColor == Colors.white) {
-      return true;
-    }
-    
-    // Very light background with dark text = high contrast light
-    if (backgroundColor.computeLuminance() > 0.9 && 
-        textColor.computeLuminance() < 0.2) {
-      return true;
-    }
-    
-    return false;
-  }
-}
-
-// ============================================
-// FILE: /app/lib/core/widgets/primary_button.dart
-// ============================================
-
-import 'package:flutter/material.dart';
-import 'package:flutter/services.dart';
-import 'package:flutter_animate/flutter_animate.dart';
-import '../../config/internal_config.dart';
-
-class PrimaryButton extends StatefulWidget {
-  final String text;
-  final VoidCallback onPressed;
-  final bool isLoading;
-  final IconData? icon;
-  final double? width;
-  final double height;
-  final bool hapticFeedback;
-  
-  const PrimaryButton({
-    Key? key,
-    required this.text,
-    required this.onPressed,
-    this.isLoading = false,
-    this.icon,
-    this.width,
-    this.height = 56,
-    this.hapticFeedback = true,
-  }) : super(key: key);
-  
-  @override
-  State<PrimaryButton> createState() => _PrimaryButtonState();
-}
-
-class _PrimaryButtonState extends State<PrimaryButton> 
-    with SingleTickerProviderStateMixin {
-  bool _isPressed = false;
-  
-  void _handleTapDown(TapDownDetails details) {
-    if (widget.hapticFeedback) {
-      HapticFeedback.lightImpact();
-    }
-    setState(() => _isPressed = true);
-  }
-  
-  void _handleTapUp(TapUpDetails details) {
-    setState(() => _isPressed = false);
-  }
-  
-  void _handleTapCancel() {
-    setState(() => _isPressed = false);
-  }
-  
-  @override
-  Widget build(BuildContext context) {
-    final theme = Theme.of(context);
-    
-    return GestureDetector(
-      onTapDown: widget.isLoading ? null : _handleTapDown,
-      onTapUp: widget.isLoading ? null : _handleTapUp,
-      onTapCancel: _handleTapCancel,
-      onTap: widget.isLoading ? null : widget.onPressed,
-      child: AnimatedContainer(
-        duration: const Duration(milliseconds: 150),
-        width: widget.width,
-        height: widget.height,
-        transform: Matrix4.identity()
-          ..scale(_isPressed ? 0.95 : 1.0),
-        decoration: BoxDecoration(
-          gradient: LinearGradient(
-            begin: Alignment.topLeft,
-            end: Alignment.bottomRight,
-            colors: [
-              theme.colorScheme.primary,
-              theme.colorScheme.primary.withOpacity(0.8),
-            ],
-          ),
-          borderRadius: BorderRadius.circular(widget.height / 2),
-          boxShadow: [
-            BoxShadow(
-              color: theme.colorScheme.primary.withOpacity(_isPressed ? 0.2 : 0.4),
-              blurRadius: _isPressed ? 8 : 16,
-              offset: Offset(0, _isPressed ? 2 : 4),
-            ),
-          ],
-        ),
-        child: Material(
-          color: Colors.transparent,
-          child: Center(
-            child: widget.isLoading
-                ? _buildLoadingIndicator()
-                : _buildContent(theme),
-          ),
-        ),
-      ),
-    ).animate()
-      .fadeIn(duration: InternalConfig.animationDuration)
-      .scale(
-        begin: const Offset(0.8, 0.8),
-        end: const Offset(1, 1),
-        duration: InternalConfig.animationDuration,
-        curve: Curves.elasticOut,
-      );
-  }
-  
-  Widget _buildLoadingIndicator() {
-    return SizedBox(
-      width: 24,
-      height: 24,
-      child: CircularProgressIndicator(
-        strokeWidth: 2,
-        valueColor: AlwaysStoppedAnimation<Color>(Colors.white),
-      ),
-    );
-  }
-  
-  Widget _buildContent(ThemeData theme) {
-    return Row(
-      mainAxisSize: MainAxisSize.min,
-      mainAxisAlignment: MainAxisAlignment.center,
-      children: [
-        if (widget.icon != null) ...[
-          Icon(
-            widget.icon,
-            color: Colors.white,
-            size: 24,
-          ),
-          const SizedBox(width: 8),
-        ],
-        Text(
-          widget.text,
-          style: theme.textTheme.labelLarge?.copyWith(
-            color: Colors.white,
-            fontSize: 16,
-            fontWeight: FontWeight.w600,
-          ),
-        ),
-      ],
-    );
-  }
-}
-
-// ============================================
-// FILE: /app/lib/core/widgets/loading_indicator.dart
-// ============================================
-
-import 'package:flutter/material.dart';
-import 'package:flutter_animate/flutter_animate.dart';
-import '../../config/internal_config.dart';
-
-class LoadingIndicator extends StatelessWidget {
-  final String? message;
-  final double size;
-  
-  const LoadingIndicator({
-    Key? key,
-    this.message,
-    this.size = 48,
-  }) : super(key: key);
-  
-  @override
-  Widget build(BuildContext context) {
-    final theme = Theme.of(context);
-    
-    return Column(
-      mainAxisSize: MainAxisSize.min,
-      children: [
-        Container(
-          width: size,
-          height: size,
-          child: Stack(
-            children: [
-              // Outer ring
-              Container(
-                decoration: BoxDecoration(
-                  shape: BoxShape.circle,
-                  border: Border.all(
-                    color: theme.colorScheme.primary.withOpacity(0.2),
-                    width: 3,
-                  ),
-                ),
-              ),
-              // Animated gradient ring
-              Container(
-                child: CircularProgressIndicator(
-                  strokeWidth: 3,
-                  valueColor: AlwaysStoppedAnimation<Color>(
-                    theme.colorScheme.primary,
-                  ),
-                ),
-              ).animate(
-                onPlay: (controller) => controller.repeat(),
-              ).rotate(
-                duration: const Duration(seconds: 2),
-                curve: Curves.linear,
-              ),
-              // Center pulse
-              Center(
-                child: Container(
-                  width: size * 0.3,
-                  height: size * 0.3,
-                  decoration: BoxDecoration(
-                    color: theme.colorScheme.primary,
-                    shape: BoxShape.circle,
-                  ),
-                ).animate(
-                  onPlay: (controller) => controller.repeat(),
-                ).scale(
-                  duration: const Duration(seconds: 1),
-                  curve: Curves.easeInOut,
-                  begin: const Offset(0.8, 0.8),
-                  end: const Offset(1.2, 1.2),
-                ).then()
-                  .scale(
-                    duration: const Duration(seconds: 1),
-                    curve: Curves.easeInOut,
-                    begin: const Offset(1.2, 1.2),
-                    end: const Offset(0.8, 0.8),
-                  ),
-              ),
-            ],
-          ),
-        ),
-        if (message != null) ...[
-          const SizedBox(height: 16),
-          Text(
-            message!,
-            style: theme.textTheme.bodyMedium,
-            textAlign: TextAlign.center,
-          ).animate()
-            .fadeIn(delay: const Duration(milliseconds: 300)),
-        ],
-      ],
-    );
-  }
-}
-
-// ============================================
-// FILE: /app/lib/core/utils/encryption_utils.dart
-// ============================================
-
-import 'dart:convert';
-import 'dart:typed_data';
-import 'package:crypto/crypto.dart';
-import 'dart:math';
-import '../../config/internal_config.dart';
-
-class EncryptionUtils {
-  // Generate random salt
-  static Uint8List generateSalt() {
-    final random = Random.secure();
-    final salt = Uint8List(InternalConfig.saltLength);
-    for (int i = 0; i < salt.length; i++) {
-      salt[i] = random.nextInt(256);
-    }
-    return salt;
-  }
-  
-  // Generate random nonce for AES-GCM
-  static Uint8List generateNonce() {
-    final random = Random.secure();
-    final nonce = Uint8List(InternalConfig.nonceLength);
-    for (int i = 0; i < nonce.length; i++) {
-      nonce[i] = random.nextInt(256);
-    }
-    return nonce;
-  }
-  
-  // Derive key using PBKDF2
-  static Uint8List deriveKey(String password, Uint8List salt) {
-    // This is a simplified version - in production, use a proper PBKDF2 implementation
-    // You would typically use a package like pointycastle for this
-    final hmac = Hmac(sha256, utf8.encode(password));
-    final digest = hmac.convert(salt);
-    return Uint8List.fromList(digest.bytes);
-  }
-  
-  // Encrypt data (simplified - use proper AES-GCM in production)
-  static Map<String, String> encrypt(String plaintext, String password) {
-    final salt = generateSalt();
-    final nonce = generateNonce();
-    final key = deriveKey(password, salt);
-    
-    // This is a placeholder - implement proper AES-GCM encryption
-    // In production, use a package like encrypt or pointycastle
-    final encrypted = base64.encode(utf8.encode(plaintext));
-    
-    return {
-      'ciphertext': encrypted,
-      'salt': base64.encode(salt),
-      'nonce': base64.encode(nonce),
-      'algorithm': 'AES-GCM-256',
-      'kdf': 'PBKDF2-HMAC-SHA256',
-      'iterations': InternalConfig.pbkdf2Iterations.toString(),
-    };
-  }
-  
-  // Decrypt data (simplified - use proper AES-GCM in production)
-  static String decrypt(Map<String, String> encryptedData, String password) {
-    final salt = base64.decode(encryptedData['salt']!);
-    final nonce = base64.decode(encryptedData['nonce']!);
-    final ciphertext = encryptedData['ciphertext']!;
-    
-    final key = deriveKey(password, salt);
-    
-    // This is a placeholder - implement proper AES-GCM decryption
-    // In production, use a package like encrypt or pointycastle
-    final decrypted = utf8.decode(base64.decode(ciphertext));
-    
-    return decrypted;
-  }
-}
-
-// ============================================
-// FILE: /app/lib/core/services/api_service.dart
-// ============================================
-
-import 'dart:convert';
-import 'package:dio/dio.dart';
-import '../../config/internal_config.dart';
-
-class ApiService {
-  late final Dio _dio;
-  static final ApiService _instance = ApiService._internal();
-  
-  factory ApiService() => _instance;
-  
-  ApiService._internal() {
-    _dio = Dio(BaseOptions(
-      baseUrl: InternalConfig.workerBaseUrl,
-      connectTimeout: const Duration(seconds: 30),
-      receiveTimeout: const Duration(seconds: 30),
-      headers: {
-        'Content-Type': 'application/json',
-      },
-    ));
-    
-    // Add interceptors for logging in debug mode
-    if (InternalConfig.showDebugMenu) {
-      _dio.interceptors.add(LogInterceptor(
-        requestBody: true,
-        responseBody: true,
-      ));
-    }
-  }
-  
-  // Chat with LLM
-  Future<ChatResponse> chat({
-    required String message,
-    required String provider,
-    required String deviceId,
-  }) async {
-    try {
-      final response = await _dio.post('/api/chat', data: {
-        'message': message,
-        'provider': provider,
-        'deviceId': deviceId,
-      });
-      
-      return ChatResponse.fromJson(response.data);
-    } on DioException catch (e) {
-      if (e.response?.statusCode == 401) {
-        throw Exception('Please add your API key for $provider');
-      }
-      throw Exception('Failed to send message: ${e.message}');
-    }
-  }
-  
-  // Save encrypted keys
-  Future<void> saveKeys({
-    required String deviceId,
-    required Map<String, String> encryptedKeys,
-  }) async {
-    try {
-      await _dio.post('/api/keys/save', data: {
-        'deviceId': deviceId,
-        'encryptedKeys': encryptedKeys,
-      });
-    } catch (e) {
-      throw Exception('Failed to save keys: $e');
-    }
-  }
-  
-  // Get encrypted keys
-  Future<Map<String, String>?> getKeys(String deviceId) async {
-    try {
-      final response = await _dio.get('/api/keys/get', queryParameters: {
-        'deviceId': deviceId,
-      });
-      
-      return Map<String, String>.from(response.data);
-    } on DioException catch (e) {
-      if (e.response?.statusCode == 404) {
-        return null;
-      }
-      throw Exception('Failed to get keys: ${e.message}');
-    }
-  }
-  
-  // Create family invite
-  Future<FamilyInvite> createInvite({
-    required String deviceId,
-    required String memberName,
-  }) async {
-    try {
-      final response = await _dio.post('/api/family/create_invite', data: {
-        'deviceId': deviceId,
-        'memberName': memberName,
-      });
-      
-      return FamilyInvite.fromJson(response.data);
-    } catch (e) {
-      throw Exception('Failed to create invite: $e');
-    }
-  }
-  
-  // Accept family invite
-  Future<void> acceptInvite({
-    required String token,
-    required String deviceId,
-    Map<String, dynamic>? deviceInfo,
-  }) async {
-    try {
-      await _dio.post('/api/family/accept_invite', data: {
-        'token': token,
-        'deviceId': deviceId,
-        'deviceInfo': deviceInfo,
-      });
-    } catch (e) {
-      throw Exception('Failed to accept invite: $e');
-    }
-  }
-  
-  // Get family members
-  Future<List<FamilyMemberData>> getFamilyMembers(String familyId) async {
-    try {
-      final response = await _dio.get('/api/family/list', queryParameters: {
-        'familyId': familyId,
-      });
-      
-      final data = response.data;
-      final members = (data['members'] as List)
-          .map((m) => FamilyMemberData.fromJson(m))
-          .toList();
-      
-      return members;
-    } catch (e) {
-      throw Exception('Failed to get family members: $e');
-    }
-  }
-}
-
-// Response models
-class ChatResponse {
-  final String summary;
-  final String fullResponse;
-  final String modelUsed;
-  final String? switchReason;
-  
-  ChatResponse({
-    required this.summary,
-    required this.fullResponse,
-    required this.modelUsed,
-    this.switchReason,
-  });
-  
-  factory ChatResponse.fromJson(Map<String, dynamic> json) {
-    return ChatResponse(
-      summary: json['summary'],
-      fullResponse: json['fullResponse'],
-      modelUsed: json['modelUsed'],
-      switchReason: json['switchReason'],
-    );
-  }
-}
-
-class FamilyInvite {
-  final String token;
-  final String familyId;
-  final String inviteLink;
-  final String expiresIn;
-  
-  FamilyInvite({
-    required this.token,
-    required this.familyId,
-    required this.inviteLink,
-    required this.expiresIn,
-  });
-  
-  factory FamilyInvite.fromJson(Map<String, dynamic> json) {
-    return FamilyInvite(
-      token: json['token'],
-      familyId: json['familyId'],
-      inviteLink: json['inviteLink'],
-      expiresIn: json['expiresIn'],
-    );
-  }
-}
-
-class FamilyMemberData {
-  final String deviceId;
-  final String name;
-  final String role;
-  final DateTime joinedAt;
-  
-  FamilyMemberData({
-    required this.deviceId,
-    required this.name,
-    required this.role,
-    required this.joinedAt,
-  });
-  
-  factory FamilyMemberData.fromJson(Map<String, dynamic> json) {
-    return FamilyMemberData(
-      deviceId: json['deviceId'],
-      name: json['name'],
-      role: json['role'],
-      joinedAt: DateTime.parse(json['joinedAt']),
-    );
-  }
+// ============================================
+// FILE: /app/lib/router/app_router.dart
+// ============================================
+
+import 'package:flutter/material.dart';
+import 'package:flutter_riverpod/flutter_riverpod.dart';
+import 'package:go_router/go_router.dart';
+import '../features/home/home_screen.dart';
+import '../features/onboarding/onboarding_screen.dart';
+import '../features/theme/theme_preview_screen.dart';
+import '../features/providers/providers_screen.dart';
+import '../features/family/family_screen.dart';
+import '../providers/app_provider.dart';
+
+final appRouterProvider = Provider<GoRouter>((ref) {
+  final isFirstRun = ref.watch(isFirstRunProvider);
+  
+  return GoRouter(
+    initialLocation: isFirstRun ? '/onboarding' : '/home',
+    routes: [
+      GoRoute(
+        path: '/home',
+        builder: (context, state) => const HomeScreen(),
+      ),
+      GoRoute(
+        path: '/onboarding',
+        builder: (context, state) => const OnboardingScreen(),
+      ),
+      GoRoute(
+        path: '/themes',
+        builder: (context, state) => const ThemePreviewScreen(),
+      ),
+      GoRoute(
+        path: '/providers',
+        builder: (context, state) => const ProvidersScreen(),
+      ),
+      GoRoute(
+        path: '/family',
+        builder: (context, state) => const FamilyScreen(),
+      ),
+      GoRoute(
+        path: '/invite/:token',
+        builder: (context, state) {
+          final token = state.pathParameters['token']!;
+          return FamilyScreen(inviteToken: token);
+        },
+      ),
+    ],
+    errorBuilder: (context, state) => Scaffold(
+      body: Center(
+        child: Text('Page not found: ${state.error}'),
+      ),
+    ),
+  );
+});
+
+// ============================================
+// FILE: /app/lib/core/widgets/speech_preview_widget.dart
+// ============================================
+
+import 'package:flutter/material.dart';
+import 'package:flutter_animate/flutter_animate.dart';
+import '../../config/internal_config.dart';
+import '../../config/strings_config.dart';
+
+class SpeechPreviewWidget extends StatelessWidget {
+  final String text;
+  final bool isListening;
+  final double height;
+  
+  const SpeechPreviewWidget({
+    Key? key,
+    required this.text,
+    required this.isListening,
+    this.height = 120,
+  }) : super(key: key);
+  
+  @override
+  Widget build(BuildContext context) {
+    final theme = Theme.of(context);
+    final isDarkMode = theme.brightness == Brightness.dark;
+    final isHighContrast = _isHighContrastTheme(theme);
+    
+    return AnimatedContainer(
+      duration: InternalConfig.animationDuration,
+      height: height,
+      decoration: BoxDecoration(
+        color: theme.cardTheme.color ?? theme.colorScheme.surface,
+        borderRadius: BorderRadius.circular(16),
+        border: Border.all(
+          color: isListening 
+              ? theme.colorScheme.primary 
+              : Colors.transparent,
+          width: isHighContrast ? 3 : 2,
+        ),
+        boxShadow: isListening ? [
+          BoxShadow(
+            color: theme.colorScheme.primary.withOpacity(0.3),
+            blurRadius: 10,
+            spreadRadius: 2,
+          ),
+        ] : [],
+      ),
+      child: Padding(
+        padding: const EdgeInsets.all(16.0),
+        child: SingleChildScrollView(
+          child: Column(
+            crossAxisAlignment: CrossAxisAlignment.start,
+            children: [
+              if (text.isEmpty && isListening)
+                _buildListeningIndicator(theme)
+              else if (text.isEmpty)
+                Text(
+                  'Tap the button to start talking',
+                  style: theme.textTheme.bodyLarge?.copyWith(
+                    color: theme.textTheme.bodySmall?.color,
+                    fontSize: _getTextSize(isHighContrast),
+                  ),
+                )
+              else
+                Text(
+                  text,
+                  style: theme.textTheme.bodyLarge?.copyWith(
+                    fontSize: _getTextSize(isHighContrast),
+                    fontWeight: FontWeight.w500,
+                  ),
+                ),
+            ],
+          ),
+        ),
+      ),
+    ).animate(target: isListening ? 1.0 : 0.0)
+      .scale(
+        begin: const Offset(1, 1),
+        end: const Offset(1.02, 1.02),
+        duration: const Duration(seconds: 2),
+        curve: Curves.easeInOut,
+      );
+  }
+  
+  Widget _buildListeningIndicator(ThemeData theme) {
+    return Row(
+      children: [
+        Text(
+          StringsConfig.listeningText,
+          style: theme.textTheme.bodyLarge?.copyWith(
+            fontSize: _getTextSize(false),
+            fontStyle: FontStyle.italic,
+          ),
+        ),
+        const SizedBox(width: 8),
+        ..._buildAnimatedDots(theme),
+      ],
+    );
+  }
+  
+  List<Widget> _buildAnimatedDots(ThemeData theme) {
+    return List.generate(3, (index) {
+      return Container(
+        margin: const EdgeInsets.symmetric(horizontal: 2),
+        child: Container(
+          width: 8,
+          height: 8,
+          decoration: BoxDecoration(
+            color: theme.colorScheme.primary,
+            shape: BoxShape.circle,
+          ),
+        ).animate(
+          onPlay: (controller) => controller.repeat(),
+        ).scale(
+          delay: Duration(milliseconds: index * 200),
+          duration: const Duration(milliseconds: 600),
+          curve: Curves.easeInOut,
+          begin: const Offset(1, 1),
+          end: const Offset(1.5, 1.5),
+        ).then()
+          .scale(
+            duration: const Duration(milliseconds: 600),
+            curve: Curves.easeInOut,
+            begin: const Offset(1.5, 1.5),
+            end: const Offset(1, 1),
+          ),
+      );
+    }).toList();
+  }
+  
+  double _getTextSize(bool isHighContrast) {
+    return isHighContrast ? 22.0 : 18.0;
+  }
+  
+  bool _isHighContrastTheme(ThemeData theme) {
+    // Check if this is a high contrast theme based on colors
+    final backgroundColor = theme.colorScheme.background;
+    final textColor = theme.textTheme.bodyLarge?.color ?? Colors.black;
+    
+    // Pure black background with white text = high contrast dark
+    if (backgroundColor == Colors.black && textColor == Colors.white) {
+      return true;
+    }
+    
+    // Very light background with dark text = high contrast light
+    if (backgroundColor.computeLuminance() > 0.9 && 
+        textColor.computeLuminance() < 0.2) {
+      return true;
+    }
+    
+    return false;
+  }
+}
+
+// ============================================
+// FILE: /app/lib/core/widgets/primary_button.dart
+// ============================================
+
+import 'package:flutter/material.dart';
+import 'package:flutter/services.dart';
+import 'package:flutter_animate/flutter_animate.dart';
+import '../../config/internal_config.dart';
+
+class PrimaryButton extends StatefulWidget {
+  final String text;
+  final VoidCallback onPressed;
+  final bool isLoading;
+  final IconData? icon;
+  final double? width;
+  final double height;
+  final bool hapticFeedback;
+  
+  const PrimaryButton({
+    Key? key,
+    required this.text,
+    required this.onPressed,
+    this.isLoading = false,
+    this.icon,
+    this.width,
+    this.height = 56,
+    this.hapticFeedback = true,
+  }) : super(key: key);
+  
+  @override
+  State<PrimaryButton> createState() => _PrimaryButtonState();
+}
+
+class _PrimaryButtonState extends State<PrimaryButton> 
+    with SingleTickerProviderStateMixin {
+  bool _isPressed = false;
+  
+  void _handleTapDown(TapDownDetails details) {
+    if (widget.hapticFeedback) {
+      HapticFeedback.lightImpact();
+    }
+    setState(() => _isPressed = true);
+  }
+  
+  void _handleTapUp(TapUpDetails details) {
+    setState(() => _isPressed = false);
+  }
+  
+  void _handleTapCancel() {
+    setState(() => _isPressed = false);
+  }
+  
+  @override
+  Widget build(BuildContext context) {
+    final theme = Theme.of(context);
+    
+    return GestureDetector(
+      onTapDown: widget.isLoading ? null : _handleTapDown,
+      onTapUp: widget.isLoading ? null : _handleTapUp,
+      onTapCancel: _handleTapCancel,
+      onTap: widget.isLoading ? null : widget.onPressed,
+      child: AnimatedContainer(
+        duration: const Duration(milliseconds: 150),
+        width: widget.width,
+        height: widget.height,
+        transform: Matrix4.identity()
+          ..scale(_isPressed ? 0.95 : 1.0),
+        decoration: BoxDecoration(
+          gradient: LinearGradient(
+            begin: Alignment.topLeft,
+            end: Alignment.bottomRight,
+            colors: [
+              theme.colorScheme.primary,
+              theme.colorScheme.primary.withOpacity(0.8),
+            ],
+          ),
+          borderRadius: BorderRadius.circular(widget.height / 2),
+          boxShadow: [
+            BoxShadow(
+              color: theme.colorScheme.primary.withOpacity(_isPressed ? 0.2 : 0.4),
+              blurRadius: _isPressed ? 8 : 16,
+              offset: Offset(0, _isPressed ? 2 : 4),
+            ),
+          ],
+        ),
+        child: Material(
+          color: Colors.transparent,
+          child: Center(
+            child: widget.isLoading
+                ? _buildLoadingIndicator()
+                : _buildContent(theme),
+          ),
+        ),
+      ),
+    ).animate()
+      .fadeIn(duration: InternalConfig.animationDuration)
+      .scale(
+        begin: const Offset(0.8, 0.8),
+        end: const Offset(1, 1),
+        duration: InternalConfig.animationDuration,
+        curve: Curves.elasticOut,
+      );
+  }
+  
+  Widget _buildLoadingIndicator() {
+    return SizedBox(
+      width: 24,
+      height: 24,
+      child: CircularProgressIndicator(
+        strokeWidth: 2,
+        valueColor: AlwaysStoppedAnimation<Color>(Colors.white),
+      ),
+    );
+  }
+  
+  Widget _buildContent(ThemeData theme) {
+    return Row(
+      mainAxisSize: MainAxisSize.min,
+      mainAxisAlignment: MainAxisAlignment.center,
+      children: [
+        if (widget.icon != null) ...[
+          Icon(
+            widget.icon,
+            color: Colors.white,
+            size: 24,
+          ),
+          const SizedBox(width: 8),
+        ],
+        Text(
+          widget.text,
+          style: theme.textTheme.labelLarge?.copyWith(
+            color: Colors.white,
+            fontSize: 16,
+            fontWeight: FontWeight.w600,
+          ),
+        ),
+      ],
+    );
+  }
+}
+
+// ============================================
+// FILE: /app/lib/core/widgets/loading_indicator.dart
+// ============================================
+
+import 'package:flutter/material.dart';
+import 'package:flutter_animate/flutter_animate.dart';
+import '../../config/internal_config.dart';
+
+class LoadingIndicator extends StatelessWidget {
+  final String? message;
+  final double size;
+  
+  const LoadingIndicator({
+    Key? key,
+    this.message,
+    this.size = 48,
+  }) : super(key: key);
+  
+  @override
+  Widget build(BuildContext context) {
+    final theme = Theme.of(context);
+    
+    return Column(
+      mainAxisSize: MainAxisSize.min,
+      children: [
+        Container(
+          width: size,
+          height: size,
+          child: Stack(
+            children: [
+              // Outer ring
+              Container(
+                decoration: BoxDecoration(
+                  shape: BoxShape.circle,
+                  border: Border.all(
+                    color: theme.colorScheme.primary.withOpacity(0.2),
+                    width: 3,
+                  ),
+                ),
+              ),
+              // Animated gradient ring
+              Container(
+                child: CircularProgressIndicator(
+                  strokeWidth: 3,
+                  valueColor: AlwaysStoppedAnimation<Color>(
+                    theme.colorScheme.primary,
+                  ),
+                ),
+              ).animate(
+                onPlay: (controller) => controller.repeat(),
+              ).rotate(
+                duration: const Duration(seconds: 2),
+                curve: Curves.linear,
+              ),
+              // Center pulse
+              Center(
+                child: Container(
+                  width: size * 0.3,
+                  height: size * 0.3,
+                  decoration: BoxDecoration(
+                    color: theme.colorScheme.primary,
+                    shape: BoxShape.circle,
+                  ),
+                ).animate(
+                  onPlay: (controller) => controller.repeat(),
+                ).scale(
+                  duration: const Duration(seconds: 1),
+                  curve: Curves.easeInOut,
+                  begin: const Offset(0.8, 0.8),
+                  end: const Offset(1.2, 1.2),
+                ).then()
+                  .scale(
+                    duration: const Duration(seconds: 1),
+                    curve: Curves.easeInOut,
+                    begin: const Offset(1.2, 1.2),
+                    end: const Offset(0.8, 0.8),
+                  ),
+              ),
+            ],
+          ),
+        ),
+        if (message != null) ...[
+          const SizedBox(height: 16),
+          Text(
+            message!,
+            style: theme.textTheme.bodyMedium,
+            textAlign: TextAlign.center,
+          ).animate()
+            .fadeIn(delay: const Duration(milliseconds: 300)),
+        ],
+      ],
+    );
+  }
+}
+
+// ============================================
+// FILE: /app/lib/core/utils/encryption_utils.dart
+// ============================================
+
+import 'dart:convert';
+import 'dart:typed_data';
+import 'package:crypto/crypto.dart';
+import 'dart:math';
+import '../../config/internal_config.dart';
+
+class EncryptionUtils {
+  // Generate random salt
+  static Uint8List generateSalt() {
+    final random = Random.secure();
+    final salt = Uint8List(InternalConfig.saltLength);
+    for (int i = 0; i < salt.length; i++) {
+      salt[i] = random.nextInt(256);
+    }
+    return salt;
+  }
+  
+  // Generate random nonce for AES-GCM
+  static Uint8List generateNonce() {
+    final random = Random.secure();
+    final nonce = Uint8List(InternalConfig.nonceLength);
+    for (int i = 0; i < nonce.length; i++) {
+      nonce[i] = random.nextInt(256);
+    }
+    return nonce;
+  }
+  
+  // Derive key using PBKDF2
+  static Uint8List deriveKey(String password, Uint8List salt) {
+    // This is a simplified version - in production, use a proper PBKDF2 implementation
+    // You would typically use a package like pointycastle for this
+    final hmac = Hmac(sha256, utf8.encode(password));
+    final digest = hmac.convert(salt);
+    return Uint8List.fromList(digest.bytes);
+  }
+  
+  // Encrypt data (simplified - use proper AES-GCM in production)
+  static Map<String, String> encrypt(String plaintext, String password) {
+    final salt = generateSalt();
+    final nonce = generateNonce();
+    final key = deriveKey(password, salt);
+    
+    // This is a placeholder - implement proper AES-GCM encryption
+    // In production, use a package like encrypt or pointycastle
+    final encrypted = base64.encode(utf8.encode(plaintext));
+    
+    return {
+      'ciphertext': encrypted,
+      'salt': base64.encode(salt),
+      'nonce': base64.encode(nonce),
+      'algorithm': 'AES-GCM-256',
+      'kdf': 'PBKDF2-HMAC-SHA256',
+      'iterations': InternalConfig.pbkdf2Iterations.toString(),
+    };
+  }
+  
+  // Decrypt data (simplified - use proper AES-GCM in production)
+  static String decrypt(Map<String, String> encryptedData, String password) {
+    final salt = base64.decode(encryptedData['salt']!);
+    final nonce = base64.decode(encryptedData['nonce']!);
+    final ciphertext = encryptedData['ciphertext']!;
+    
+    final key = deriveKey(password, salt);
+    
+    // This is a placeholder - implement proper AES-GCM decryption
+    // In production, use a package like encrypt or pointycastle
+    final decrypted = utf8.decode(base64.decode(ciphertext));
+    
+    return decrypted;
+  }
+}
+
+// ============================================
+// FILE: /app/lib/core/services/api_service.dart
+// ============================================
+
+import 'dart:convert';
+import 'package:dio/dio.dart';
+import '../../config/internal_config.dart';
+
+class ApiService {
+  late final Dio _dio;
+  static final ApiService _instance = ApiService._internal();
+  
+  factory ApiService() => _instance;
+  
+  ApiService._internal() {
+    _dio = Dio(BaseOptions(
+      baseUrl: InternalConfig.workerBaseUrl,
+      connectTimeout: const Duration(seconds: 30),
+      receiveTimeout: const Duration(seconds: 30),
+      headers: {
+        'Content-Type': 'application/json',
+      },
+    ));
+    
+    // Add interceptors for logging in debug mode
+    if (InternalConfig.showDebugMenu) {
+      _dio.interceptors.add(LogInterceptor(
+        requestBody: true,
+        responseBody: true,
+      ));
+    }
+  }
+  
+  // Chat with LLM
+  Future<ChatResponse> chat({
+    required String message,
+    required String provider,
+    required String deviceId,
+  }) async {
+    try {
+      final response = await _dio.post('/api/chat', data: {
+        'message': message,
+        'provider': provider,
+        'deviceId': deviceId,
+      });
+      
+      return ChatResponse.fromJson(response.data);
+    } on DioException catch (e) {
+      if (e.response?.statusCode == 401) {
+        throw Exception('Please add your API key for $provider');
+      }
+      throw Exception('Failed to send message: ${e.message}');
+    }
+  }
+  
+  // Save encrypted keys
+  Future<void> saveKeys({
+    required String deviceId,
+    required Map<String, String> encryptedKeys,
+  }) async {
+    try {
+      await _dio.post('/api/keys/save', data: {
+        'deviceId': deviceId,
+        'encryptedKeys': encryptedKeys,
+      });
+    } catch (e) {
+      throw Exception('Failed to save keys: $e');
+    }
+  }
+  
+  // Get encrypted keys
+  Future<Map<String, String>?> getKeys(String deviceId) async {
+    try {
+      final response = await _dio.get('/api/keys/get', queryParameters: {
+        'deviceId': deviceId,
+      });
+      
+      return Map<String, String>.from(response.data);
+    } on DioException catch (e) {
+      if (e.response?.statusCode == 404) {
+        return null;
+      }
+      throw Exception('Failed to get keys: ${e.message}');
+    }
+  }
+  
+  // Create family invite
+  Future<FamilyInvite> createInvite({
+    required String deviceId,
+    required String memberName,
+  }) async {
+    try {
+      final response = await _dio.post('/api/family/create_invite', data: {
+        'deviceId': deviceId,
+        'memberName': memberName,
+      });
+      
+      return FamilyInvite.fromJson(response.data);
+    } catch (e) {
+      throw Exception('Failed to create invite: $e');
+    }
+  }
+  
+  // Accept family invite
+  Future<void> acceptInvite({
+    required String token,
+    required String deviceId,
+    Map<String, dynamic>? deviceInfo,
+  }) async {
+    try {
+      await _dio.post('/api/family/accept_invite', data: {
+        'token': token,
+        'deviceId': deviceId,
+        'deviceInfo': deviceInfo,
+      });
+    } catch (e) {
+      throw Exception('Failed to accept invite: $e');
+    }
+  }
+  
+  // Get family members
+  Future<List<FamilyMemberData>> getFamilyMembers(String familyId) async {
+    try {
+      final response = await _dio.get('/api/family/list', queryParameters: {
+        'familyId': familyId,
+      });
+      
+      final data = response.data;
+      final members = (data['members'] as List)
+          .map((m) => FamilyMemberData.fromJson(m))
+          .toList();
+      
+      return members;
+    } catch (e) {
+      throw Exception('Failed to get family members: $e');
+    }
+  }
+}
+
+// Response models
+class ChatResponse {
+  final String summary;
+  final String fullResponse;
+  final String modelUsed;
+  final String? switchReason;
+  
+  ChatResponse({
+    required this.summary,
+    required this.fullResponse,
+    required this.modelUsed,
+    this.switchReason,
+  });
+  
+  factory ChatResponse.fromJson(Map<String, dynamic> json) {
+    return ChatResponse(
+      summary: json['summary'],
+      fullResponse: json['fullResponse'],
+      modelUsed: json['modelUsed'],
+      switchReason: json['switchReason'],
+    );
+  }
+}
+
+class FamilyInvite {
+  final String token;
+  final String familyId;
+  final String inviteLink;
+  final String expiresIn;
+  
+  FamilyInvite({
+    required this.token,
+    required this.familyId,
+    required this.inviteLink,
+    required this.expiresIn,
+  });
+  
+  factory FamilyInvite.fromJson(Map<String, dynamic> json) {
+    return FamilyInvite(
+      token: json['token'],
+      familyId: json['familyId'],
+      inviteLink: json['inviteLink'],
+      expiresIn: json['expiresIn'],
+    );
+  }
+}
+
+class FamilyMemberData {
+  final String deviceId;
+  final String name;
+  final String role;
+  final DateTime joinedAt;
+  
+  FamilyMemberData({
+    required this.deviceId,
+    required this.name,
+    required this.role,
+    required this.joinedAt,
+  });
+  
+  factory FamilyMemberData.fromJson(Map<String, dynamic> json) {
+    return FamilyMemberData(
+      deviceId: json['deviceId'],
+      name: json['name'],
+      role: json['role'],
+      joinedAt: DateTime.parse(json['joinedAt']),
+    );
+  }
 }
\ No newline at end of file
diff --git a/petitpal/lib/src/analytics/analytics.dart b/petitpal/lib/src/analytics/analytics.dart
index b91d90a..d9b6e38 100644
--- a/petitpal/lib/src/analytics/analytics.dart
+++ b/petitpal/lib/src/analytics/analytics.dart
@@ -1,11 +1 @@
-import 'package:sentry_flutter/sentry_flutter.dart';
-import '../../config/internal_config.dart';
-
-class PetitAnalytics {
-  static Future<void> bootstrap() async {
-    if (InternalConfig.sentryEnabled && InternalConfig.sentryDsn.isNotEmpty) {
-      await SentryFlutter.init((o) { o.dsn = InternalConfig.sentryDsn; });
-    }
-  }
-  static Future<void> log(String name, [Map<String, Object?> params = const {}]) async {}
-}
+'"$@"'
diff --git a/petitpal/lib/src/analytics/analytics_events.dart b/petitpal/lib/src/analytics/analytics_events.dart
new file mode 100644
index 0000000..df743f4
--- /dev/null
+++ b/petitpal/lib/src/analytics/analytics_events.dart
@@ -0,0 +1,89 @@
+class AnalyticsEvents {
+  // Core app events
+  static const String appOpen = 'app_open';
+  static const String appFirstOpen = 'app_first_open';
+  static const String appBackgrounded = 'app_backgrounded';
+  static const String appForegrounded = 'app_foregrounded';
+  
+  // Onboarding events
+  static const String onboardingStart = 'onboarding_start';
+  static const String onboardingComplete = 'onboarding_complete';
+  static const String onboardingSkipped = 'onboarding_skipped';
+  static const String onboardingStepViewed = 'onboarding_step_viewed';
+  
+  // Theme events
+  static const String themeSelected = 'theme_selected';
+  static const String themePreviewViewed = 'theme_preview_viewed';
+  static const String themeChanged = 'theme_changed';
+  
+  // Voice interaction events
+  static const String questionAsked = 'question_asked';
+  static const String ttsSpoken = 'tts_spoken';
+  static const String speechRecognitionStarted = 'speech_recognition_started';
+  static const String speechRecognitionSuccess = 'speech_recognition_success';
+  static const String speechRecognitionError = 'speech_recognition_error';
+  static const String hotwordDetected = 'hotword_detected';
+  static const String voiceInterrupted = 'voice_interrupted';
+  
+  // LLM provider events
+  static const String modelAutoSwitch = 'model_auto_switch';
+  static const String modelManualSwitch = 'model_manual_switch';
+  static const String providerRequestStarted = 'provider_request_started';
+  static const String providerRequestSuccess = 'provider_request_success';
+  static const String providerRequestFailed = 'provider_request_failed';
+  static const String providerKeyAdded = 'provider_key_added';
+  static const String providerKeyTested = 'provider_key_tested';
+  static const String providerKeyRemoved = 'provider_key_removed';
+  static const String fallbackModelUsed = 'fallback_model_used';
+  
+  // Family sharing events
+  static const String familyInviteCreated = 'family_invite_created';
+  static const String familyInviteShared = 'family_invite_shared';
+  static const String familyInviteJoined = 'family_invite_joined';
+  static const String familyInviteFailed = 'family_invite_failed';
+  static const String familyMemberAdded = 'family_member_added';
+  static const String familyMemberRemoved = 'family_member_removed';
+  static const String familyListViewed = 'family_list_viewed';
+  
+  // Error events
+  static const String errorOccurred = 'error_occurred';
+  static const String networkError = 'network_error';
+  static const String crashOccurred = 'crash_occurred';
+  static const String apiError = 'api_error';
+  static const String authError = 'auth_error';
+  
+  // Feature usage events
+  static const String featureUsed = 'feature_used';
+  static const String settingsOpened = 'settings_opened';
+  static const String helpViewed = 'help_viewed';
+  static const String aboutViewed = 'about_viewed';
+  static const String debugMenuOpened = 'debug_menu_opened';
+  
+  // Performance events
+  static const String appLaunchTime = 'app_launch_time';
+  static const String responseTime = 'response_time';
+  static const String animationPerformance = 'animation_performance';
+  
+  // User preference events
+  static const String preferenceChanged = 'preference_changed';
+  static const String accessibilityFeatureUsed = 'accessibility_feature_used';
+  static const String motionPreferenceChanged = 'motion_preference_changed';
+  
+  // Common event parameters
+  static const String paramFeatureName = 'feature_name';
+  static const String paramThemeId = 'theme_id';
+  static const String paramProvider = 'provider';
+  static const String paramErrorType = 'error_type';
+  static const String paramErrorMessage = 'error_message';
+  static const String paramWordCount = 'word_count';
+  static const String paramDuration = 'duration';
+  static const String paramFromModel = 'from_model';
+  static const String paramToModel = 'to_model';
+  static const String paramReason = 'reason';
+  static const String paramMemberName = 'member_name';
+  static const String paramInviteMethod = 'invite_method';
+  static const String paramResponseTimeMs = 'response_time_ms';
+  static const String paramStepNumber = 'step_number';
+  static const String paramPreferenceName = 'preference_name';
+  static const String paramPreferenceValue = 'preference_value';
+}
\ No newline at end of file
diff --git a/petitpal/lib/src/analytics/events.dart b/petitpal/lib/src/analytics/events.dart
index ad6883c..d9b6e38 100644
--- a/petitpal/lib/src/analytics/events.dart
+++ b/petitpal/lib/src/analytics/events.dart
@@ -1,10 +1 @@
-class EventNames {
-  static const appFirstOpen = "app_first_open";
-  static const themeSelected = "theme_selected";
-  static const setupCompleted = "setup_completed";
-  static const voiceActivationStarted = "voice_activation_started";
-  static const questionAsked = "question_asked";
-  static const modelAutoSwitch = "model_auto_switch";
-  static const ttsSpoken = "tts_spoken";
-  static const interactionCompleted = "interaction_completed";
-}
+'"$@"'
diff --git a/petitpal/lib/src/analytics/sentry_boot.dart b/petitpal/lib/src/analytics/sentry_boot.dart
index 117e9b1..ecc5984 100644
--- a/petitpal/lib/src/analytics/sentry_boot.dart
+++ b/petitpal/lib/src/analytics/sentry_boot.dart
@@ -1,11 +1,11 @@
-import 'package:sentry_flutter/sentry_flutter.dart';
-import '../../config/launch_config.dart';
-
-Future<void> bootSentry() async {
-  if (!LaunchConfig.sentryEnabled) return;
-  await SentryFlutter.init((o) {
-    o.dsn = LaunchConfig.mobileSentryDsn;
-    o.tracesSampleRate = 0.2;
-    o.environment = LaunchConfig.envName;
-  });
-}
+import 'package:sentry_flutter/sentry_flutter.dart';
+import '../../config/launch_config.dart';
+
+Future<void> bootSentry() async {
+  if (!LaunchConfig.sentryEnabled) return;
+  await SentryFlutter.init((o) {
+    o.dsn = LaunchConfig.mobileSentryDsn;
+    o.tracesSampleRate = 0.2;
+    o.environment = LaunchConfig.envName;
+  });
+}
diff --git a/petitpal/lib/src/debug/debug_menu.dart b/petitpal/lib/src/debug/debug_menu.dart
index 673426c..1e4a580 100644
--- a/petitpal/lib/src/debug/debug_menu.dart
+++ b/petitpal/lib/src/debug/debug_menu.dart
@@ -1,19 +1,19 @@
-import 'package:flutter/material.dart';
-
-class DebugMenu extends StatelessWidget {
-  const DebugMenu({super.key});
-
-  @override
-  Widget build(BuildContext context) {
-    return Scaffold(
-      appBar: AppBar(title: const Text("Debug Menu")),
-      body: ListView(
-        children: const [
-          ListTile(title: Text("Toggle Analytics")),
-          ListTile(title: Text("Simulate Network Loss")),
-          ListTile(title: Text("Force Provider Timeout")),
-        ],
-      ),
-    );
-  }
-}
+import 'package:flutter/material.dart';
+
+class DebugMenu extends StatelessWidget {
+  const DebugMenu({super.key});
+
+  @override
+  Widget build(BuildContext context) {
+    return Scaffold(
+      appBar: AppBar(title: const Text("Debug Menu")),
+      body: ListView(
+        children: const [
+          ListTile(title: Text("Toggle Analytics")),
+          ListTile(title: Text("Simulate Network Loss")),
+          ListTile(title: Text("Force Provider Timeout")),
+        ],
+      ),
+    );
+  }
+}
diff --git a/petitpal/lib/src/family/accept_invite.dart b/petitpal/lib/src/family/accept_invite.dart
index f086c83..c987189 100644
--- a/petitpal/lib/src/family/accept_invite.dart
+++ b/petitpal/lib/src/family/accept_invite.dart
@@ -1,15 +1,15 @@
-import 'package:flutter/material.dart';
-
-class AcceptInviteScreen extends StatelessWidget {
-  const AcceptInviteScreen({super.key});
-
-  @override
-  Widget build(BuildContext context) {
-    return Scaffold(
-      appBar: AppBar(title: const Text("Joining Family...")),
-      body: const Center(
-        child: Text("Processing deep link / QR ..."),
-      ),
-    );
-  }
-}
+import 'package:flutter/material.dart';
+
+class AcceptInviteScreen extends StatelessWidget {
+  const AcceptInviteScreen({super.key});
+
+  @override
+  Widget build(BuildContext context) {
+    return Scaffold(
+      appBar: AppBar(title: const Text("Joining Family...")),
+      body: const Center(
+        child: Text("Processing deep link / QR ..."),
+      ),
+    );
+  }
+}
diff --git a/petitpal/lib/src/family/accept_invite_screen.dart b/petitpal/lib/src/family/accept_invite_screen.dart
new file mode 100644
index 0000000..d9b6e38
--- /dev/null
+++ b/petitpal/lib/src/family/accept_invite_screen.dart
@@ -0,0 +1 @@
+'"$@"'
diff --git a/petitpal/lib/src/family/family_dashboard_screen.dart b/petitpal/lib/src/family/family_dashboard_screen.dart
new file mode 100644
index 0000000..d9b6e38
--- /dev/null
+++ b/petitpal/lib/src/family/family_dashboard_screen.dart
@@ -0,0 +1 @@
+'"$@"'
diff --git a/petitpal/lib/src/family/family_hub_screen.dart b/petitpal/lib/src/family/family_hub_screen.dart
new file mode 100644
index 0000000..d9b6e38
--- /dev/null
+++ b/petitpal/lib/src/family/family_hub_screen.dart
@@ -0,0 +1 @@
+'"$@"'
diff --git a/petitpal/lib/src/family/family_member_card.dart b/petitpal/lib/src/family/family_member_card.dart
new file mode 100644
index 0000000..495441e
--- /dev/null
+++ b/petitpal/lib/src/family/family_member_card.dart
@@ -0,0 +1,75 @@
+import 'package:flutter/material.dart';
+
+class FamilyMemberCard extends StatelessWidget {
+  final String name;
+  final String deviceId;
+  final VoidCallback? onRemove;
+  final VoidCallback? onEdit;
+
+  const FamilyMemberCard({
+    super.key,
+    required this.name,
+    required this.deviceId,
+    this.onRemove,
+    this.onEdit,
+  });
+
+  @override
+  Widget build(BuildContext context) {
+    return Card(
+      margin: const EdgeInsets.symmetric(horizontal: 16, vertical: 4),
+      child: ListTile(
+        leading: CircleAvatar(
+          backgroundColor: Theme.of(context).primaryColor,
+          child: Text(
+            name.isNotEmpty ? name[0].toUpperCase() : '?',
+            style: const TextStyle(color: Colors.white, fontWeight: FontWeight.bold),
+          ),
+        ),
+        title: Text(
+          name,
+          style: const TextStyle(fontWeight: FontWeight.w500),
+        ),
+        subtitle: Text(
+          'Device: ${deviceId.substring(0, 8)}...',
+          style: TextStyle(color: Colors.grey[600]),
+        ),
+        trailing: PopupMenuButton<String>(
+          icon: const Icon(Icons.more_vert),
+          onSelected: (String action) {
+            switch (action) {
+              case 'edit':
+                onEdit?.call();
+                break;
+              case 'remove':
+                onRemove?.call();
+                break;
+            }
+          },
+          itemBuilder: (BuildContext context) => [
+            const PopupMenuItem<String>(
+              value: 'edit',
+              child: Row(
+                children: [
+                  Icon(Icons.edit, size: 20),
+                  SizedBox(width: 8),
+                  Text('Edit Name'),
+                ],
+              ),
+            ),
+            const PopupMenuItem<String>(
+              value: 'remove',
+              child: Row(
+                children: [
+                  Icon(Icons.delete, size: 20, color: Colors.red),
+                  SizedBox(width: 8),
+                  Text('Remove', style: TextStyle(color: Colors.red)),
+                ],
+              ),
+            ),
+          ],
+        ),
+      ),
+    );
+  }
+}
\ No newline at end of file
diff --git a/petitpal/lib/src/family/family_screen.dart b/petitpal/lib/src/family/family_screen.dart
index 651cb01..2240ae8 100644
--- a/petitpal/lib/src/family/family_screen.dart
+++ b/petitpal/lib/src/family/family_screen.dart
@@ -1,6 +1,6 @@
 import 'package:flutter/material.dart';
 import 'package:flutter_riverpod/flutter_riverpod.dart';
-import '../../providers/family_provider.dart';
+import '../analytics/analytics_service.dart';
 
 class FamilyScreen extends ConsumerStatefulWidget {
   const FamilyScreen({super.key});
@@ -10,192 +10,133 @@ class FamilyScreen extends ConsumerStatefulWidget {
 }
 
 class _FamilyScreenState extends ConsumerState<FamilyScreen> {
-  final TextEditingController _memberNameController = TextEditingController();
+  List<Map<String, String>> familyMembers = [
+    {'name': 'Mom', 'device_id': '123'},
+    {'name': 'Dad', 'device_id': '456'},
+  ];
 
   @override
   void initState() {
     super.initState();
-    // Load family data when screen opens
-    WidgetsBinding.instance.addPostFrameCallback((_) {
-      ref.read(familyProvider.notifier).loadFamily();
-    });
-  }
-
-  @override
-  void dispose() {
-    _memberNameController.dispose();
-    super.dispose();
+    // Track family screen view
+    AnalyticsService.logEvent('family_list_viewed');
   }
 
   @override
   Widget build(BuildContext context) {
-    final theme = Theme.of(context);
-    final familyState = ref.watch(familyProvider);
-    final isInFamily = ref.watch(isInFamilyProvider);
-    
     return Scaffold(
       appBar: AppBar(
-        title: const Text('Family Sharing'),
-        backgroundColor: theme.colorScheme.surface,
-        elevation: 0,
+        title: const Text('Family Members'),
+        backgroundColor: Theme.of(context).primaryColor,
+        foregroundColor: Colors.white,
       ),
-      body: Padding(
-        padding: const EdgeInsets.all(16.0),
-        child: Column(
-          crossAxisAlignment: CrossAxisAlignment.start,
-          children: [
-            // Introduction
-            Container(
-              padding: const EdgeInsets.all(16),
-              decoration: BoxDecoration(
-                color: theme.colorScheme.primaryContainer,
-                borderRadius: BorderRadius.circular(12),
-              ),
-              child: Column(
-                crossAxisAlignment: CrossAxisAlignment.start,
-                children: [
-                  Row(
-                    children: [
-                      Icon(
-                        Icons.family_restroom,
-                        color: theme.colorScheme.onPrimaryContainer,
-                      ),
-                      const SizedBox(width: 8),
-                      Text(
-                        'Family Sharing',
-                        style: theme.textTheme.titleMedium?.copyWith(
-                          color: theme.colorScheme.onPrimaryContainer,
-                          fontWeight: FontWeight.w600,
-                        ),
-                      ),
-                    ],
-                  ),
-                  const SizedBox(height: 8),
-                  Text(
-                    'Share PetitPal with family members to sync settings and provider access. Create an invite to get started.',
-                    style: theme.textTheme.bodyMedium?.copyWith(
-                      color: theme.colorScheme.onPrimaryContainer,
-                    ),
-                  ),
-                ],
-              ),
-            ),
-            
-            const SizedBox(height: 24),
-            
-            if (familyState.isLoading)
-              const Center(child: CircularProgressIndicator())
-            else if (familyState.error != null)
-              _buildErrorCard(familyState.error!)
-            else if (!isInFamily)
-              _buildCreateFamilyCard()
-            else
-              _buildFamilyMembersCard(),
-            
-            const SizedBox(height: 24),
-            
-            // How it works
-            _buildHowItWorksCard(),
-          ],
-        ),
+      body: familyMembers.isEmpty
+          ? _buildEmptyState()
+          : _buildFamilyList(),
+      floatingActionButton: FloatingActionButton(
+        onPressed: _showInviteDialog,
+        tooltip: 'Invite Family Member',
+        child: const Icon(Icons.add),
       ),
     );
   }
 
-  Widget _buildErrorCard(String error) {
-    final theme = Theme.of(context);
-    
-    return Container(
-      width: double.infinity,
-      padding: const EdgeInsets.all(16),
-      decoration: BoxDecoration(
-        color: theme.colorScheme.errorContainer,
-        borderRadius: BorderRadius.circular(12),
-      ),
+  Widget _buildEmptyState() {
+    return Center(
       child: Column(
-        crossAxisAlignment: CrossAxisAlignment.start,
+        mainAxisAlignment: MainAxisAlignment.center,
         children: [
-          Row(
-            children: [
-              Icon(
-                Icons.error_outline,
-                color: theme.colorScheme.onErrorContainer,
-              ),
-              const SizedBox(width: 8),
-              Text(
-                'Error',
-                style: theme.textTheme.titleMedium?.copyWith(
-                  color: theme.colorScheme.onErrorContainer,
-                  fontWeight: FontWeight.w600,
-                ),
-              ),
-            ],
+          Icon(
+            Icons.family_restroom,
+            size: 80,
+            color: Colors.grey[400],
           ),
-          const SizedBox(height: 8),
+          const SizedBox(height: 16),
           Text(
-            error,
-            style: theme.textTheme.bodyMedium?.copyWith(
-              color: theme.colorScheme.onErrorContainer,
+            'No family members yet',
+            style: Theme.of(context).textTheme.headlineSmall?.copyWith(
+              color: Colors.grey[600],
             ),
           ),
-          const SizedBox(height: 12),
-          ElevatedButton(
-            onPressed: () {
-              ref.read(familyProvider.notifier).clearError();
-              ref.read(familyProvider.notifier).loadFamily();
-            },
-            child: const Text('Try Again'),
+          const SizedBox(height: 8),
+          Text(
+            'Tap the + button to invite family members',
+            style: Theme.of(context).textTheme.bodyMedium?.copyWith(
+              color: Colors.grey[600],
+            ),
           ),
         ],
       ),
     );
   }
 
-  Widget _buildCreateFamilyCard() {
-    final theme = Theme.of(context);
-    
+  Widget _buildFamilyList() {
+    return ListView.builder(
+      padding: const EdgeInsets.all(16),
+      itemCount: familyMembers.length,
+      itemBuilder: (context, index) {
+        final member = familyMembers[index];
+        return _buildFamilyMemberCard(member, index);
+      },
+    );
+  }
+
+  Widget _buildFamilyMemberCard(Map<String, String> member, int index) {
+    final name = member['name'] ?? 'Unknown';
+    final deviceId = member['device_id'] ?? '';
+
     return Card(
-      child: Padding(
-        padding: const EdgeInsets.all(16),
-        child: Column(
-          crossAxisAlignment: CrossAxisAlignment.start,
-          children: [
-            Text(
-              'Create Family Group',
-              style: theme.textTheme.titleLarge?.copyWith(
-                fontWeight: FontWeight.w600,
-              ),
+      margin: const EdgeInsets.only(bottom: 12),
+      elevation: 2,
+      child: ListTile(
+        contentPadding: const EdgeInsets.symmetric(horizontal: 16, vertical: 8),
+        leading: CircleAvatar(
+          backgroundColor: Theme.of(context).primaryColor,
+          radius: 24,
+          child: Text(
+            name.isNotEmpty ? name[0].toUpperCase() : '?',
+            style: const TextStyle(
+              color: Colors.white,
+              fontWeight: FontWeight.bold,
+              fontSize: 18,
             ),
-            
-            const SizedBox(height: 12),
-            
-            Text(
-              'Start sharing PetitPal with your family members. Enter a name for the person you want to invite:',
-              style: theme.textTheme.bodyMedium,
-            ),
-            
-            const SizedBox(height: 16),
-            
-            TextField(
-              controller: _memberNameController,
-              decoration: const InputDecoration(
-                labelText: 'Family Member Name',
-                hintText: 'e.g., Mom, Dad, Sarah',
-                border: OutlineInputBorder(),
+          ),
+        ),
+        title: Text(
+          name,
+          style: const TextStyle(
+            fontWeight: FontWeight.w600,
+            fontSize: 16,
+          ),
+        ),
+        subtitle: Text(
+          'Device: ${deviceId.length > 8 ? '${deviceId.substring(0, 8)}...' : deviceId}',
+          style: TextStyle(
+            color: Colors.grey[600],
+            fontSize: 14,
+          ),
+        ),
+        trailing: PopupMenuButton<String>(
+          icon: const Icon(Icons.more_vert),
+          tooltip: 'Member options',
+          onSelected: (String value) => _handleMenuAction(value, member),
+          itemBuilder: (BuildContext context) => [
+            const PopupMenuItem<String>(
+              value: 'edit',
+              child: ListTile(
+                leading: Icon(Icons.edit, size: 20),
+                title: Text('Edit Name'),
+                dense: true,
+                contentPadding: EdgeInsets.zero,
               ),
-              onSubmitted: (_) => _createInvite(),
             ),
-            
-            const SizedBox(height: 16),
-            
-            SizedBox(
-              width: double.infinity,
-              child: ElevatedButton.icon(
-                onPressed: _memberNameController.text.trim().isNotEmpty
-                    ? _createInvite
-                    : null,
-                icon: const Icon(Icons.add),
-                label: const Text('Create Invite'),
+            const PopupMenuItem<String>(
+              value: 'remove',
+              child: ListTile(
+                leading: Icon(Icons.delete, size: 20, color: Colors.red),
+                title: Text('Remove', style: TextStyle(color: Colors.red)),
+                dense: true,
+                contentPadding: EdgeInsets.zero,
               ),
             ),
           ],
@@ -204,345 +145,210 @@ class _FamilyScreenState extends ConsumerState<FamilyScreen> {
     );
   }
 
-  Widget _buildFamilyMembersCard() {
-    final theme = Theme.of(context);
-    final familyMembers = ref.watch(familyMembersProvider);
-    
-    return Card(
-      child: Padding(
-        padding: const EdgeInsets.all(16),
-        child: Column(
-          crossAxisAlignment: CrossAxisAlignment.start,
-          children: [
-            Row(
-              mainAxisAlignment: MainAxisAlignment.spaceBetween,
-              children: [
-                Text(
-                  'Family Members',
-                  style: theme.textTheme.titleLarge?.copyWith(
-                    fontWeight: FontWeight.w600,
-                  ),
-                ),
-                IconButton(
-                  onPressed: _showCreateInviteDialog,
-                  icon: const Icon(Icons.person_add),
-                  tooltip: 'Invite Family Member',
-                ),
-              ],
-            ),
-            
-            const SizedBox(height: 16),
-            
-            if (familyMembers.isEmpty)
-              Container(
-                width: double.infinity,
-                padding: const EdgeInsets.all(24),
-                decoration: BoxDecoration(
-                  color: theme.colorScheme.surfaceVariant,
-                  borderRadius: BorderRadius.circular(8),
-                ),
-                child: Column(
-                  children: [
-                    Icon(
-                      Icons.family_restroom,
-                      size: 48,
-                      color: theme.colorScheme.onSurfaceVariant,
-                    ),
-                    const SizedBox(height: 8),
-                    Text(
-                      'No family members yet',
-                      style: theme.textTheme.bodyLarge?.copyWith(
-                        color: theme.colorScheme.onSurfaceVariant,
-                      ),
-                    ),
-                  ],
-                ),
-              )
-            else
-              ...familyMembers.map((member) => _buildMemberTile(member)),
-          ],
-        ),
-      ),
-    );
+  void _handleMenuAction(String action, Map<String, String> member) {
+    switch (action) {
+      case 'edit':
+        _editMemberName(member);
+        break;
+      case 'remove':
+        _showRemoveConfirmation(member);
+        break;
+    }
   }
 
-  Widget _buildMemberTile(FamilyMember member) {
-    final theme = Theme.of(context);
-    
-    return ListTile(
-      leading: CircleAvatar(
-        backgroundColor: theme.colorScheme.primary,
-        child: Text(
-          member.name.isNotEmpty ? member.name[0].toUpperCase() : '?',
-          style: TextStyle(
-            color: theme.colorScheme.onPrimary,
-            fontWeight: FontWeight.bold,
-          ),
-        ),
-      ),
-      title: Text(member.name),
-      subtitle: Text('Joined ${_formatDate(member.joinedAt)}'),
-      trailing: PopupMenuButton(
-        itemBuilder: (context) => [
-          PopupMenuItem(
-            onPressed: () => _removeMember(member),
-            child: const Row(
-              children: [
-                Icon(Icons.remove_circle_outline),
-                SizedBox(width: 8),
-                Text('Remove'),
-              ],
-            ),
-          ),
-        ],
-      ),
+  void _editMemberName(Map<String, String> member) {
+    final TextEditingController controller = TextEditingController(
+      text: member['name'],
     );
-  }
 
-  Widget _buildHowItWorksCard() {
-    final theme = Theme.of(context);
-    
-    return Card(
-      child: Padding(
-        padding: const EdgeInsets.all(16),
-        child: Column(
-          crossAxisAlignment: CrossAxisAlignment.start,
-          children: [
-            Text(
-              'How Family Sharing Works',
-              style: theme.textTheme.titleMedium?.copyWith(
-                fontWeight: FontWeight.w600,
-              ),
-            ),
-            
-            const SizedBox(height: 12),
-            
-            _buildHowItWorksStep(
-              '1.',
-              'Create an invite for a family member',
-              Icons.person_add,
-            ),
-            
-            _buildHowItWorksStep(
-              '2.',
-              'Share the QR code or link with them',
-              Icons.qr_code,
+    showDialog(
+      context: context,
+      builder: (BuildContext context) {
+        return AlertDialog(
+          title: const Text('Edit Member Name'),
+          content: TextField(
+            controller: controller,
+            decoration: const InputDecoration(
+              labelText: 'Name',
+              hintText: 'Enter member name',
+              border: OutlineInputBorder(),
             ),
-            
-            _buildHowItWorksStep(
-              '3.',
-              'They scan or tap to join automatically',
-              Icons.smartphone,
+            textCapitalization: TextCapitalization.words,
+            autofocus: true,
+          ),
+          actions: [
+            TextButton(
+              onPressed: () => Navigator.of(context).pop(),
+              child: const Text('Cancel'),
             ),
-            
-            _buildHowItWorksStep(
-              '4.',
-              'Settings and access are shared securely',
-              Icons.security,
+            ElevatedButton(
+              onPressed: () {
+                final newName = controller.text.trim();
+                if (newName.isNotEmpty && newName != member['name']) {
+                  setState(() {
+                    member['name'] = newName;
+                  });
+                  AnalyticsService.logEvent('family_member_renamed', {
+                    'new_name_length': newName.length,
+                  });
+                  Navigator.of(context).pop();
+                  ScaffoldMessenger.of(context).showSnackBar(
+                    SnackBar(
+                      content: Text('Name updated to $newName'),
+                      backgroundColor: Colors.green,
+                    ),
+                  );
+                } else if (newName.isEmpty) {
+                  ScaffoldMessenger.of(context).showSnackBar(
+                    const SnackBar(
+                      content: Text('Name cannot be empty'),
+                      backgroundColor: Colors.red,
+                    ),
+                  );
+                } else {
+                  Navigator.of(context).pop();
+                }
+              },
+              child: const Text('Save'),
             ),
           ],
-        ),
-      ),
+        );
+      },
     );
   }
 
-  Widget _buildHowItWorksStep(String number, String description, IconData icon) {
-    final theme = Theme.of(context);
-    
-    return Padding(
-      padding: const EdgeInsets.only(bottom: 12),
-      child: Row(
-        children: [
-          Container(
-            width: 32,
-            height: 32,
-            decoration: BoxDecoration(
-              color: theme.colorScheme.primary,
-              shape: BoxShape.circle,
+  void _showRemoveConfirmation(Map<String, String> member) {
+    showDialog(
+      context: context,
+      builder: (BuildContext context) {
+        return AlertDialog(
+          title: const Text('Remove Family Member'),
+          content: Text(
+            'Are you sure you want to remove ${member['name']} from your family?',
+          ),
+          actions: [
+            TextButton(
+              onPressed: () => Navigator.of(context).pop(),
+              child: const Text('Cancel'),
             ),
-            child: Center(
-              child: Text(
-                number,
-                style: TextStyle(
-                  color: theme.colorScheme.onPrimary,
-                  fontWeight: FontWeight.bold,
-                ),
+            ElevatedButton(
+              onPressed: () {
+                _removeMember(member);
+                Navigator.of(context).pop();
+              },
+              style: ElevatedButton.styleFrom(
+                backgroundColor: Colors.red,
+                foregroundColor: Colors.white,
               ),
+              child: const Text('Remove'),
             ),
-          ),
-          
-          const SizedBox(width: 12),
-          
-          Icon(
-            icon,
-            color: theme.colorScheme.onSurfaceVariant,
-          ),
-          
-          const SizedBox(width: 12),
-          
-          Expanded(
-            child: Text(
-              description,
-              style: theme.textTheme.bodyMedium,
-            ),
-          ),
-        ],
-      ),
+          ],
+        );
+      },
     );
   }
 
-  void _createInvite() async {
-    final memberName = _memberNameController.text.trim();
-    if (memberName.isEmpty) return;
+  void _removeMember(Map<String, String> member) {
+    setState(() {
+      familyMembers.remove(member);
+    });
     
-    final token = await ref.read(familyProvider.notifier).createInvite(memberName);
+    AnalyticsService.logFamilyMemberRemoved();
     
-    if (token != null && mounted) {
-      _memberNameController.clear();
-      _showInviteCreatedDialog(token, memberName);
-    }
-  }
-
-  void _showCreateInviteDialog() {
-    showDialog(
-      context: context,
-      builder: (context) => AlertDialog(
-        title: const Text('Invite Family Member'),
-        content: Column(
-          mainAxisSize: MainAxisSize.min,
-          children: [
-            TextField(
-              controller: _memberNameController,
-              decoration: const InputDecoration(
-                labelText: 'Family Member Name',
-                hintText: 'e.g., Mom, Dad, Sarah',
-                border: OutlineInputBorder(),
+    ScaffoldMessenger.of(context).showSnackBar(
+      SnackBar(
+        content: Text('${member['name']} has been removed'),
+        backgroundColor: Colors.orange,
+        action: SnackBarAction(
+          label: 'Undo',
+          textColor: Colors.white,
+          onPressed: () {
+            setState(() {
+              familyMembers.add(member);
+            });
+            ScaffoldMessenger.of(context).showSnackBar(
+              SnackBar(
+                content: Text('${member['name']} has been restored'),
+                backgroundColor: Colors.green,
               ),
-              autofocus: true,
-            ),
-          ],
+            );
+          },
         ),
-        actions: [
-          TextButton(
-            onPressed: () => Navigator.pop(context),
-            child: const Text('Cancel'),
-          ),
-          ElevatedButton(
-            onPressed: () {
-              Navigator.pop(context);
-              _createInvite();
-            },
-            child: const Text('Create Invite'),
-          ),
-        ],
       ),
     );
   }
 
-  void _showInviteCreatedDialog(String token, String memberName) {
+  void _showInviteDialog() {
     showDialog(
       context: context,
-      builder: (context) => AlertDialog(
-        title: const Text('Invite Created!'),
-        content: Column(
-          mainAxisSize: MainAxisSize.min,
-          children: [
-            Text('Invite created for $memberName'),
-            const SizedBox(height: 16),
-            Container(
-              padding: const EdgeInsets.all(16),
-              decoration: BoxDecoration(
-                color: Theme.of(context).colorScheme.surfaceVariant,
-                borderRadius: BorderRadius.circular(8),
+      builder: (BuildContext context) {
+        return AlertDialog(
+          title: const Text('Invite Family Member'),
+          content: const Column(
+            mainAxisSize: MainAxisSize.min,
+            crossAxisAlignment: CrossAxisAlignment.start,
+            children: [
+              Text(
+                'Choose how you\'d like to invite a family member:',
+                style: TextStyle(fontSize: 16),
               ),
-              child: Column(
-                children: [
-                  // QR Code placeholder
-                  Container(
-                    width: 120,
-                    height: 120,
-                    decoration: BoxDecoration(
-                      color: Colors.white,
-                      border: Border.all(color: Colors.grey),
-                    ),
-                    child: const Center(
-                      child: Text(
-                        'QR Code\n(Generated)',
-                        textAlign: TextAlign.center,
-                        style: TextStyle(fontSize: 12),
-                      ),
-                    ),
-                  ),
-                  const SizedBox(height: 12),
-                  Text(
-                    'petitpal://invite/$token',
-                    style: const TextStyle(
-                      fontFamily: 'monospace',
-                      fontSize: 12,
-                    ),
-                  ),
-                ],
+              SizedBox(height: 16),
+              Text(
+                '• QR Code: Show a QR code to scan\n'
+                '• Share Link: Send an invitation link\n'
+                '• Both: Generate both options',
+                style: TextStyle(fontSize: 14, color: Colors.grey),
               ),
+            ],
+          ),
+          actions: [
+            TextButton(
+              onPressed: () => Navigator.of(context).pop(),
+              child: const Text('Cancel'),
+            ),
+            ElevatedButton.icon(
+              onPressed: () {
+                Navigator.of(context).pop();
+                _generateQRCode();
+              },
+              icon: const Icon(Icons.qr_code),
+              label: const Text('QR Code'),
+            ),
+            ElevatedButton.icon(
+              onPressed: () {
+                Navigator.of(context).pop();
+                _shareInviteLink();
+              },
+              icon: const Icon(Icons.share),
+              label: const Text('Share Link'),
             ),
           ],
-        ),
-        actions: [
-          TextButton(
-            onPressed: () => Navigator.pop(context),
-            child: const Text('Close'),
-          ),
-          ElevatedButton.icon(
-            onPressed: () {
-              // TODO: Implement sharing
-              Navigator.pop(context);
-            },
-            icon: const Icon(Icons.share),
-            label: const Text('Share'),
-          ),
-        ],
-      ),
+        );
+      },
     );
   }
 
-  void _removeMember(FamilyMember member) async {
-    final confirmed = await showDialog<bool>(
-      context: context,
-      builder: (context) => AlertDialog(
-        title: const Text('Remove Family Member'),
-        content: Text('Are you sure you want to remove ${member.name} from your family group?'),
-        actions: [
-          TextButton(
-            onPressed: () => Navigator.pop(context, false),
-            child: const Text('Cancel'),
-          ),
-          ElevatedButton(
-            onPressed: () => Navigator.pop(context, true),
-            style: ElevatedButton.styleFrom(
-              backgroundColor: Theme.of(context).colorScheme.error,
-            ),
-            child: const Text('Remove'),
-          ),
-        ],
+  void _generateQRCode() {
+    // TODO: Implement QR code generation
+    AnalyticsService.logEvent('family_invite_created', {'method': 'qr_code'});
+    
+    ScaffoldMessenger.of(context).showSnackBar(
+      const SnackBar(
+        content: Text('QR Code generation coming soon!'),
+        backgroundColor: Colors.blue,
       ),
     );
-    
-    if (confirmed == true) {
-      await ref.read(familyProvider.notifier).removeMember(member.deviceId);
-    }
   }
 
-  String _formatDate(DateTime date) {
-    final now = DateTime.now();
-    final difference = now.difference(date);
+  void _shareInviteLink() {
+    // TODO: Implement link sharing
+    AnalyticsService.logEvent('family_invite_created', {'method': 'link'});
     
-    if (difference.inDays == 0) {
-      return 'today';
-    } else if (difference.inDays == 1) {
-      return 'yesterday';
-    } else if (difference.inDays < 7) {
-      return '${difference.inDays} days ago';
-    } else {
-      return '${date.day}/${date.month}/${date.year}';
-    }
+    ScaffoldMessenger.of(context).showSnackBar(
+      const SnackBar(
+        content: Text('Link sharing coming soon!'),
+        backgroundColor: Colors.blue,
+      ),
+    );
   }
 }
\ No newline at end of file
diff --git a/petitpal/lib/src/family/invite.dart b/petitpal/lib/src/family/invite.dart
index ecac6cb..514ac51 100644
--- a/petitpal/lib/src/family/invite.dart
+++ b/petitpal/lib/src/family/invite.dart
@@ -1,31 +1,31 @@
-import 'package:flutter/material.dart';
-
-class InviteScreen extends StatelessWidget {
-  const InviteScreen({super.key});
-
-  @override
-  Widget build(BuildContext context) {
-    final nameCtrl = TextEditingController();
-    return Scaffold(
-      appBar: AppBar(title: const Text("Invite Family Member")),
-      body: Padding(
-        padding: const EdgeInsets.all(16),
-        child: Column(
-          children: [
-            TextField(
-              controller: nameCtrl,
-              decoration: const InputDecoration(labelText: "Member name (e.g., Mom, Dad, Sarah)"),
-            ),
-            const SizedBox(height: 12),
-            ElevatedButton(
-              onPressed: () {
-                // TODO: POST /api/family/create_invite and show QR & link
-              },
-              child: const Text("Create Invitation"),
-            )
-          ],
-        ),
-      ),
-    );
-  }
-}
+import 'package:flutter/material.dart';
+
+class InviteScreen extends StatelessWidget {
+  const InviteScreen({super.key});
+
+  @override
+  Widget build(BuildContext context) {
+    final nameCtrl = TextEditingController();
+    return Scaffold(
+      appBar: AppBar(title: const Text("Invite Family Member")),
+      body: Padding(
+        padding: const EdgeInsets.all(16),
+        child: Column(
+          children: [
+            TextField(
+              controller: nameCtrl,
+              decoration: const InputDecoration(labelText: "Member name (e.g., Mom, Dad, Sarah)"),
+            ),
+            const SizedBox(height: 12),
+            ElevatedButton(
+              onPressed: () {
+                // TODO: POST /api/family/create_invite and show QR & link
+              },
+              child: const Text("Create Invitation"),
+            )
+          ],
+        ),
+      ),
+    );
+  }
+}
diff --git a/petitpal/lib/src/family/invite_screen.dart b/petitpal/lib/src/family/invite_screen.dart
new file mode 100644
index 0000000..d9b6e38
--- /dev/null
+++ b/petitpal/lib/src/family/invite_screen.dart
@@ -0,0 +1 @@
+'"$@"'
diff --git a/petitpal/lib/src/home/home_screen.dart b/petitpal/lib/src/home/home_screen.dart
index f43d0bc..d9b6e38 100644
--- a/petitpal/lib/src/home/home_screen.dart
+++ b/petitpal/lib/src/home/home_screen.dart
@@ -1,292 +1 @@
-import 'package:flutter/material.dart';
-import 'package:flutter_riverpod/flutter_riverpod.dart';
-import '../../providers/voice_provider.dart';
-import '../../providers/app_provider.dart';
-import '../../config/internal_config.dart';
-
-class HomeScreen extends ConsumerStatefulWidget {
-  const HomeScreen({super.key});
-
-  @override
-  ConsumerState<HomeScreen> createState() => _HomeScreenState();
-}
-
-class _HomeScreenState extends ConsumerState<HomeScreen> {
-  @override
-  void initState() {
-    super.initState();
-    // Initialize voice permissions on home screen
-    WidgetsBinding.instance.addPostFrameCallback((_) {
-      ref.read(voiceProvider.notifier).initializeVoice();
-    });
-  }
-
-  @override
-  Widget build(BuildContext context) {
-    final theme = Theme.of(context);
-    final voiceState = ref.watch(voiceProvider);
-    final appState = ref.watch(appProvider);
-    
-    return Scaffold(
-      appBar: AppBar(
-        title: const Text('PetitPal'),
-        backgroundColor: theme.colorScheme.surface,
-        elevation: 0,
-        actions: [
-          // Settings button
-          IconButton(
-            onPressed: () => _showSettingsMenu(context),
-            icon: const Icon(Icons.settings),
-            iconSize: 28,
-          ),
-        ],
-      ),
-      body: SafeArea(
-        child: Padding(
-          padding: const EdgeInsets.all(24.0),
-          child: Column(
-            mainAxisAlignment: MainAxisAlignment.center,
-            children: [
-              // Welcome message
-              Text(
-                'Hi there! 👋',
-                style: theme.textTheme.displayMedium?.copyWith(
-                  color: theme.colorScheme.onBackground,
-                  fontWeight: FontWeight.bold,
-                ),
-                textAlign: TextAlign.center,
-              ),
-              
-              const SizedBox(height: 16),
-              
-              Text(
-                'What would you like to know?',
-                style: theme.textTheme.bodyLarge?.copyWith(
-                  color: theme.colorScheme.onBackground,
-                ),
-                textAlign: TextAlign.center,
-              ),
-              
-              const SizedBox(height: 48),
-              
-              // Main voice button
-              Center(
-                child: GestureDetector(
-                  onTap: () => _handleVoiceButtonTap(),
-                  child: Container(
-                    width: 200,
-                    height: 200,
-                    decoration: BoxDecoration(
-                      color: _getButtonColor(theme, voiceState.isListening),
-                      shape: BoxShape.circle,
-                      boxShadow: [
-                        BoxShadow(
-                          color: theme.colorScheme.primary.withOpacity(0.3),
-                          blurRadius: 20,
-                          spreadRadius: voiceState.isListening ? 10 : 0,
-                        ),
-                      ],
-                    ),
-                    child: Icon(
-                      _getButtonIcon(voiceState.isListening),
-                      size: 80,
-                      color: theme.colorScheme.onPrimary,
-                    ),
-                  ),
-                ),
-              ),
-              
-              const SizedBox(height: 32),
-              
-              // Status text
-              Text(
-                _getStatusText(voiceState),
-                style: theme.textTheme.bodyLarge?.copyWith(
-                  color: theme.colorScheme.onBackground,
-                  fontWeight: FontWeight.w500,
-                ),
-                textAlign: TextAlign.center,
-              ),
-              
-              const SizedBox(height: 48),
-              
-              // Quick action buttons
-              Row(
-                mainAxisAlignment: MainAxisAlignment.spaceEvenly,
-                children: [
-                  _buildQuickActionButton(
-                    context,
-                    icon: Icons.family_restroom,
-                    label: 'Family',
-                    onTap: () => Navigator.pushNamed(context, '/family'),
-                  ),
-                  _buildQuickActionButton(
-                    context,
-                    icon: Icons.palette,
-                    label: 'Themes',
-                    onTap: () => Navigator.pushNamed(context, '/themes'),
-                  ),
-                  _buildQuickActionButton(
-                    context,
-                    icon: Icons.settings,
-                    label: 'Settings',
-                    onTap: () => Navigator.pushNamed(context, '/providers'),
-                  ),
-                ],
-              ),
-              
-              // Debug info (only in development)
-              if (InternalConfig.showDebugInfo) ...[
-                const SizedBox(height: 24),
-                Container(
-                  padding: const EdgeInsets.all(12),
-                  decoration: BoxDecoration(
-                    color: theme.colorScheme.surfaceVariant,
-                    borderRadius: BorderRadius.circular(8),
-                  ),
-                  child: Column(
-                    children: [
-                      Text(
-                        'Debug Info',
-                        style: theme.textTheme.labelMedium,
-                      ),
-                      const SizedBox(height: 4),
-                      Text(
-                        'Device ID: ${appState.deviceId.substring(0, 8)}...',
-                        style: theme.textTheme.bodySmall,
-                      ),
-                      Text(
-                        'Environment: ${InternalConfig.environment}',
-                        style: theme.textTheme.bodySmall,
-                      ),
-                    ],
-                  ),
-                ),
-              ],
-            ],
-          ),
-        ),
-      ),
-    );
-  }
-
-  void _handleVoiceButtonTap() {
-    final voiceNotifier = ref.read(voiceProvider.notifier);
-    final voiceState = ref.read(voiceProvider);
-    
-    if (voiceState.isListening) {
-      voiceNotifier.stopListening();
-    } else {
-      voiceNotifier.startListening();
-    }
-  }
-
-  Color _getButtonColor(ThemeData theme, bool isListening) {
-    if (isListening) {
-      return theme.colorScheme.error;
-    }
-    return theme.colorScheme.primary;
-  }
-
-  IconData _getButtonIcon(bool isListening) {
-    if (isListening) {
-      return Icons.stop;
-    }
-    return Icons.mic;
-  }
-
-  String _getStatusText(VoiceState voiceState) {
-    if (voiceState.isListening) {
-      return 'Listening... Tap to stop';
-    } else if (voiceState.isProcessing) {
-      return 'Processing your question...';
-    } else if (voiceState.isSpeaking) {
-      return 'Speaking...';
-    } else if (voiceState.error != null) {
-      return 'Error: ${voiceState.error}';
-    } else {
-      return 'Tap the microphone to start';
-    }
-  }
-
-  Widget _buildQuickActionButton(
-    BuildContext context, {
-    required IconData icon,
-    required String label,
-    required VoidCallback onTap,
-  }) {
-    final theme = Theme.of(context);
-    
-    return GestureDetector(
-      onTap: onTap,
-      child: Container(
-        width: 80,
-        height: 80,
-        decoration: BoxDecoration(
-          color: theme.colorScheme.surface,
-          borderRadius: BorderRadius.circular(16),
-          border: Border.all(
-            color: theme.colorScheme.outline,
-            width: 1,
-          ),
-        ),
-        child: Column(
-          mainAxisAlignment: MainAxisAlignment.center,
-          children: [
-            Icon(
-              icon,
-              size: 32,
-              color: theme.colorScheme.onSurface,
-            ),
-            const SizedBox(height: 4),
-            Text(
-              label,
-              style: theme.textTheme.labelSmall?.copyWith(
-                color: theme.colorScheme.onSurface,
-              ),
-              textAlign: TextAlign.center,
-            ),
-          ],
-        ),
-      ),
-    );
-  }
-
-  void _showSettingsMenu(BuildContext context) {
-    showModalBottomSheet(
-      context: context,
-      builder: (context) => Container(
-        padding: const EdgeInsets.all(24),
-        child: Column(
-          mainAxisSize: MainAxisSize.min,
-          children: [
-            ListTile(
-              leading: const Icon(Icons.palette),
-              title: const Text('Change Theme'),
-              onTap: () {
-                Navigator.pop(context);
-                Navigator.pushNamed(context, '/themes');
-              },
-            ),
-            ListTile(
-              leading: const Icon(Icons.family_restroom),
-              title: const Text('Family Sharing'),
-              onTap: () {
-                Navigator.pop(context);
-                Navigator.pushNamed(context, '/family');
-              },
-            ),
-            ListTile(
-              leading: const Icon(Icons.settings),
-              title: const Text('Provider Settings'),
-              onTap: () {
-                Navigator.pop(context);
-                Navigator.pushNamed(context, '/providers');
-              },
-            ),
-          ],
-        ),
-      ),
-    );
-  }
-}
+'"$@"'
diff --git a/petitpal/lib/src/onboarding/onboarding_screen.dart b/petitpal/lib/src/onboarding/onboarding_screen.dart
index 50a671a..d9b6e38 100644
--- a/petitpal/lib/src/onboarding/onboarding_screen.dart
+++ b/petitpal/lib/src/onboarding/onboarding_screen.dart
@@ -1,204 +1 @@
-import 'package:flutter/material.dart';
-import 'package:flutter_riverpod/flutter_riverpod.dart';
-import '../../providers/app_provider.dart';
-
-class OnboardingScreen extends ConsumerStatefulWidget {
-  const OnboardingScreen({super.key});
-
-  @override
-  ConsumerState<OnboardingScreen> createState() => _OnboardingScreenState();
-}
-
-class _OnboardingScreenState extends ConsumerState<OnboardingScreen> {
-  final PageController _pageController = PageController();
-  int _currentPage = 0;
-
-  final List<OnboardingPage> _pages = [
-    OnboardingPage(
-      title: 'Welcome to PetitPal',
-      description: 'Your voice-first assistant designed for seniors. Just speak to get started!',
-      icon: Icons.waving_hand,
-    ),
-    OnboardingPage(
-      title: 'Voice Commands',
-      description: 'Simply tap the microphone button and speak your question. I\'ll respond with clear audio.',
-      icon: Icons.mic,
-    ),
-    OnboardingPage(
-      title: 'Family Sharing',
-      description: 'Share PetitPal with family members using QR codes for easy setup.',
-      icon: Icons.family_restroom,
-    ),
-  ];
-
-  @override
-  void dispose() {
-    _pageController.dispose();
-    super.dispose();
-  }
-
-  void _nextPage() {
-    if (_currentPage < _pages.length - 1) {
-      setState(() => _currentPage++);
-      _pageController.nextPage(
-        duration: const Duration(milliseconds: 300),
-        curve: Curves.easeInOut,
-      );
-    } else {
-      _completeOnboarding();
-    }
-  }
-
-  void _previousPage() {
-    if (_currentPage > 0) {
-      setState(() => _currentPage--);
-      _pageController.previousPage(
-        duration: const Duration(milliseconds: 300),
-        curve: Curves.easeInOut,
-      );
-    }
-  }
-
-  void _completeOnboarding() async {
-    await ref.read(appProvider.notifier).completeOnboarding();
-    if (mounted) {
-      Navigator.of(context).pushReplacementNamed('/home');
-    }
-  }
-
-  @override
-  Widget build(BuildContext context) {
-    final theme = Theme.of(context);
-    
-    return Scaffold(
-      body: SafeArea(
-        child: Padding(
-          padding: const EdgeInsets.all(24.0),
-          child: Column(
-            children: [
-              // Progress indicator
-              Row(
-                children: List.generate(
-                  _pages.length,
-                  (index) => Expanded(
-                    child: Container(
-                      height: 4,
-                      margin: const EdgeInsets.symmetric(horizontal: 4),
-                      decoration: BoxDecoration(
-                        color: index <= _currentPage
-                            ? theme.colorScheme.primary
-                            : theme.colorScheme.outline,
-                        borderRadius: BorderRadius.circular(2),
-                      ),
-                    ),
-                  ),
-                ),
-              ),
-              
-              const SizedBox(height: 40),
-              
-              // Page content
-              Expanded(
-                child: PageView.builder(
-                  controller: _pageController,
-                  onPageChanged: (index) => setState(() => _currentPage = index),
-                  itemCount: _pages.length,
-                  itemBuilder: (context, index) {
-                    final page = _pages[index];
-                    return Column(
-                      mainAxisAlignment: MainAxisAlignment.center,
-                      children: [
-                        Icon(
-                          page.icon,
-                          size: 120,
-                          color: theme.colorScheme.primary,
-                        ),
-                        
-                        const SizedBox(height: 40),
-                        
-                        Text(
-                          page.title,
-                          style: theme.textTheme.displayMedium?.copyWith(
-                            color: theme.colorScheme.onBackground,
-                            fontWeight: FontWeight.bold,
-                          ),
-                          textAlign: TextAlign.center,
-                        ),
-                        
-                        const SizedBox(height: 24),
-                        
-                        Text(
-                          page.description,
-                          style: theme.textTheme.bodyLarge?.copyWith(
-                            color: theme.colorScheme.onBackground,
-                            height: 1.5,
-                          ),
-                          textAlign: TextAlign.center,
-                        ),
-                      ],
-                    );
-                  },
-                ),
-              ),
-              
-              // Navigation buttons
-              Row(
-                mainAxisAlignment: MainAxisAlignment.spaceBetween,
-                children: [
-                  // Previous button
-                  if (_currentPage > 0)
-                    ElevatedButton(
-                      onPressed: _previousPage,
-                      style: ElevatedButton.styleFrom(
-                        backgroundColor: theme.colorScheme.surface,
-                        foregroundColor: theme.colorScheme.onSurface,
-                        side: BorderSide(color: theme.colorScheme.outline),
-                      ),
-                      child: const Text('Previous'),
-                    )
-                  else
-                    const SizedBox.shrink(),
-                  
-                  // Next/Get Started button
-                  ElevatedButton(
-                    onPressed: _nextPage,
-                    child: Text(
-                      _currentPage < _pages.length - 1 ? 'Next' : 'Get Started',
-                    ),
-                  ),
-                ],
-              ),
-              
-              const SizedBox(height: 24),
-              
-              // Skip button
-              if (_currentPage < _pages.length - 1)
-                TextButton(
-                  onPressed: _completeOnboarding,
-                  child: Text(
-                    'Skip',
-                    style: TextStyle(
-                      color: theme.colorScheme.outline,
-                      fontSize: 16,
-                    ),
-                  ),
-                ),
-            ],
-          ),
-        ),
-      ),
-    );
-  }
-}
-
-class OnboardingPage {
-  final String title;
-  final String description;
-  final IconData icon;
-
-  OnboardingPage({
-    required this.title,
-    required this.description,
-    required this.icon,
-  });
-}
+'"$@"'
diff --git a/petitpal/lib/src/providers/provider_setup.dart b/petitpal/lib/src/providers/provider_setup.dart
index 19b6aa6..fd4dcfe 100644
--- a/petitpal/lib/src/providers/provider_setup.dart
+++ b/petitpal/lib/src/providers/provider_setup.dart
@@ -1,48 +1,48 @@
-import 'package:flutter/material.dart';
-
-class ProviderSetupScreen extends StatefulWidget {
-  const ProviderSetupScreen({super.key});
-
-  @override
-  State<ProviderSetupScreen> createState() => _ProviderSetupScreenState();
-}
-
-class _ProviderSetupScreenState extends State<ProviderSetupScreen> {
-  final openaiCtrl = TextEditingController();
-  final geminiCtrl = TextEditingController();
-  final grokCtrl = TextEditingController();
-  final deepseekCtrl = TextEditingController();
-
-  @override
-  Widget build(BuildContext context) {
-    return Scaffold(
-      appBar: AppBar(title: const Text("Provider Setup")),
-      body: ListView(
-        padding: const EdgeInsets.all(16),
-        children: [
-          const Text("Enter one or more API keys. You can add others later."),
-          _field("OpenAI (ChatGPT)", openaiCtrl),
-          _field("Gemini (Google)", geminiCtrl),
-          _field("Grok (xAI)", grokCtrl),
-          _field("DeepSeek", deepseekCtrl),
-          const SizedBox(height: 16),
-          ElevatedButton(
-            onPressed: () {
-              // TODO: Validate and store locally; also push encrypted backup via Worker
-            },
-            child: const Text("Save"),
-          )
-        ],
-      ),
-    );
-  }
-
-  Widget _field(String label, TextEditingController c) => Padding(
-    padding: const EdgeInsets.symmetric(vertical: 8.0),
-    child: TextField(
-      controller: c,
-      decoration: InputDecoration(labelText: label, border: const OutlineInputBorder()),
-      obscureText: true,
-    ),
-  );
-}
+import 'package:flutter/material.dart';
+
+class ProviderSetupScreen extends StatefulWidget {
+  const ProviderSetupScreen({super.key});
+
+  @override
+  State<ProviderSetupScreen> createState() => _ProviderSetupScreenState();
+}
+
+class _ProviderSetupScreenState extends State<ProviderSetupScreen> {
+  final openaiCtrl = TextEditingController();
+  final geminiCtrl = TextEditingController();
+  final grokCtrl = TextEditingController();
+  final deepseekCtrl = TextEditingController();
+
+  @override
+  Widget build(BuildContext context) {
+    return Scaffold(
+      appBar: AppBar(title: const Text("Provider Setup")),
+      body: ListView(
+        padding: const EdgeInsets.all(16),
+        children: [
+          const Text("Enter one or more API keys. You can add others later."),
+          _field("OpenAI (ChatGPT)", openaiCtrl),
+          _field("Gemini (Google)", geminiCtrl),
+          _field("Grok (xAI)", grokCtrl),
+          _field("DeepSeek", deepseekCtrl),
+          const SizedBox(height: 16),
+          ElevatedButton(
+            onPressed: () {
+              // TODO: Validate and store locally; also push encrypted backup via Worker
+            },
+            child: const Text("Save"),
+          )
+        ],
+      ),
+    );
+  }
+
+  Widget _field(String label, TextEditingController c) => Padding(
+    padding: const EdgeInsets.symmetric(vertical: 8.0),
+    child: TextField(
+      controller: c,
+      decoration: InputDecoration(labelText: label, border: const OutlineInputBorder()),
+      obscureText: true,
+    ),
+  );
+}
diff --git a/petitpal/lib/src/providers/provider_setup_screen.dart b/petitpal/lib/src/providers/provider_setup_screen.dart
new file mode 100644
index 0000000..d9b6e38
--- /dev/null
+++ b/petitpal/lib/src/providers/provider_setup_screen.dart
@@ -0,0 +1 @@
+'"$@"'
diff --git a/petitpal/lib/src/providers/providers.dart b/petitpal/lib/src/providers/providers.dart
new file mode 100644
index 0000000..d9b6e38
--- /dev/null
+++ b/petitpal/lib/src/providers/providers.dart
@@ -0,0 +1 @@
+'"$@"'
diff --git a/petitpal/lib/src/providers/providers_screen.dart b/petitpal/lib/src/providers/providers_screen.dart
index a2af5e5..2ba91e8 100644
--- a/petitpal/lib/src/providers/providers_screen.dart
+++ b/petitpal/lib/src/providers/providers_screen.dart
@@ -1,16 +1,16 @@
-import 'package:flutter/material.dart';
-import 'package:flutter_riverpod/flutter_riverpod.dart';
-
-class ProvidersScreen extends ConsumerWidget {
-  const ProvidersScreen({super.key});
-
-  @override
-  Widget build(BuildContext context, WidgetRef ref) {
-    return Scaffold(
-      appBar: AppBar(title: const Text('Provider Settings')),
-      body: const Center(
-        child: Text('Provider settings coming soon!'),
-      ),
-    );
-  }
+import 'package:flutter/material.dart';
+import 'package:flutter_riverpod/flutter_riverpod.dart';
+
+class ProvidersScreen extends ConsumerWidget {
+  const ProvidersScreen({super.key});
+
+  @override
+  Widget build(BuildContext context, WidgetRef ref) {
+    return Scaffold(
+      appBar: AppBar(title: const Text('Provider Settings')),
+      body: const Center(
+        child: Text('Provider settings coming soon!'),
+      ),
+    );
+  }
 }
\ No newline at end of file
diff --git a/petitpal/lib/src/security/keystore.dart b/petitpal/lib/src/security/keystore.dart
index cec0de6..d9b6e38 100644
--- a/petitpal/lib/src/security/keystore.dart
+++ b/petitpal/lib/src/security/keystore.dart
@@ -1,28 +1 @@
-import 'dart:convert';
-import 'dart:math';
-import 'package:crypto/crypto.dart';
-import 'package:flutter/foundation.dart';
-
-class KeyStore {
-  // Placeholder for AES-GCM with PBKDF2 derivation. In real app, use platform crypto.
-  static Map<String, dynamic> encrypt(Map<String, String> plain) {
-    // WARNING: Placeholder. Replace with real AES-GCM (platform channel or package).
-    final salt = _randBytes(16);
-    final nonce = _randBytes(12);
-    final blob = base64.encode(utf8.encode(jsonEncode(plain)));
-    return {
-      "ciphertext": blob,
-      "nonce": base64.encode(nonce),
-      "salt": base64.encode(salt),
-      "algo": "AES-GCM-256",
-      "kdf": "PBKDF2-HMAC-SHA256",
-      "iterations": 500000,
-      "created_at": DateTime.now().toIso8601String(),
-    };
-  }
-
-  static List<int> _randBytes(int n) {
-    final r = Random.secure();
-    return List<int>.generate(n, (_) => r.nextInt(256));
-  }
-}
+'"$@"'
diff --git a/petitpal/lib/src/theme/registry.dart b/petitpal/lib/src/theme/registry.dart
index 092880e..d9b6e38 100644
--- a/petitpal/lib/src/theme/registry.dart
+++ b/petitpal/lib/src/theme/registry.dart
@@ -1,109 +1 @@
-import 'package:flutter/material.dart';
-
-class PetitTokens extends ThemeExtension<PetitTokens> {
-  final double cornerRadius;
-  final Duration motionFast;
-  final Duration motionComfort;
-  final double borderWidth;
-  final Color voiceHint;
-
-  const PetitTokens({
-    required this.cornerRadius,
-    required this.motionFast,
-    required this.motionComfort,
-    required this.borderWidth,
-    required this.voiceHint,
-  });
-
-  @override
-  ThemeExtension<PetitTokens> copyWith({
-    double? cornerRadius,
-    Duration? motionFast,
-    Duration? motionComfort,
-    double? borderWidth,
-    Color? voiceHint,
-  }) => PetitTokens(
-    cornerRadius: cornerRadius ?? this.cornerRadius,
-    motionFast: motionFast ?? this.motionFast,
-    motionComfort: motionComfort ?? this.motionComfort,
-    borderWidth: borderWidth ?? this.borderWidth,
-    voiceHint: voiceHint ?? this.voiceHint,
-  );
-
-  @override
-  ThemeExtension<PetitTokens> lerp(ThemeExtension<PetitTokens>? other, double t) {
-    if (other is! PetitTokens) return this;
-    return this;
-  }
-}
-
-class ThemeDescriptor {
-  final String id;
-  final String name;
-  final String shortDescription;
-  final String voiceDescription;
-  final ThemeData Function(Brightness) build;
-  final PetitTokens tokens;
-  const ThemeDescriptor({
-    required this.id,
-    required this.name,
-    required this.shortDescription,
-    required this.voiceDescription,
-    required this.build,
-    required this.tokens,
-  });
-}
-
-List<ThemeDescriptor> themesRegistry() {
-  final baseTokens = PetitTokens(
-    cornerRadius: 16,
-    motionFast: const Duration(milliseconds: 120),
-    motionComfort: const Duration(milliseconds: 180),
-    borderWidth: 3,
-    voiceHint: Colors.amber,
-  );
-
-  ThemeData hcLight(Brightness b) => ThemeData(
-    brightness: Brightness.light,
-    colorScheme: const ColorScheme.light(
-      primary: Color(0xFF0066CC),
-      onPrimary: Colors.white,
-      background: Colors.white,
-      onBackground: Colors.black,
-    ),
-    visualDensity: VisualDensity.standard,
-    useMaterial3: true,
-    textTheme: const TextTheme(bodyLarge: TextStyle(fontSize: 20, fontWeight: FontWeight.bold)),
-  ).copyWith(extensions: [baseTokens]);
-
-  ThemeData hcDark(Brightness b) => ThemeData(
-    brightness: Brightness.dark,
-    colorScheme: const ColorScheme.dark(
-      primary: Color(0xFFFFD700),
-      background: Colors.black,
-      onBackground: Colors.white,
-    ),
-    useMaterial3: true,
-    textTheme: const TextTheme(bodyLarge: TextStyle(fontSize: 20, fontWeight: FontWeight.bold)),
-  ).copyWith(extensions: [baseTokens]);
-
-  return [
-    ThemeDescriptor(
-      id: "high_contrast_light",
-      name: "High Contrast Light",
-      shortDescription: "Large black text on white, high borders",
-      voiceDescription: "Large black text on white, designed for clarity.",
-      build: hcLight,
-      tokens: baseTokens,
-    ),
-    ThemeDescriptor(
-      id: "high_contrast_dark",
-      name: "High Contrast Dark",
-      shortDescription: "Pure black background with bright accents",
-      voiceDescription: "White text on black for maximum contrast.",
-      build: hcDark,
-      tokens: baseTokens,
-    ),
-    // TODO: Add the remaining 6 themes similarly (Modern Light/Dark, Modern Elegant, Vibrant Contemporary, Warm Minimalist, Large Text Friendly)
-  ];
-}
+'"$@"'
diff --git a/petitpal/lib/src/theme/theme_preview_screen.dart b/petitpal/lib/src/theme/theme_preview_screen.dart
index f2b3931..d9b6e38 100644
--- a/petitpal/lib/src/theme/theme_preview_screen.dart
+++ b/petitpal/lib/src/theme/theme_preview_screen.dart
@@ -1,388 +1 @@
-import 'package:flutter/material.dart';
-import 'package:flutter_riverpod/flutter_riverpod.dart';
-import '../../providers/theme_provider.dart';
-
-class ThemePreviewScreen extends ConsumerWidget {
-  const ThemePreviewScreen({super.key});
-
-  @override
-  Widget build(BuildContext context, WidgetRef ref) {
-    final themeState = ref.watch(themeProvider);
-    
-    return Scaffold(
-      appBar: AppBar(
-        title: const Text('Choose Theme'),
-        backgroundColor: Theme.of(context).colorScheme.surface,
-        elevation: 0,
-      ),
-      body: Padding(
-        padding: const EdgeInsets.all(16.0),
-        child: Column(
-          crossAxisAlignment: CrossAxisAlignment.start,
-          children: [
-            Text(
-              'Select your preferred theme:',
-              style: Theme.of(context).textTheme.headlineSmall?.copyWith(
-                fontWeight: FontWeight.w600,
-              ),
-            ),
-            
-            const SizedBox(height: 24),
-            
-            Expanded(
-              child: ListView(
-                children: [
-                  _buildThemeCard(
-                    context,
-                    ref,
-                    themeId: 'modern_light',
-                    title: 'Modern Light',
-                    description: 'Clean and bright design',
-                    isSelected: themeState.themeId == 'modern_light',
-                    preview: _buildLightPreview(),
-                  ),
-                  
-                  const SizedBox(height: 16),
-                  
-                  _buildThemeCard(
-                    context,
-                    ref,
-                    themeId: 'modern_dark',
-                    title: 'Modern Dark',
-                    description: 'Easy on the eyes',
-                    isSelected: themeState.themeId == 'modern_dark',
-                    preview: _buildDarkPreview(),
-                  ),
-                  
-                  const SizedBox(height: 16),
-                  
-                  _buildThemeCard(
-                    context,
-                    ref,
-                    themeId: 'high_contrast_light',
-                    title: 'High Contrast Light',
-                    description: 'Maximum readability',
-                    isSelected: themeState.themeId == 'high_contrast_light',
-                    preview: _buildHighContrastLightPreview(),
-                  ),
-                  
-                  const SizedBox(height: 16),
-                  
-                  _buildThemeCard(
-                    context,
-                    ref,
-                    themeId: 'high_contrast_dark',
-                    title: 'High Contrast Dark',
-                    description: 'Dark with maximum contrast',
-                    isSelected: themeState.themeId == 'high_contrast_dark',
-                    preview: _buildHighContrastDarkPreview(),
-                  ),
-                ],
-              ),
-            ),
-          ],
-        ),
-      ),
-    );
-  }
-
-  Widget _buildThemeCard(
-    BuildContext context,
-    WidgetRef ref, {
-    required String themeId,
-    required String title,
-    required String description,
-    required bool isSelected,
-    required Widget preview,
-  }) {
-    return GestureDetector(
-      onTap: () => ref.read(themeProvider.notifier).setTheme(themeId),
-      child: Container(
-        decoration: BoxDecoration(
-          borderRadius: BorderRadius.circular(16),
-          border: Border.all(
-            color: isSelected 
-                ? Theme.of(context).colorScheme.primary
-                : Theme.of(context).colorScheme.outline,
-            width: isSelected ? 3 : 1,
-          ),
-        ),
-        child: Column(
-          crossAxisAlignment: CrossAxisAlignment.start,
-          children: [
-            // Preview
-            Container(
-              height: 120,
-              width: double.infinity,
-              decoration: const BoxDecoration(
-                borderRadius: BorderRadius.only(
-                  topLeft: Radius.circular(16),
-                  topRight: Radius.circular(16),
-                ),
-              ),
-              child: ClipRRect(
-                borderRadius: const BorderRadius.only(
-                  topLeft: Radius.circular(16),
-                  topRight: Radius.circular(16),
-                ),
-                child: preview,
-              ),
-            ),
-            
-            // Info
-            Padding(
-              padding: const EdgeInsets.all(16),
-              child: Row(
-                children: [
-                  Expanded(
-                    child: Column(
-                      crossAxisAlignment: CrossAxisAlignment.start,
-                      children: [
-                        Text(
-                          title,
-                          style: Theme.of(context).textTheme.titleMedium?.copyWith(
-                            fontWeight: FontWeight.w600,
-                          ),
-                        ),
-                        const SizedBox(height: 4),
-                        Text(
-                          description,
-                          style: Theme.of(context).textTheme.bodyMedium?.copyWith(
-                            color: Theme.of(context).colorScheme.onSurfaceVariant,
-                          ),
-                        ),
-                      ],
-                    ),
-                  ),
-                  
-                  if (isSelected)
-                    Icon(
-                      Icons.check_circle,
-                      color: Theme.of(context).colorScheme.primary,
-                      size: 24,
-                    ),
-                ],
-              ),
-            ),
-          ],
-        ),
-      ),
-    );
-  }
-
-  Widget _buildLightPreview() {
-    return Container(
-      color: Colors.white,
-      child: Padding(
-        padding: const EdgeInsets.all(16),
-        child: Column(
-          crossAxisAlignment: CrossAxisAlignment.start,
-          children: [
-            Container(
-              width: double.infinity,
-              height: 12,
-              decoration: BoxDecoration(
-                color: Colors.grey[200],
-                borderRadius: BorderRadius.circular(6),
-              ),
-            ),
-            const SizedBox(height: 8),
-            Container(
-              width: 100,
-              height: 8,
-              decoration: BoxDecoration(
-                color: Colors.grey[300],
-                borderRadius: BorderRadius.circular(4),
-              ),
-            ),
-            const SizedBox(height: 16),
-            Row(
-              children: [
-                Container(
-                  width: 40,
-                  height: 40,
-                  decoration: const BoxDecoration(
-                    color: Color(0xFF6750A4),
-                    shape: BoxShape.circle,
-                  ),
-                ),
-                const SizedBox(width: 12),
-                Expanded(
-                  child: Container(
-                    height: 8,
-                    decoration: BoxDecoration(
-                      color: Colors.grey[300],
-                      borderRadius: BorderRadius.circular(4),
-                    ),
-                  ),
-                ),
-              ],
-            ),
-          ],
-        ),
-      ),
-    );
-  }
-
-  Widget _buildDarkPreview() {
-    return Container(
-      color: const Color(0xFF121212),
-      child: Padding(
-        padding: const EdgeInsets.all(16),
-        child: Column(
-          crossAxisAlignment: CrossAxisAlignment.start,
-          children: [
-            Container(
-              width: double.infinity,
-              height: 12,
-              decoration: BoxDecoration(
-                color: Colors.grey[700],
-                borderRadius: BorderRadius.circular(6),
-              ),
-            ),
-            const SizedBox(height: 8),
-            Container(
-              width: 100,
-              height: 8,
-              decoration: BoxDecoration(
-                color: Colors.grey[600],
-                borderRadius: BorderRadius.circular(4),
-              ),
-            ),
-            const SizedBox(height: 16),
-            Row(
-              children: [
-                Container(
-                  width: 40,
-                  height: 40,
-                  decoration: const BoxDecoration(
-                    color: Color(0xFFCFBCFF),
-                    shape: BoxShape.circle,
-                  ),
-                ),
-                const SizedBox(width: 12),
-                Expanded(
-                  child: Container(
-                    height: 8,
-                    decoration: BoxDecoration(
-                      color: Colors.grey[600],
-                      borderRadius: BorderRadius.circular(4),
-                    ),
-                  ),
-                ),
-              ],
-            ),
-          ],
-        ),
-      ),
-    );
-  }
-
-  Widget _buildHighContrastLightPreview() {
-    return Container(
-      color: Colors.white,
-      child: Padding(
-        padding: const EdgeInsets.all(16),
-        child: Column(
-          crossAxisAlignment: CrossAxisAlignment.start,
-          children: [
-            Container(
-              width: double.infinity,
-              height: 16,
-              decoration: BoxDecoration(
-                color: Colors.black,
-                borderRadius: BorderRadius.circular(8),
-              ),
-            ),
-            const SizedBox(height: 8),
-            Container(
-              width: 120,
-              height: 12,
-              decoration: BoxDecoration(
-                color: Colors.black,
-                borderRadius: BorderRadius.circular(6),
-              ),
-            ),
-            const SizedBox(height: 16),
-            Row(
-              children: [
-                Container(
-                  width: 44,
-                  height: 44,
-                  decoration: const BoxDecoration(
-                    color: Colors.black,
-                    shape: BoxShape.circle,
-                  ),
-                ),
-                const SizedBox(width: 12),
-                Expanded(
-                  child: Container(
-                    height: 12,
-                    decoration: BoxDecoration(
-                      color: Colors.black,
-                      borderRadius: BorderRadius.circular(6),
-                    ),
-                  ),
-                ),
-              ],
-            ),
-          ],
-        ),
-      ),
-    );
-  }
-
-  Widget _buildHighContrastDarkPreview() {
-    return Container(
-      color: Colors.black,
-      child: Padding(
-        padding: const EdgeInsets.all(16),
-        child: Column(
-          crossAxisAlignment: CrossAxisAlignment.start,
-          children: [
-            Container(
-              width: double.infinity,
-              height: 16,
-              decoration: BoxDecoration(
-                color: Colors.white,
-                borderRadius: BorderRadius.circular(8),
-              ),
-            ),
-            const SizedBox(height: 8),
-            Container(
-              width: 120,
-              height: 12,
-              decoration: BoxDecoration(
-                color: Colors.white,
-                borderRadius: BorderRadius.circular(6),
-              ),
-            ),
-            const SizedBox(height: 16),
-            Row(
-              children: [
-                Container(
-                  width: 44,
-                  height: 44,
-                  decoration: const BoxDecoration(
-                    color: Colors.white,
-                    shape: BoxShape.circle,
-                  ),
-                ),
-                const SizedBox(width: 12),
-                Expanded(
-                  child: Container(
-                    height: 12,
-                    decoration: BoxDecoration(
-                      color: Colors.white,
-                      borderRadius: BorderRadius.circular(6),
-                    ),
-                  ),
-                ),
-              ],
-            ),
-          ],
-        ),
-      ),
-    );
-  }
-}
+'"$@"'
diff --git a/petitpal/lib/src/voice/talk_button.dart b/petitpal/lib/src/voice/talk_button.dart
index 4288514..eeeae1f 100644
--- a/petitpal/lib/src/voice/talk_button.dart
+++ b/petitpal/lib/src/voice/talk_button.dart
@@ -1,15 +1,15 @@
-import 'package:flutter/material.dart';
-
-class TalkButton extends StatelessWidget {
-  final VoidCallback onPress;
-  const TalkButton({super.key, required this.onPress});
-
-  @override
-  Widget build(BuildContext context) {
-    return ElevatedButton(
-      style: ElevatedButton.styleFrom(minimumSize: const Size(200, 200), shape: const CircleBorder()),
-      onPressed: onPress,
-      child: const Text("Talk to PetitPal"),
-    );
-  }
-}
+import 'package:flutter/material.dart';
+
+class TalkButton extends StatelessWidget {
+  final VoidCallback onPress;
+  const TalkButton({super.key, required this.onPress});
+
+  @override
+  Widget build(BuildContext context) {
+    return ElevatedButton(
+      style: ElevatedButton.styleFrom(minimumSize: const Size(200, 200), shape: const CircleBorder()),
+      onPressed: onPress,
+      child: const Text("Talk to PetitPal"),
+    );
+  }
+}
diff --git a/petitpal/lib/src/voice/voice_controller.dart b/petitpal/lib/src/voice/voice_controller.dart
new file mode 100644
index 0000000..d9b6e38
--- /dev/null
+++ b/petitpal/lib/src/voice/voice_controller.dart
@@ -0,0 +1 @@
+'"$@"'
diff --git a/petitpal/lib/src/voice/voice_screen.dart b/petitpal/lib/src/voice/voice_screen.dart
index 47bc92f..d9b6e38 100644
--- a/petitpal/lib/src/voice/voice_screen.dart
+++ b/petitpal/lib/src/voice/voice_screen.dart
@@ -1,274 +1 @@
-// lib/src/voice/voice_screen.dart
-import 'package:flutter/material.dart';
-import 'package:flutter_riverpod/flutter_riverpod.dart';
-import 'package:speech_to_text/speech_to_text.dart';
-import 'package:permission_handler/permission_handler.dart';
-import 'package:flutter_tts/flutter_tts.dart';
-import '../../config/strings_config.dart';
-import '../../config/theme_config.dart';
-import '../../providers/voice_provider.dart';
-import '../widgets/speech_preview_widget.dart';
-import '../widgets/voice_button_widget.dart';
-
-class VoiceScreen extends ConsumerStatefulWidget {
-  const VoiceScreen({super.key});
-
-  @override
-  ConsumerState<VoiceScreen> createState() => _VoiceScreenState();
-}
-
-class _VoiceScreenState extends ConsumerState<VoiceScreen>
-    with TickerProviderStateMixin {
-  late AnimationController _animationController;
-  late Animation<double> _pulseAnimation;
-
-  @override
-  void initState() {
-    super.initState();
-    _initializeAnimations();
-    _initializeVoice();
-  }
-
-  void _initializeAnimations() {
-    _animationController = AnimationController(
-      duration: AppThemeConfig.animationDuration,
-      vsync: this,
-    );
-    _pulseAnimation = Tween<double>(
-      begin: 1.0,
-      end: 1.1,
-    ).animate(CurvedAnimation(
-      parent: _animationController,
-      curve: Curves.easeInOut,
-    ));
-  }
-
-  Future<void> _initializeVoice() async {
-    try {
-      final hasPermission = await _ensureMicPermission();
-      if (hasPermission) {
-        await ref.read(voiceProvider.notifier).initialize();
-      } else {
-        _showPermissionError();
-      }
-    } catch (e) {
-      _handleVoiceError(e.toString());
-    }
-  }
-
-  // Fixed: Explicitly return bool from async function
-  Future<bool> _ensureMicPermission() async {
-    try {
-      final status = await Permission.microphone.status;
-      
-      if (status.isGranted) {
-        return true;
-      }
-      
-      if (status.isDenied) {
-        final result = await Permission.microphone.request();
-        return result.isGranted;
-      }
-      
-      if (status.isPermanentlyDenied) {
-        await _showPermissionDialog();
-        return false;
-      }
-      
-      return false;
-    } catch (e) {
-      debugPrint('Permission error: $e');
-      return false;
-    }
-  }
-
-  Future<void> _showPermissionDialog() async {
-    if (!mounted) return;
-    
-    return showDialog<void>(
-      context: context,
-      barrierDismissible: false,
-      builder: (BuildContext context) {
-        return AlertDialog(
-          title: Text(StringsConfig.permissionDialogTitle),
-          content: Text(StringsConfig.permissionDialogMessage),
-          actions: <Widget>[
-            TextButton(
-              child: Text(StringsConfig.cancel),
-              onPressed: () => Navigator.of(context).pop(),
-            ),
-            ElevatedButton(
-              child: Text(StringsConfig.openSettings),
-              onPressed: () {
-                Navigator.of(context).pop();
-                openAppSettings();
-              },
-            ),
-          ],
-        );
-      },
-    );
-  }
-
-  void _showPermissionError() {
-    if (!mounted) return;
-    
-    ScaffoldMessenger.of(context).showSnackBar(
-      SnackBar(
-        content: Text(StringsConfig.microphonePermissionError),
-        backgroundColor: Theme.of(context).colorScheme.error,
-        action: SnackBarAction(
-          label: StringsConfig.tryAgain,
-          onPressed: _initializeVoice,
-        ),
-      ),
-    );
-  }
-
-  void _handleVoiceError(String error) {
-    if (!mounted) return;
-    
-    ScaffoldMessenger.of(context).showSnackBar(
-      SnackBar(
-        content: Text('${StringsConfig.voiceError}: $error'),
-        backgroundColor: Theme.of(context).colorScheme.error,
-      ),
-    );
-  }
-
-  Future<void> _startListening() async {
-    try {
-      final hasPermission = await _ensureMicPermission();
-      if (!hasPermission) {
-        _showPermissionError();
-        return;
-      }
-
-      await ref.read(voiceProvider.notifier).startListening();
-      _animationController.repeat(reverse: true);
-    } catch (e) {
-      _handleVoiceError(e.toString());
-    }
-  }
-
-  Future<void> _stopListening() async {
-    try {
-      await ref.read(voiceProvider.notifier).stopListening();
-      _animationController.stop();
-      _animationController.reset();
-    } catch (e) {
-      _handleVoiceError(e.toString());
-    }
-  }
-
-  @override
-  void dispose() {
-    _animationController.dispose();
-    super.dispose();
-  }
-
-  @override
-  Widget build(BuildContext context) {
-    final voiceState = ref.watch(voiceProvider);
-    final theme = Theme.of(context);
-    
-    return Scaffold(
-      backgroundColor: theme.colorScheme.background,
-      body: SafeArea(
-        child: Padding(
-          padding: EdgeInsets.all(AppThemeConfig.paddingLarge),
-          child: Column(
-            mainAxisAlignment: MainAxisAlignment.center,
-            children: [
-              // App Title
-              Text(
-                StringsConfig.appTitle,
-                style: theme.textTheme.headlineLarge?.copyWith(
-                  color: theme.colorScheme.onBackground,
-                  fontWeight: FontWeight.bold,
-                ),
-                textAlign: TextAlign.center,
-              ),
-              
-              SizedBox(height: AppThemeConfig.spacingXLarge),
-              
-              // Speech Preview Widget
-              SpeechPreviewWidget(
-                recognizedText: voiceState.recognizedText,
-                isListening: voiceState.isListening,
-                isProcessing: voiceState.isProcessing,
-              ),
-              
-              SizedBox(height: AppThemeConfig.spacingXLarge),
-              
-              // Voice Button
-              AnimatedBuilder(
-                animation: _pulseAnimation,
-                builder: (context, child) {
-                  return Transform.scale(
-                    scale: voiceState.isListening ? _pulseAnimation.value : 1.0,
-                    child: VoiceButtonWidget(
-                      isListening: voiceState.isListening,
-                      isProcessing: voiceState.isProcessing,
-                      onPressed: voiceState.isListening ? _stopListening : _startListening,
-                    ),
-                  );
-                },
-              ),
-              
-              SizedBox(height: AppThemeConfig.spacingLarge),
-              
-              // Status Text
-              Text(
-                _getStatusText(voiceState),
-                style: theme.textTheme.bodyLarge?.copyWith(
-                  color: theme.colorScheme.onBackground.withOpacity(0.7),
-                ),
-                textAlign: TextAlign.center,
-              ),
-              
-              SizedBox(height: AppThemeConfig.spacingMedium),
-              
-              // Error Display
-              if (voiceState.hasError)
-                Container(
-                  padding: EdgeInsets.all(AppThemeConfig.paddingMedium),
-                  decoration: BoxDecoration(
-                    color: theme.colorScheme.errorContainer,
-                    borderRadius: BorderRadius.circular(AppThemeConfig.borderRadius),
-                  ),
-                  child: Text(
-                    voiceState.errorMessage ?? StringsConfig.unknownError,
-                    style: theme.textTheme.bodyMedium?.copyWith(
-                      color: theme.colorScheme.onErrorContainer,
-                    ),
-                    textAlign: TextAlign.center,
-                  ),
-                ),
-            ],
-          ),
-        ),
-      ),
-    );
-  }
-
-  String _getStatusText(VoiceState voiceState) {
-    if (voiceState.hasError) {
-      return StringsConfig.voiceErrorOccurred;
-    }
-    
-    if (voiceState.isProcessing) {
-      return StringsConfig.processing;
-    }
-    
-    if (voiceState.isListening) {
-      return StringsConfig.listening;
-    }
-    
-    if (voiceState.isSpeaking) {
-      return StringsConfig.speaking;
-    }
-    
-    return StringsConfig.tapToTalk;
-  }
-}
\ No newline at end of file
+'"$@"'
diff --git a/petitpal/lib/src/widgets/.gitkeep b/petitpal/lib/src/widgets/.gitkeep
index 8d1c8b6..56f3b36 100644
--- a/petitpal/lib/src/widgets/.gitkeep
+++ b/petitpal/lib/src/widgets/.gitkeep
@@ -1 +1 @@
- 
+ 
diff --git a/petitpal/lib/src/widgets/error_widget.dart b/petitpal/lib/src/widgets/error_widget.dart
index 14e2075..7631a0f 100644
--- a/petitpal/lib/src/widgets/error_widget.dart
+++ b/petitpal/lib/src/widgets/error_widget.dart
@@ -1,79 +1,79 @@
-// lib/src/widgets/error_widget.dart
-import 'package:flutter/material.dart';
-import '../../config/theme_config.dart';
-import '../../config/strings_config.dart';
-
-class ErrorDisplayWidget extends StatelessWidget {
-  final String errorMessage;
-  final VoidCallback? onRetry;
-  final VoidCallback? onDismiss;
-
-  const ErrorDisplayWidget({
-    super.key,
-    required this.errorMessage,
-    this.onRetry,
-    this.onDismiss,
-  });
-
-  @override
-  Widget build(BuildContext context) {
-    final theme = Theme.of(context);
-    
-    return Container(
-      margin: EdgeInsets.all(AppThemeConfig.paddingMedium),
-      padding: EdgeInsets.all(AppThemeConfig.paddingLarge),
-      decoration: BoxDecoration(
-        color: theme.colorScheme.errorContainer,
-        borderRadius: BorderRadius.circular(AppThemeConfig.borderRadius),
-        border: Border.all(
-          color: theme.colorScheme.error,
-          width: 1,
-        ),
-      ),
-      child: Column(
-        mainAxisSize: MainAxisSize.min,
-        children: [
-          Icon(
-            Icons.error_outline,
-            size: AppThemeConfig.textSizeXLarge,
-            color: theme.colorScheme.onErrorContainer,
-          ),
-          
-          SizedBox(height: AppThemeConfig.spacingMedium),
-          
-          Text(
-            errorMessage,
-            style: theme.textTheme.bodyMedium?.copyWith(
-              color: theme.colorScheme.onErrorContainer,
-            ),
-            textAlign: TextAlign.center,
-          ),
-          
-          if (onRetry != null || onDismiss != null)
-            SizedBox(height: AppThemeConfig.spacingLarge),
-          
-          Row(
-            mainAxisAlignment: MainAxisAlignment.spaceEvenly,
-            children: [
-              if (onDismiss != null)
-                TextButton(
-                  onPressed: onDismiss,
-                  child: Text(StringsConfig.cancel),
-                ),
-              
-              if (onRetry != null)
-                ElevatedButton(
-                  onPressed: onRetry,
-                  style: ElevatedButton.styleFrom(
-                    backgroundColor: theme.colorScheme.error,
-                    foregroundColor: theme.colorScheme.onError,
-                  ),
-                  child: Text(StringsConfig.tryAgain),
-                ),
-            ],
-          ),
-        ],
-      ),
-    );
-  }
+// lib/src/widgets/error_widget.dart
+import 'package:flutter/material.dart';
+import '../../config/theme_config.dart';
+import '../../config/strings_config.dart';
+
+class ErrorDisplayWidget extends StatelessWidget {
+  final String errorMessage;
+  final VoidCallback? onRetry;
+  final VoidCallback? onDismiss;
+
+  const ErrorDisplayWidget({
+    super.key,
+    required this.errorMessage,
+    this.onRetry,
+    this.onDismiss,
+  });
+
+  @override
+  Widget build(BuildContext context) {
+    final theme = Theme.of(context);
+    
+    return Container(
+      margin: EdgeInsets.all(AppThemeConfig.paddingMedium),
+      padding: EdgeInsets.all(AppThemeConfig.paddingLarge),
+      decoration: BoxDecoration(
+        color: theme.colorScheme.errorContainer,
+        borderRadius: BorderRadius.circular(AppThemeConfig.borderRadius),
+        border: Border.all(
+          color: theme.colorScheme.error,
+          width: 1,
+        ),
+      ),
+      child: Column(
+        mainAxisSize: MainAxisSize.min,
+        children: [
+          Icon(
+            Icons.error_outline,
+            size: AppThemeConfig.textSizeXLarge,
+            color: theme.colorScheme.onErrorContainer,
+          ),
+          
+          SizedBox(height: AppThemeConfig.spacingMedium),
+          
+          Text(
+            errorMessage,
+            style: theme.textTheme.bodyMedium?.copyWith(
+              color: theme.colorScheme.onErrorContainer,
+            ),
+            textAlign: TextAlign.center,
+          ),
+          
+          if (onRetry != null || onDismiss != null)
+            SizedBox(height: AppThemeConfig.spacingLarge),
+          
+          Row(
+            mainAxisAlignment: MainAxisAlignment.spaceEvenly,
+            children: [
+              if (onDismiss != null)
+                TextButton(
+                  onPressed: onDismiss,
+                  child: Text(StringsConfig.cancel),
+                ),
+              
+              if (onRetry != null)
+                ElevatedButton(
+                  onPressed: onRetry,
+                  style: ElevatedButton.styleFrom(
+                    backgroundColor: theme.colorScheme.error,
+                    foregroundColor: theme.colorScheme.onError,
+                  ),
+                  child: Text(StringsConfig.tryAgain),
+                ),
+            ],
+          ),
+        ],
+      ),
+    );
+  }
 }
\ No newline at end of file
diff --git a/petitpal/lib/src/widgets/speech_preview_widget.dart b/petitpal/lib/src/widgets/speech_preview_widget.dart
index c542761..e0813be 100644
--- a/petitpal/lib/src/widgets/speech_preview_widget.dart
+++ b/petitpal/lib/src/widgets/speech_preview_widget.dart
@@ -1,138 +1,138 @@
-// lib/src/widgets/speech_preview_widget.dart
-import 'package:flutter/material.dart';
-import '../../config/theme_config.dart';
-import '../../config/strings_config.dart';
-
-class SpeechPreviewWidget extends StatelessWidget {
-  final String recognizedText;
-  final bool isListening;
-  final bool isProcessing;
-
-  const SpeechPreviewWidget({
-    super.key,
-    required this.recognizedText,
-    required this.isListening,
-    required this.isProcessing,
-  });
-
-  @override
-  Widget build(BuildContext context) {
-    final theme = Theme.of(context);
-    final isHighContrast = _isHighContrastTheme(theme);
-    
-    return AnimatedContainer(
-      duration: AppThemeConfig.animationDuration,
-      height: 120,
-      margin: EdgeInsets.all(AppThemeConfig.paddingMedium),
-      padding: EdgeInsets.all(AppThemeConfig.paddingMedium),
-      decoration: BoxDecoration(
-        color: theme.colorScheme.surface,
-        borderRadius: BorderRadius.circular(AppThemeConfig.borderRadiusLarge),
-        border: Border.all(
-          color: isListening 
-              ? theme.colorScheme.primary 
-              : theme.colorScheme.outline.withOpacity(0.3),
-          width: isListening ? 3 : 1,
-        ),
-        boxShadow: [
-          if (!isHighContrast)
-            BoxShadow(
-              color: theme.colorScheme.shadow.withOpacity(0.1),
-              blurRadius: 8,
-              offset: const Offset(0, 2),
-            ),
-        ],
-      ),
-      child: Column(
-        crossAxisAlignment: CrossAxisAlignment.start,
-        children: [
-          // Status indicator
-          Row(
-            children: [
-              AnimatedContainer(
-                duration: AppThemeConfig.animationDurationFast,
-                width: 12,
-                height: 12,
-                decoration: BoxDecoration(
-                  color: _getStatusColor(theme),
-                  shape: BoxShape.circle,
-                ),
-              ),
-              SizedBox(width: AppThemeConfig.spacingSmall),
-              Text(
-                _getStatusText(),
-                style: theme.textTheme.bodySmall?.copyWith(
-                  color: theme.colorScheme.onSurface.withOpacity(0.7),
-                  fontWeight: FontWeight.w500,
-                ),
-              ),
-            ],
-          ),
-          
-          SizedBox(height: AppThemeConfig.spacingSmall),
-          
-          // Speech text preview
-          Expanded(
-            child: SingleChildScrollView(
-              child: AnimatedDefaultTextStyle(
-                duration: AppThemeConfig.animationDuration,
-                style: TextStyle(
-                  fontSize: _getTextSize(isHighContrast),
-                  fontWeight: FontWeight.w500,
-                  color: theme.colorScheme.onSurface,
-                  height: 1.4,
-                ),
-                child: Text(
-                  _getDisplayText(),
-                  textAlign: TextAlign.left,
-                ),
-              ),
-            ),
-          ),
-        ],
-      ),
-    );
-  }
-
-  bool _isHighContrastTheme(ThemeData theme) {
-    // Check if this is the high contrast theme
-    return theme.colorScheme.background == AppThemeConfig.highContrastBackground;
-  }
-
-  double _getTextSize(bool isHighContrast) {
-    if (isHighContrast) {
-      return AppThemeConfig.textSizeLarge + 2; // Extra large for accessibility
-    }
-    return AppThemeConfig.textSizeMedium + 2;
-  }
-
-  Color _getStatusColor(ThemeData theme) {
-    if (isListening) {
-      return theme.colorScheme.primary;
-    } else if (isProcessing) {
-      return theme.colorScheme.secondary;
-    }
-    return theme.colorScheme.outline;
-  }
-
-  String _getStatusText() {
-    if (isListening) {
-      return StringsConfig.listening;
-    } else if (isProcessing) {
-      return StringsConfig.processing;
-    }
-    return 'Ready';
-  }
-
-  String _getDisplayText() {
-    if (recognizedText.isEmpty) {
-      if (isListening) {
-        return StringsConfig.listening;
-      } else if (isProcessing) {
-        return StringsConfig.processing;
-      }
-      return StringsConfig.tapToTalk;
-    }
-    return recognizedText;
-  }
+// lib/src/widgets/speech_preview_widget.dart
+import 'package:flutter/material.dart';
+import '../../config/theme_config.dart';
+import '../../config/strings_config.dart';
+
+class SpeechPreviewWidget extends StatelessWidget {
+  final String recognizedText;
+  final bool isListening;
+  final bool isProcessing;
+
+  const SpeechPreviewWidget({
+    super.key,
+    required this.recognizedText,
+    required this.isListening,
+    required this.isProcessing,
+  });
+
+  @override
+  Widget build(BuildContext context) {
+    final theme = Theme.of(context);
+    final isHighContrast = _isHighContrastTheme(theme);
+    
+    return AnimatedContainer(
+      duration: AppThemeConfig.animationDuration,
+      height: 120,
+      margin: EdgeInsets.all(AppThemeConfig.paddingMedium),
+      padding: EdgeInsets.all(AppThemeConfig.paddingMedium),
+      decoration: BoxDecoration(
+        color: theme.colorScheme.surface,
+        borderRadius: BorderRadius.circular(AppThemeConfig.borderRadiusLarge),
+        border: Border.all(
+          color: isListening 
+              ? theme.colorScheme.primary 
+              : theme.colorScheme.outline.withOpacity(0.3),
+          width: isListening ? 3 : 1,
+        ),
+        boxShadow: [
+          if (!isHighContrast)
+            BoxShadow(
+              color: theme.colorScheme.shadow.withOpacity(0.1),
+              blurRadius: 8,
+              offset: const Offset(0, 2),
+            ),
+        ],
+      ),
+      child: Column(
+        crossAxisAlignment: CrossAxisAlignment.start,
+        children: [
+          // Status indicator
+          Row(
+            children: [
+              AnimatedContainer(
+                duration: AppThemeConfig.animationDurationFast,
+                width: 12,
+                height: 12,
+                decoration: BoxDecoration(
+                  color: _getStatusColor(theme),
+                  shape: BoxShape.circle,
+                ),
+              ),
+              SizedBox(width: AppThemeConfig.spacingSmall),
+              Text(
+                _getStatusText(),
+                style: theme.textTheme.bodySmall?.copyWith(
+                  color: theme.colorScheme.onSurface.withOpacity(0.7),
+                  fontWeight: FontWeight.w500,
+                ),
+              ),
+            ],
+          ),
+          
+          SizedBox(height: AppThemeConfig.spacingSmall),
+          
+          // Speech text preview
+          Expanded(
+            child: SingleChildScrollView(
+              child: AnimatedDefaultTextStyle(
+                duration: AppThemeConfig.animationDuration,
+                style: TextStyle(
+                  fontSize: _getTextSize(isHighContrast),
+                  fontWeight: FontWeight.w500,
+                  color: theme.colorScheme.onSurface,
+                  height: 1.4,
+                ),
+                child: Text(
+                  _getDisplayText(),
+                  textAlign: TextAlign.left,
+                ),
+              ),
+            ),
+          ),
+        ],
+      ),
+    );
+  }
+
+  bool _isHighContrastTheme(ThemeData theme) {
+    // Check if this is the high contrast theme
+    return theme.colorScheme.background == AppThemeConfig.highContrastBackground;
+  }
+
+  double _getTextSize(bool isHighContrast) {
+    if (isHighContrast) {
+      return AppThemeConfig.textSizeLarge + 2; // Extra large for accessibility
+    }
+    return AppThemeConfig.textSizeMedium + 2;
+  }
+
+  Color _getStatusColor(ThemeData theme) {
+    if (isListening) {
+      return theme.colorScheme.primary;
+    } else if (isProcessing) {
+      return theme.colorScheme.secondary;
+    }
+    return theme.colorScheme.outline;
+  }
+
+  String _getStatusText() {
+    if (isListening) {
+      return StringsConfig.listening;
+    } else if (isProcessing) {
+      return StringsConfig.processing;
+    }
+    return 'Ready';
+  }
+
+  String _getDisplayText() {
+    if (recognizedText.isEmpty) {
+      if (isListening) {
+        return StringsConfig.listening;
+      } else if (isProcessing) {
+        return StringsConfig.processing;
+      }
+      return StringsConfig.tapToTalk;
+    }
+    return recognizedText;
+  }
 }
\ No newline at end of file
diff --git a/petitpal/lib/src/widgets/voice_button_widget.dart b/petitpal/lib/src/widgets/voice_button_widget.dart
index 703fce9..0fa5e61 100644
--- a/petitpal/lib/src/widgets/voice_button_widget.dart
+++ b/petitpal/lib/src/widgets/voice_button_widget.dart
@@ -1,218 +1,218 @@
-// lib/src/widgets/voice_button_widget.dart
-import 'package:flutter/material.dart';
-import 'package:flutter/services.dart';
-import '../../config/theme_config.dart';
-import '../../config/strings_config.dart';
-
-class VoiceButtonWidget extends StatefulWidget {
-  final bool isListening;
-  final bool isProcessing;
-  final VoidCallback onPressed;
-
-  const VoiceButtonWidget({
-    super.key,
-    required this.isListening,
-    required this.isProcessing,
-    required this.onPressed,
-  });
-
-  @override
-  State<VoiceButtonWidget> createState() => _VoiceButtonWidgetState();
-}
-
-class _VoiceButtonWidgetState extends State<VoiceButtonWidget>
-    with TickerProviderStateMixin {
-  late AnimationController _rippleController;
-  late AnimationController _pulseController;
-  late Animation<double> _rippleAnimation;
-  late Animation<double> _pulseAnimation;
-
-  @override
-  void initState() {
-    super.initState();
-    _initializeAnimations();
-  }
-
-  void _initializeAnimations() {
-    // Ripple animation for listening state
-    _rippleController = AnimationController(
-      duration: const Duration(milliseconds: 1500),
-      vsync: this,
-    );
-    _rippleAnimation = Tween<double>(
-      begin: 0.0,
-      end: 1.0,
-    ).animate(CurvedAnimation(
-      parent: _rippleController,
-      curve: Curves.easeOut,
-    ));
-
-    // Pulse animation for processing state
-    _pulseController = AnimationController(
-      duration: AppThemeConfig.animationDuration,
-      vsync: this,
-    );
-    _pulseAnimation = Tween<double>(
-      begin: 1.0,
-      end: 1.1,
-    ).animate(CurvedAnimation(
-      parent: _pulseController,
-      curve: Curves.easeInOut,
-    ));
-  }
-
-  @override
-  void didUpdateWidget(VoiceButtonWidget oldWidget) {
-    super.didUpdateWidget(oldWidget);
-    
-    if (widget.isListening && !oldWidget.isListening) {
-      _rippleController.repeat();
-    } else if (!widget.isListening && oldWidget.isListening) {
-      _rippleController.stop();
-      _rippleController.reset();
-    }
-
-    if (widget.isProcessing && !oldWidget.isProcessing) {
-      _pulseController.repeat(reverse: true);
-    } else if (!widget.isProcessing && oldWidget.isProcessing) {
-      _pulseController.stop();
-      _pulseController.reset();
-    }
-  }
-
-  @override
-  void dispose() {
-    _rippleController.dispose();
-    _pulseController.dispose();
-    super.dispose();
-  }
-
-  @override
-  Widget build(BuildContext context) {
-    final theme = Theme.of(context);
-    final isHighContrast = _isHighContrastTheme(theme);
-    
-    return Semantics(
-      button: true,
-      enabled: true,
-      label: _getAccessibilityLabel(),
-      hint: _getAccessibilityHint(),
-      child: GestureDetector(
-        onTap: _handleTap,
-        child: AnimatedBuilder(
-          animation: Listenable.merge([_rippleAnimation, _pulseAnimation]),
-          builder: (context, child) {
-            return Container(
-              width: AppThemeConfig.largeTouchTarget * 2,
-              height: AppThemeConfig.largeTouchTarget * 2,
-              decoration: BoxDecoration(
-                shape: BoxShape.circle,
-                color: _getButtonColor(theme),
-                boxShadow: [
-                  if (!isHighContrast)
-                    BoxShadow(
-                      color: theme.colorScheme.primary.withOpacity(0.3),
-                      blurRadius: widget.isListening ? 20 : 10,
-                      spreadRadius: widget.isListening ? 5 : 0,
-                    ),
-                ],
-              ),
-              child: Stack(
-                alignment: Alignment.center,
-                children: [
-                  // Ripple effect for listening
-                  if (widget.isListening)
-                    Container(
-                      width: AppThemeConfig.largeTouchTarget * 2 * _rippleAnimation.value,
-                      height: AppThemeConfig.largeTouchTarget * 2 * _rippleAnimation.value,
-                      decoration: BoxDecoration(
-                        shape: BoxShape.circle,
-                        border: Border.all(
-                          color: theme.colorScheme.primary.withOpacity(
-                            1.0 - _rippleAnimation.value,
-                          ),
-                          width: 2,
-                        ),
-                      ),
-                    ),
-                  
-                  // Main button content
-                  Transform.scale(
-                    scale: widget.isProcessing ? _pulseAnimation.value : 1.0,
-                    child: Container(
-                      width: AppThemeConfig.largeTouchTarget * 1.5,
-                      height: AppThemeConfig.largeTouchTarget * 1.5,
-                      decoration: BoxDecoration(
-                        shape: BoxShape.circle,
-                        color: theme.colorScheme.primary,
-                        border: isHighContrast 
-                            ? Border.all(
-                                color: theme.colorScheme.onPrimary,
-                                width: 2,
-                              )
-                            : null,
-                      ),
-                      child: Icon(
-                        _getIcon(),
-                        size: AppThemeConfig.textSizeXLarge + 8,
-                        color: theme.colorScheme.onPrimary,
-                      ),
-                    ),
-                  ),
-                ],
-              ),
-            );
-          },
-        ),
-      ),
-    );
-  }
-
-  bool _isHighContrastTheme(ThemeData theme) {
-    return theme.colorScheme.background == AppThemeConfig.highContrastBackground;
-  }
-
-  Color _getButtonColor(ThemeData theme) {
-    if (widget.isListening) {
-      return theme.colorScheme.primary.withOpacity(0.1);
-    }
-    return theme.colorScheme.surface;
-  }
-
-  IconData _getIcon() {
-    if (widget.isListening) {
-      return Icons.stop;
-    } else if (widget.isProcessing) {
-      return Icons.hourglass_bottom;
-    }
-    return Icons.mic;
-  }
-
-  String _getAccessibilityLabel() {
-    if (widget.isListening) {
-      return 'Stop listening';
-    } else if (widget.isProcessing) {
-      return 'Processing your request';
-    }
-    return 'Start voice input';
-  }
-
-  String _getAccessibilityHint() {
-    if (widget.isListening) {
-      return 'Tap to stop listening';
-    } else if (widget.isProcessing) {
-      return 'Please wait while processing';
-    }
-    return 'Tap to start talking to PetitPal';
-  }
-
-  void _handleTap() {
-    if (widget.isProcessing) return; // Don't allow interaction while processing
-    
-    // Provide haptic feedback
-    HapticFeedback.lightImpact();
-    
-    // Call the onPressed callback
-    widget.onPressed();
-  }
-}
+// lib/src/widgets/voice_button_widget.dart
+import 'package:flutter/material.dart';
+import 'package:flutter/services.dart';
+import '../../config/theme_config.dart';
+import '../../config/strings_config.dart';
+
+class VoiceButtonWidget extends StatefulWidget {
+  final bool isListening;
+  final bool isProcessing;
+  final VoidCallback onPressed;
+
+  const VoiceButtonWidget({
+    super.key,
+    required this.isListening,
+    required this.isProcessing,
+    required this.onPressed,
+  });
+
+  @override
+  State<VoiceButtonWidget> createState() => _VoiceButtonWidgetState();
+}
+
+class _VoiceButtonWidgetState extends State<VoiceButtonWidget>
+    with TickerProviderStateMixin {
+  late AnimationController _rippleController;
+  late AnimationController _pulseController;
+  late Animation<double> _rippleAnimation;
+  late Animation<double> _pulseAnimation;
+
+  @override
+  void initState() {
+    super.initState();
+    _initializeAnimations();
+  }
+
+  void _initializeAnimations() {
+    // Ripple animation for listening state
+    _rippleController = AnimationController(
+      duration: const Duration(milliseconds: 1500),
+      vsync: this,
+    );
+    _rippleAnimation = Tween<double>(
+      begin: 0.0,
+      end: 1.0,
+    ).animate(CurvedAnimation(
+      parent: _rippleController,
+      curve: Curves.easeOut,
+    ));
+
+    // Pulse animation for processing state
+    _pulseController = AnimationController(
+      duration: AppThemeConfig.animationDuration,
+      vsync: this,
+    );
+    _pulseAnimation = Tween<double>(
+      begin: 1.0,
+      end: 1.1,
+    ).animate(CurvedAnimation(
+      parent: _pulseController,
+      curve: Curves.easeInOut,
+    ));
+  }
+
+  @override
+  void didUpdateWidget(VoiceButtonWidget oldWidget) {
+    super.didUpdateWidget(oldWidget);
+    
+    if (widget.isListening && !oldWidget.isListening) {
+      _rippleController.repeat();
+    } else if (!widget.isListening && oldWidget.isListening) {
+      _rippleController.stop();
+      _rippleController.reset();
+    }
+
+    if (widget.isProcessing && !oldWidget.isProcessing) {
+      _pulseController.repeat(reverse: true);
+    } else if (!widget.isProcessing && oldWidget.isProcessing) {
+      _pulseController.stop();
+      _pulseController.reset();
+    }
+  }
+
+  @override
+  void dispose() {
+    _rippleController.dispose();
+    _pulseController.dispose();
+    super.dispose();
+  }
+
+  @override
+  Widget build(BuildContext context) {
+    final theme = Theme.of(context);
+    final isHighContrast = _isHighContrastTheme(theme);
+    
+    return Semantics(
+      button: true,
+      enabled: true,
+      label: _getAccessibilityLabel(),
+      hint: _getAccessibilityHint(),
+      child: GestureDetector(
+        onTap: _handleTap,
+        child: AnimatedBuilder(
+          animation: Listenable.merge([_rippleAnimation, _pulseAnimation]),
+          builder: (context, child) {
+            return Container(
+              width: AppThemeConfig.largeTouchTarget * 2,
+              height: AppThemeConfig.largeTouchTarget * 2,
+              decoration: BoxDecoration(
+                shape: BoxShape.circle,
+                color: _getButtonColor(theme),
+                boxShadow: [
+                  if (!isHighContrast)
+                    BoxShadow(
+                      color: theme.colorScheme.primary.withOpacity(0.3),
+                      blurRadius: widget.isListening ? 20 : 10,
+                      spreadRadius: widget.isListening ? 5 : 0,
+                    ),
+                ],
+              ),
+              child: Stack(
+                alignment: Alignment.center,
+                children: [
+                  // Ripple effect for listening
+                  if (widget.isListening)
+                    Container(
+                      width: AppThemeConfig.largeTouchTarget * 2 * _rippleAnimation.value,
+                      height: AppThemeConfig.largeTouchTarget * 2 * _rippleAnimation.value,
+                      decoration: BoxDecoration(
+                        shape: BoxShape.circle,
+                        border: Border.all(
+                          color: theme.colorScheme.primary.withOpacity(
+                            1.0 - _rippleAnimation.value,
+                          ),
+                          width: 2,
+                        ),
+                      ),
+                    ),
+                  
+                  // Main button content
+                  Transform.scale(
+                    scale: widget.isProcessing ? _pulseAnimation.value : 1.0,
+                    child: Container(
+                      width: AppThemeConfig.largeTouchTarget * 1.5,
+                      height: AppThemeConfig.largeTouchTarget * 1.5,
+                      decoration: BoxDecoration(
+                        shape: BoxShape.circle,
+                        color: theme.colorScheme.primary,
+                        border: isHighContrast 
+                            ? Border.all(
+                                color: theme.colorScheme.onPrimary,
+                                width: 2,
+                              )
+                            : null,
+                      ),
+                      child: Icon(
+                        _getIcon(),
+                        size: AppThemeConfig.textSizeXLarge + 8,
+                        color: theme.colorScheme.onPrimary,
+                      ),
+                    ),
+                  ),
+                ],
+              ),
+            );
+          },
+        ),
+      ),
+    );
+  }
+
+  bool _isHighContrastTheme(ThemeData theme) {
+    return theme.colorScheme.background == AppThemeConfig.highContrastBackground;
+  }
+
+  Color _getButtonColor(ThemeData theme) {
+    if (widget.isListening) {
+      return theme.colorScheme.primary.withOpacity(0.1);
+    }
+    return theme.colorScheme.surface;
+  }
+
+  IconData _getIcon() {
+    if (widget.isListening) {
+      return Icons.stop;
+    } else if (widget.isProcessing) {
+      return Icons.hourglass_bottom;
+    }
+    return Icons.mic;
+  }
+
+  String _getAccessibilityLabel() {
+    if (widget.isListening) {
+      return 'Stop listening';
+    } else if (widget.isProcessing) {
+      return 'Processing your request';
+    }
+    return 'Start voice input';
+  }
+
+  String _getAccessibilityHint() {
+    if (widget.isListening) {
+      return 'Tap to stop listening';
+    } else if (widget.isProcessing) {
+      return 'Please wait while processing';
+    }
+    return 'Tap to start talking to PetitPal';
+  }
+
+  void _handleTap() {
+    if (widget.isProcessing) return; // Don't allow interaction while processing
+    
+    // Provide haptic feedback
+    HapticFeedback.lightImpact();
+    
+    // Call the onPressed callback
+    widget.onPressed();
+  }
+}
diff --git a/petitpal/lib/src/worker_api.dart b/petitpal/lib/src/worker_api.dart
index bee68c7..d9b6e38 100644
--- a/petitpal/lib/src/worker_api.dart
+++ b/petitpal/lib/src/worker_api.dart
@@ -1,32 +1 @@
-import 'dart:convert';
-import 'package:http/http.dart' as http;
-import 'package:uuid/uuid.dart';
-import '../config/internal_config.dart';
-import 'providers/llm_keys.dart';
-
-class WorkerApi {
-  static String? _deviceId;
-  static Future<String> _ensureDevice() async { _deviceId ??= const Uuid().v4(); return _deviceId!; }
-
-  static Future<String?> chat({required String text}) async {
-    final device = await _ensureDevice();
-    final provider = await LlmKeys.selectedProvider() ?? 'openai';
-    final key = await LlmKeys.keyFor(provider);
-    final url = Uri.parse("${InternalConfig.workerBaseUrl}/api/chat");
-    final r = await http.post(url,
-      headers: {
-        "Content-Type": "application/json",
-        "X-Device-ID": device,
-        "X-Provider": provider,
-        if (key != null && key.isNotEmpty) "X-Api-Key": key,
-      },
-      body: jsonEncode({"text": text}),
-    );
-    if (r.statusCode == 200) {
-      final data = jsonDecode(r.body) as Map<String, dynamic>;
-      return data["summary_tts"] ?? data["text"];
-    } else {
-      return "I couldn't get an answer right now. (${r.statusCode})";
-    }
-  }
-}
+'"$@"'
diff --git a/petitpal/lib/src/worker_api/worker_api.dart b/petitpal/lib/src/worker_api/worker_api.dart
index bb97232..f5b118f 100644
--- a/petitpal/lib/src/worker_api/worker_api.dart
+++ b/petitpal/lib/src/worker_api/worker_api.dart
@@ -1,29 +1,29 @@
-import 'dart:convert';
-import 'package:http/http.dart' as http;
-import '../../config/api_config.dart';
-
-class WorkerApi {
-  static Future<Map<String, dynamic>> createInvite(String deviceId, String memberName) async {
-    final r = await http.post(Uri.parse('${ApiConfig.baseUrl}/api/family/create_invite'),
-      headers: {'Content-Type': 'application/json','X-Device-ID': deviceId},
-      body: jsonEncode({'member_name': memberName}));
-    if (r.statusCode != 200) { throw Exception('create_invite failed ${r.statusCode} ${r.body}'); }
-    return jsonDecode(r.body) as Map<String, dynamic>;
-  }
-
-  static Future<Map<String, dynamic>> acceptInvite(String deviceId, String inviteToken) async {
-    final r = await http.post(Uri.parse('${ApiConfig.baseUrl}/api/family/accept_invite'),
-      headers: {'Content-Type': 'application/json','X-Device-ID': deviceId},
-      body: jsonEncode({'invite_token': inviteToken}));
-    if (r.statusCode != 200) { throw Exception('accept_invite failed ${r.statusCode} ${r.body}'); }
-    return jsonDecode(r.body) as Map<String, dynamic>;
-  }
-
-  static Future<Map<String, dynamic>> saveEncryptedBackup(String deviceId, Map<String, dynamic> payload) async {
-    final r = await http.post(Uri.parse('${ApiConfig.baseUrl}/api/keys/save'),
-      headers: {'Content-Type': 'application/json','X-Device-ID': deviceId},
-      body: jsonEncode(payload));
-    if (r.statusCode != 200) { throw Exception('keys/save failed ${r.statusCode} ${r.body}'); }
-    return jsonDecode(r.body) as Map<String, dynamic>;
-  }
-}
+import 'dart:convert';
+import 'package:http/http.dart' as http;
+import '../../config/api_config.dart';
+
+class WorkerApi {
+  static Future<Map<String, dynamic>> createInvite(String deviceId, String memberName) async {
+    final r = await http.post(Uri.parse('${ApiConfig.baseUrl}/api/family/create_invite'),
+      headers: {'Content-Type': 'application/json','X-Device-ID': deviceId},
+      body: jsonEncode({'member_name': memberName}));
+    if (r.statusCode != 200) { throw Exception('create_invite failed ${r.statusCode} ${r.body}'); }
+    return jsonDecode(r.body) as Map<String, dynamic>;
+  }
+
+  static Future<Map<String, dynamic>> acceptInvite(String deviceId, String inviteToken) async {
+    final r = await http.post(Uri.parse('${ApiConfig.baseUrl}/api/family/accept_invite'),
+      headers: {'Content-Type': 'application/json','X-Device-ID': deviceId},
+      body: jsonEncode({'invite_token': inviteToken}));
+    if (r.statusCode != 200) { throw Exception('accept_invite failed ${r.statusCode} ${r.body}'); }
+    return jsonDecode(r.body) as Map<String, dynamic>;
+  }
+
+  static Future<Map<String, dynamic>> saveEncryptedBackup(String deviceId, Map<String, dynamic> payload) async {
+    final r = await http.post(Uri.parse('${ApiConfig.baseUrl}/api/keys/save'),
+      headers: {'Content-Type': 'application/json','X-Device-ID': deviceId},
+      body: jsonEncode(payload));
+    if (r.statusCode != 200) { throw Exception('keys/save failed ${r.statusCode} ${r.body}'); }
+    return jsonDecode(r.body) as Map<String, dynamic>;
+  }
+}
diff --git a/petitpal/linux/.gitignore b/petitpal/linux/.gitignore
index d3896c9..c7ea17f 100644
--- a/petitpal/linux/.gitignore
+++ b/petitpal/linux/.gitignore
@@ -1 +1 @@
-flutter/ephemeral
+flutter/ephemeral
diff --git a/petitpal/linux/CMakeLists.txt b/petitpal/linux/CMakeLists.txt
index ae007f1..f01485e 100644
--- a/petitpal/linux/CMakeLists.txt
+++ b/petitpal/linux/CMakeLists.txt
@@ -1,128 +1,128 @@
-# Project-level configuration.
-cmake_minimum_required(VERSION 3.13)
-project(runner LANGUAGES CXX)
-
-# The name of the executable created for the application. Change this to change
-# the on-disk name of your application.
-set(BINARY_NAME "petitpal")
-# The unique GTK application identifier for this application. See:
-# https://wiki.gnome.org/HowDoI/ChooseApplicationID
-set(APPLICATION_ID "com.example.petitpal")
-
-# Explicitly opt in to modern CMake behaviors to avoid warnings with recent
-# versions of CMake.
-cmake_policy(SET CMP0063 NEW)
-
-# Load bundled libraries from the lib/ directory relative to the binary.
-set(CMAKE_INSTALL_RPATH "$ORIGIN/lib")
-
-# Root filesystem for cross-building.
-if(FLUTTER_TARGET_PLATFORM_SYSROOT)
-  set(CMAKE_SYSROOT ${FLUTTER_TARGET_PLATFORM_SYSROOT})
-  set(CMAKE_FIND_ROOT_PATH ${CMAKE_SYSROOT})
-  set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)
-  set(CMAKE_FIND_ROOT_PATH_MODE_PACKAGE ONLY)
-  set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
-  set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)
-endif()
-
-# Define build configuration options.
-if(NOT CMAKE_BUILD_TYPE AND NOT CMAKE_CONFIGURATION_TYPES)
-  set(CMAKE_BUILD_TYPE "Debug" CACHE
-    STRING "Flutter build mode" FORCE)
-  set_property(CACHE CMAKE_BUILD_TYPE PROPERTY STRINGS
-    "Debug" "Profile" "Release")
-endif()
-
-# Compilation settings that should be applied to most targets.
-#
-# Be cautious about adding new options here, as plugins use this function by
-# default. In most cases, you should add new options to specific targets instead
-# of modifying this function.
-function(APPLY_STANDARD_SETTINGS TARGET)
-  target_compile_features(${TARGET} PUBLIC cxx_std_14)
-  target_compile_options(${TARGET} PRIVATE -Wall -Werror)
-  target_compile_options(${TARGET} PRIVATE "$<$<NOT:$<CONFIG:Debug>>:-O3>")
-  target_compile_definitions(${TARGET} PRIVATE "$<$<NOT:$<CONFIG:Debug>>:NDEBUG>")
-endfunction()
-
-# Flutter library and tool build rules.
-set(FLUTTER_MANAGED_DIR "${CMAKE_CURRENT_SOURCE_DIR}/flutter")
-add_subdirectory(${FLUTTER_MANAGED_DIR})
-
-# System-level dependencies.
-find_package(PkgConfig REQUIRED)
-pkg_check_modules(GTK REQUIRED IMPORTED_TARGET gtk+-3.0)
-
-# Application build; see runner/CMakeLists.txt.
-add_subdirectory("runner")
-
-# Run the Flutter tool portions of the build. This must not be removed.
-add_dependencies(${BINARY_NAME} flutter_assemble)
-
-# Only the install-generated bundle's copy of the executable will launch
-# correctly, since the resources must in the right relative locations. To avoid
-# people trying to run the unbundled copy, put it in a subdirectory instead of
-# the default top-level location.
-set_target_properties(${BINARY_NAME}
-  PROPERTIES
-  RUNTIME_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/intermediates_do_not_run"
-)
-
-
-# Generated plugin build rules, which manage building the plugins and adding
-# them to the application.
-include(flutter/generated_plugins.cmake)
-
-
-# === Installation ===
-# By default, "installing" just makes a relocatable bundle in the build
-# directory.
-set(BUILD_BUNDLE_DIR "${PROJECT_BINARY_DIR}/bundle")
-if(CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT)
-  set(CMAKE_INSTALL_PREFIX "${BUILD_BUNDLE_DIR}" CACHE PATH "..." FORCE)
-endif()
-
-# Start with a clean build bundle directory every time.
-install(CODE "
-  file(REMOVE_RECURSE \"${BUILD_BUNDLE_DIR}/\")
-  " COMPONENT Runtime)
-
-set(INSTALL_BUNDLE_DATA_DIR "${CMAKE_INSTALL_PREFIX}/data")
-set(INSTALL_BUNDLE_LIB_DIR "${CMAKE_INSTALL_PREFIX}/lib")
-
-install(TARGETS ${BINARY_NAME} RUNTIME DESTINATION "${CMAKE_INSTALL_PREFIX}"
-  COMPONENT Runtime)
-
-install(FILES "${FLUTTER_ICU_DATA_FILE}" DESTINATION "${INSTALL_BUNDLE_DATA_DIR}"
-  COMPONENT Runtime)
-
-install(FILES "${FLUTTER_LIBRARY}" DESTINATION "${INSTALL_BUNDLE_LIB_DIR}"
-  COMPONENT Runtime)
-
-foreach(bundled_library ${PLUGIN_BUNDLED_LIBRARIES})
-  install(FILES "${bundled_library}"
-    DESTINATION "${INSTALL_BUNDLE_LIB_DIR}"
-    COMPONENT Runtime)
-endforeach(bundled_library)
-
-# Copy the native assets provided by the build.dart from all packages.
-set(NATIVE_ASSETS_DIR "${PROJECT_BUILD_DIR}native_assets/linux/")
-install(DIRECTORY "${NATIVE_ASSETS_DIR}"
-   DESTINATION "${INSTALL_BUNDLE_LIB_DIR}"
-   COMPONENT Runtime)
-
-# Fully re-copy the assets directory on each build to avoid having stale files
-# from a previous install.
-set(FLUTTER_ASSET_DIR_NAME "flutter_assets")
-install(CODE "
-  file(REMOVE_RECURSE \"${INSTALL_BUNDLE_DATA_DIR}/${FLUTTER_ASSET_DIR_NAME}\")
-  " COMPONENT Runtime)
-install(DIRECTORY "${PROJECT_BUILD_DIR}/${FLUTTER_ASSET_DIR_NAME}"
-  DESTINATION "${INSTALL_BUNDLE_DATA_DIR}" COMPONENT Runtime)
-
-# Install the AOT library on non-Debug builds only.
-if(NOT CMAKE_BUILD_TYPE MATCHES "Debug")
-  install(FILES "${AOT_LIBRARY}" DESTINATION "${INSTALL_BUNDLE_LIB_DIR}"
-    COMPONENT Runtime)
-endif()
+# Project-level configuration.
+cmake_minimum_required(VERSION 3.13)
+project(runner LANGUAGES CXX)
+
+# The name of the executable created for the application. Change this to change
+# the on-disk name of your application.
+set(BINARY_NAME "petitpal")
+# The unique GTK application identifier for this application. See:
+# https://wiki.gnome.org/HowDoI/ChooseApplicationID
+set(APPLICATION_ID "com.example.petitpal")
+
+# Explicitly opt in to modern CMake behaviors to avoid warnings with recent
+# versions of CMake.
+cmake_policy(SET CMP0063 NEW)
+
+# Load bundled libraries from the lib/ directory relative to the binary.
+set(CMAKE_INSTALL_RPATH "$ORIGIN/lib")
+
+# Root filesystem for cross-building.
+if(FLUTTER_TARGET_PLATFORM_SYSROOT)
+  set(CMAKE_SYSROOT ${FLUTTER_TARGET_PLATFORM_SYSROOT})
+  set(CMAKE_FIND_ROOT_PATH ${CMAKE_SYSROOT})
+  set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)
+  set(CMAKE_FIND_ROOT_PATH_MODE_PACKAGE ONLY)
+  set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
+  set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)
+endif()
+
+# Define build configuration options.
+if(NOT CMAKE_BUILD_TYPE AND NOT CMAKE_CONFIGURATION_TYPES)
+  set(CMAKE_BUILD_TYPE "Debug" CACHE
+    STRING "Flutter build mode" FORCE)
+  set_property(CACHE CMAKE_BUILD_TYPE PROPERTY STRINGS
+    "Debug" "Profile" "Release")
+endif()
+
+# Compilation settings that should be applied to most targets.
+#
+# Be cautious about adding new options here, as plugins use this function by
+# default. In most cases, you should add new options to specific targets instead
+# of modifying this function.
+function(APPLY_STANDARD_SETTINGS TARGET)
+  target_compile_features(${TARGET} PUBLIC cxx_std_14)
+  target_compile_options(${TARGET} PRIVATE -Wall -Werror)
+  target_compile_options(${TARGET} PRIVATE "$<$<NOT:$<CONFIG:Debug>>:-O3>")
+  target_compile_definitions(${TARGET} PRIVATE "$<$<NOT:$<CONFIG:Debug>>:NDEBUG>")
+endfunction()
+
+# Flutter library and tool build rules.
+set(FLUTTER_MANAGED_DIR "${CMAKE_CURRENT_SOURCE_DIR}/flutter")
+add_subdirectory(${FLUTTER_MANAGED_DIR})
+
+# System-level dependencies.
+find_package(PkgConfig REQUIRED)
+pkg_check_modules(GTK REQUIRED IMPORTED_TARGET gtk+-3.0)
+
+# Application build; see runner/CMakeLists.txt.
+add_subdirectory("runner")
+
+# Run the Flutter tool portions of the build. This must not be removed.
+add_dependencies(${BINARY_NAME} flutter_assemble)
+
+# Only the install-generated bundle's copy of the executable will launch
+# correctly, since the resources must in the right relative locations. To avoid
+# people trying to run the unbundled copy, put it in a subdirectory instead of
+# the default top-level location.
+set_target_properties(${BINARY_NAME}
+  PROPERTIES
+  RUNTIME_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/intermediates_do_not_run"
+)
+
+
+# Generated plugin build rules, which manage building the plugins and adding
+# them to the application.
+include(flutter/generated_plugins.cmake)
+
+
+# === Installation ===
+# By default, "installing" just makes a relocatable bundle in the build
+# directory.
+set(BUILD_BUNDLE_DIR "${PROJECT_BINARY_DIR}/bundle")
+if(CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT)
+  set(CMAKE_INSTALL_PREFIX "${BUILD_BUNDLE_DIR}" CACHE PATH "..." FORCE)
+endif()
+
+# Start with a clean build bundle directory every time.
+install(CODE "
+  file(REMOVE_RECURSE \"${BUILD_BUNDLE_DIR}/\")
+  " COMPONENT Runtime)
+
+set(INSTALL_BUNDLE_DATA_DIR "${CMAKE_INSTALL_PREFIX}/data")
+set(INSTALL_BUNDLE_LIB_DIR "${CMAKE_INSTALL_PREFIX}/lib")
+
+install(TARGETS ${BINARY_NAME} RUNTIME DESTINATION "${CMAKE_INSTALL_PREFIX}"
+  COMPONENT Runtime)
+
+install(FILES "${FLUTTER_ICU_DATA_FILE}" DESTINATION "${INSTALL_BUNDLE_DATA_DIR}"
+  COMPONENT Runtime)
+
+install(FILES "${FLUTTER_LIBRARY}" DESTINATION "${INSTALL_BUNDLE_LIB_DIR}"
+  COMPONENT Runtime)
+
+foreach(bundled_library ${PLUGIN_BUNDLED_LIBRARIES})
+  install(FILES "${bundled_library}"
+    DESTINATION "${INSTALL_BUNDLE_LIB_DIR}"
+    COMPONENT Runtime)
+endforeach(bundled_library)
+
+# Copy the native assets provided by the build.dart from all packages.
+set(NATIVE_ASSETS_DIR "${PROJECT_BUILD_DIR}native_assets/linux/")
+install(DIRECTORY "${NATIVE_ASSETS_DIR}"
+   DESTINATION "${INSTALL_BUNDLE_LIB_DIR}"
+   COMPONENT Runtime)
+
+# Fully re-copy the assets directory on each build to avoid having stale files
+# from a previous install.
+set(FLUTTER_ASSET_DIR_NAME "flutter_assets")
+install(CODE "
+  file(REMOVE_RECURSE \"${INSTALL_BUNDLE_DATA_DIR}/${FLUTTER_ASSET_DIR_NAME}\")
+  " COMPONENT Runtime)
+install(DIRECTORY "${PROJECT_BUILD_DIR}/${FLUTTER_ASSET_DIR_NAME}"
+  DESTINATION "${INSTALL_BUNDLE_DATA_DIR}" COMPONENT Runtime)
+
+# Install the AOT library on non-Debug builds only.
+if(NOT CMAKE_BUILD_TYPE MATCHES "Debug")
+  install(FILES "${AOT_LIBRARY}" DESTINATION "${INSTALL_BUNDLE_LIB_DIR}"
+    COMPONENT Runtime)
+endif()
diff --git a/petitpal/linux/flutter/CMakeLists.txt b/petitpal/linux/flutter/CMakeLists.txt
index d5bd016..27860e8 100644
--- a/petitpal/linux/flutter/CMakeLists.txt
+++ b/petitpal/linux/flutter/CMakeLists.txt
@@ -1,88 +1,88 @@
-# This file controls Flutter-level build steps. It should not be edited.
-cmake_minimum_required(VERSION 3.10)
-
-set(EPHEMERAL_DIR "${CMAKE_CURRENT_SOURCE_DIR}/ephemeral")
-
-# Configuration provided via flutter tool.
-include(${EPHEMERAL_DIR}/generated_config.cmake)
-
-# TODO: Move the rest of this into files in ephemeral. See
-# https://github.com/flutter/flutter/issues/57146.
-
-# Serves the same purpose as list(TRANSFORM ... PREPEND ...),
-# which isn't available in 3.10.
-function(list_prepend LIST_NAME PREFIX)
-    set(NEW_LIST "")
-    foreach(element ${${LIST_NAME}})
-        list(APPEND NEW_LIST "${PREFIX}${element}")
-    endforeach(element)
-    set(${LIST_NAME} "${NEW_LIST}" PARENT_SCOPE)
-endfunction()
-
-# === Flutter Library ===
-# System-level dependencies.
-find_package(PkgConfig REQUIRED)
-pkg_check_modules(GTK REQUIRED IMPORTED_TARGET gtk+-3.0)
-pkg_check_modules(GLIB REQUIRED IMPORTED_TARGET glib-2.0)
-pkg_check_modules(GIO REQUIRED IMPORTED_TARGET gio-2.0)
-
-set(FLUTTER_LIBRARY "${EPHEMERAL_DIR}/libflutter_linux_gtk.so")
-
-# Published to parent scope for install step.
-set(FLUTTER_LIBRARY ${FLUTTER_LIBRARY} PARENT_SCOPE)
-set(FLUTTER_ICU_DATA_FILE "${EPHEMERAL_DIR}/icudtl.dat" PARENT_SCOPE)
-set(PROJECT_BUILD_DIR "${PROJECT_DIR}/build/" PARENT_SCOPE)
-set(AOT_LIBRARY "${PROJECT_DIR}/build/lib/libapp.so" PARENT_SCOPE)
-
-list(APPEND FLUTTER_LIBRARY_HEADERS
-  "fl_basic_message_channel.h"
-  "fl_binary_codec.h"
-  "fl_binary_messenger.h"
-  "fl_dart_project.h"
-  "fl_engine.h"
-  "fl_json_message_codec.h"
-  "fl_json_method_codec.h"
-  "fl_message_codec.h"
-  "fl_method_call.h"
-  "fl_method_channel.h"
-  "fl_method_codec.h"
-  "fl_method_response.h"
-  "fl_plugin_registrar.h"
-  "fl_plugin_registry.h"
-  "fl_standard_message_codec.h"
-  "fl_standard_method_codec.h"
-  "fl_string_codec.h"
-  "fl_value.h"
-  "fl_view.h"
-  "flutter_linux.h"
-)
-list_prepend(FLUTTER_LIBRARY_HEADERS "${EPHEMERAL_DIR}/flutter_linux/")
-add_library(flutter INTERFACE)
-target_include_directories(flutter INTERFACE
-  "${EPHEMERAL_DIR}"
-)
-target_link_libraries(flutter INTERFACE "${FLUTTER_LIBRARY}")
-target_link_libraries(flutter INTERFACE
-  PkgConfig::GTK
-  PkgConfig::GLIB
-  PkgConfig::GIO
-)
-add_dependencies(flutter flutter_assemble)
-
-# === Flutter tool backend ===
-# _phony_ is a non-existent file to force this command to run every time,
-# since currently there's no way to get a full input/output list from the
-# flutter tool.
-add_custom_command(
-  OUTPUT ${FLUTTER_LIBRARY} ${FLUTTER_LIBRARY_HEADERS}
-    ${CMAKE_CURRENT_BINARY_DIR}/_phony_
-  COMMAND ${CMAKE_COMMAND} -E env
-    ${FLUTTER_TOOL_ENVIRONMENT}
-    "${FLUTTER_ROOT}/packages/flutter_tools/bin/tool_backend.sh"
-      ${FLUTTER_TARGET_PLATFORM} ${CMAKE_BUILD_TYPE}
-  VERBATIM
-)
-add_custom_target(flutter_assemble DEPENDS
-  "${FLUTTER_LIBRARY}"
-  ${FLUTTER_LIBRARY_HEADERS}
-)
+# This file controls Flutter-level build steps. It should not be edited.
+cmake_minimum_required(VERSION 3.10)
+
+set(EPHEMERAL_DIR "${CMAKE_CURRENT_SOURCE_DIR}/ephemeral")
+
+# Configuration provided via flutter tool.
+include(${EPHEMERAL_DIR}/generated_config.cmake)
+
+# TODO: Move the rest of this into files in ephemeral. See
+# https://github.com/flutter/flutter/issues/57146.
+
+# Serves the same purpose as list(TRANSFORM ... PREPEND ...),
+# which isn't available in 3.10.
+function(list_prepend LIST_NAME PREFIX)
+    set(NEW_LIST "")
+    foreach(element ${${LIST_NAME}})
+        list(APPEND NEW_LIST "${PREFIX}${element}")
+    endforeach(element)
+    set(${LIST_NAME} "${NEW_LIST}" PARENT_SCOPE)
+endfunction()
+
+# === Flutter Library ===
+# System-level dependencies.
+find_package(PkgConfig REQUIRED)
+pkg_check_modules(GTK REQUIRED IMPORTED_TARGET gtk+-3.0)
+pkg_check_modules(GLIB REQUIRED IMPORTED_TARGET glib-2.0)
+pkg_check_modules(GIO REQUIRED IMPORTED_TARGET gio-2.0)
+
+set(FLUTTER_LIBRARY "${EPHEMERAL_DIR}/libflutter_linux_gtk.so")
+
+# Published to parent scope for install step.
+set(FLUTTER_LIBRARY ${FLUTTER_LIBRARY} PARENT_SCOPE)
+set(FLUTTER_ICU_DATA_FILE "${EPHEMERAL_DIR}/icudtl.dat" PARENT_SCOPE)
+set(PROJECT_BUILD_DIR "${PROJECT_DIR}/build/" PARENT_SCOPE)
+set(AOT_LIBRARY "${PROJECT_DIR}/build/lib/libapp.so" PARENT_SCOPE)
+
+list(APPEND FLUTTER_LIBRARY_HEADERS
+  "fl_basic_message_channel.h"
+  "fl_binary_codec.h"
+  "fl_binary_messenger.h"
+  "fl_dart_project.h"
+  "fl_engine.h"
+  "fl_json_message_codec.h"
+  "fl_json_method_codec.h"
+  "fl_message_codec.h"
+  "fl_method_call.h"
+  "fl_method_channel.h"
+  "fl_method_codec.h"
+  "fl_method_response.h"
+  "fl_plugin_registrar.h"
+  "fl_plugin_registry.h"
+  "fl_standard_message_codec.h"
+  "fl_standard_method_codec.h"
+  "fl_string_codec.h"
+  "fl_value.h"
+  "fl_view.h"
+  "flutter_linux.h"
+)
+list_prepend(FLUTTER_LIBRARY_HEADERS "${EPHEMERAL_DIR}/flutter_linux/")
+add_library(flutter INTERFACE)
+target_include_directories(flutter INTERFACE
+  "${EPHEMERAL_DIR}"
+)
+target_link_libraries(flutter INTERFACE "${FLUTTER_LIBRARY}")
+target_link_libraries(flutter INTERFACE
+  PkgConfig::GTK
+  PkgConfig::GLIB
+  PkgConfig::GIO
+)
+add_dependencies(flutter flutter_assemble)
+
+# === Flutter tool backend ===
+# _phony_ is a non-existent file to force this command to run every time,
+# since currently there's no way to get a full input/output list from the
+# flutter tool.
+add_custom_command(
+  OUTPUT ${FLUTTER_LIBRARY} ${FLUTTER_LIBRARY_HEADERS}
+    ${CMAKE_CURRENT_BINARY_DIR}/_phony_
+  COMMAND ${CMAKE_COMMAND} -E env
+    ${FLUTTER_TOOL_ENVIRONMENT}
+    "${FLUTTER_ROOT}/packages/flutter_tools/bin/tool_backend.sh"
+      ${FLUTTER_TARGET_PLATFORM} ${CMAKE_BUILD_TYPE}
+  VERBATIM
+)
+add_custom_target(flutter_assemble DEPENDS
+  "${FLUTTER_LIBRARY}"
+  ${FLUTTER_LIBRARY_HEADERS}
+)
diff --git a/petitpal/linux/runner/CMakeLists.txt b/petitpal/linux/runner/CMakeLists.txt
index e97dabc..7ed6f3e 100644
--- a/petitpal/linux/runner/CMakeLists.txt
+++ b/petitpal/linux/runner/CMakeLists.txt
@@ -1,26 +1,26 @@
-cmake_minimum_required(VERSION 3.13)
-project(runner LANGUAGES CXX)
-
-# Define the application target. To change its name, change BINARY_NAME in the
-# top-level CMakeLists.txt, not the value here, or `flutter run` will no longer
-# work.
-#
-# Any new source files that you add to the application should be added here.
-add_executable(${BINARY_NAME}
-  "main.cc"
-  "my_application.cc"
-  "${FLUTTER_MANAGED_DIR}/generated_plugin_registrant.cc"
-)
-
-# Apply the standard set of build settings. This can be removed for applications
-# that need different build settings.
-apply_standard_settings(${BINARY_NAME})
-
-# Add preprocessor definitions for the application ID.
-add_definitions(-DAPPLICATION_ID="${APPLICATION_ID}")
-
-# Add dependency libraries. Add any application-specific dependencies here.
-target_link_libraries(${BINARY_NAME} PRIVATE flutter)
-target_link_libraries(${BINARY_NAME} PRIVATE PkgConfig::GTK)
-
-target_include_directories(${BINARY_NAME} PRIVATE "${CMAKE_SOURCE_DIR}")
+cmake_minimum_required(VERSION 3.13)
+project(runner LANGUAGES CXX)
+
+# Define the application target. To change its name, change BINARY_NAME in the
+# top-level CMakeLists.txt, not the value here, or `flutter run` will no longer
+# work.
+#
+# Any new source files that you add to the application should be added here.
+add_executable(${BINARY_NAME}
+  "main.cc"
+  "my_application.cc"
+  "${FLUTTER_MANAGED_DIR}/generated_plugin_registrant.cc"
+)
+
+# Apply the standard set of build settings. This can be removed for applications
+# that need different build settings.
+apply_standard_settings(${BINARY_NAME})
+
+# Add preprocessor definitions for the application ID.
+add_definitions(-DAPPLICATION_ID="${APPLICATION_ID}")
+
+# Add dependency libraries. Add any application-specific dependencies here.
+target_link_libraries(${BINARY_NAME} PRIVATE flutter)
+target_link_libraries(${BINARY_NAME} PRIVATE PkgConfig::GTK)
+
+target_include_directories(${BINARY_NAME} PRIVATE "${CMAKE_SOURCE_DIR}")
diff --git a/petitpal/linux/runner/main.cc b/petitpal/linux/runner/main.cc
index e7c5c54..4340ffc 100644
--- a/petitpal/linux/runner/main.cc
+++ b/petitpal/linux/runner/main.cc
@@ -1,6 +1,6 @@
-#include "my_application.h"
-
-int main(int argc, char** argv) {
-  g_autoptr(MyApplication) app = my_application_new();
-  return g_application_run(G_APPLICATION(app), argc, argv);
-}
+#include "my_application.h"
+
+int main(int argc, char** argv) {
+  g_autoptr(MyApplication) app = my_application_new();
+  return g_application_run(G_APPLICATION(app), argc, argv);
+}
diff --git a/petitpal/linux/runner/my_application.cc b/petitpal/linux/runner/my_application.cc
index bfe36f4..ec72c10 100644
--- a/petitpal/linux/runner/my_application.cc
+++ b/petitpal/linux/runner/my_application.cc
@@ -1,130 +1,130 @@
-#include "my_application.h"
-
-#include <flutter_linux/flutter_linux.h>
-#ifdef GDK_WINDOWING_X11
-#include <gdk/gdkx.h>
-#endif
-
-#include "flutter/generated_plugin_registrant.h"
-
-struct _MyApplication {
-  GtkApplication parent_instance;
-  char** dart_entrypoint_arguments;
-};
-
-G_DEFINE_TYPE(MyApplication, my_application, GTK_TYPE_APPLICATION)
-
-// Implements GApplication::activate.
-static void my_application_activate(GApplication* application) {
-  MyApplication* self = MY_APPLICATION(application);
-  GtkWindow* window =
-      GTK_WINDOW(gtk_application_window_new(GTK_APPLICATION(application)));
-
-  // Use a header bar when running in GNOME as this is the common style used
-  // by applications and is the setup most users will be using (e.g. Ubuntu
-  // desktop).
-  // If running on X and not using GNOME then just use a traditional title bar
-  // in case the window manager does more exotic layout, e.g. tiling.
-  // If running on Wayland assume the header bar will work (may need changing
-  // if future cases occur).
-  gboolean use_header_bar = TRUE;
-#ifdef GDK_WINDOWING_X11
-  GdkScreen* screen = gtk_window_get_screen(window);
-  if (GDK_IS_X11_SCREEN(screen)) {
-    const gchar* wm_name = gdk_x11_screen_get_window_manager_name(screen);
-    if (g_strcmp0(wm_name, "GNOME Shell") != 0) {
-      use_header_bar = FALSE;
-    }
-  }
-#endif
-  if (use_header_bar) {
-    GtkHeaderBar* header_bar = GTK_HEADER_BAR(gtk_header_bar_new());
-    gtk_widget_show(GTK_WIDGET(header_bar));
-    gtk_header_bar_set_title(header_bar, "petitpal");
-    gtk_header_bar_set_show_close_button(header_bar, TRUE);
-    gtk_window_set_titlebar(window, GTK_WIDGET(header_bar));
-  } else {
-    gtk_window_set_title(window, "petitpal");
-  }
-
-  gtk_window_set_default_size(window, 1280, 720);
-  gtk_widget_show(GTK_WIDGET(window));
-
-  g_autoptr(FlDartProject) project = fl_dart_project_new();
-  fl_dart_project_set_dart_entrypoint_arguments(project, self->dart_entrypoint_arguments);
-
-  FlView* view = fl_view_new(project);
-  gtk_widget_show(GTK_WIDGET(view));
-  gtk_container_add(GTK_CONTAINER(window), GTK_WIDGET(view));
-
-  fl_register_plugins(FL_PLUGIN_REGISTRY(view));
-
-  gtk_widget_grab_focus(GTK_WIDGET(view));
-}
-
-// Implements GApplication::local_command_line.
-static gboolean my_application_local_command_line(GApplication* application, gchar*** arguments, int* exit_status) {
-  MyApplication* self = MY_APPLICATION(application);
-  // Strip out the first argument as it is the binary name.
-  self->dart_entrypoint_arguments = g_strdupv(*arguments + 1);
-
-  g_autoptr(GError) error = nullptr;
-  if (!g_application_register(application, nullptr, &error)) {
-     g_warning("Failed to register: %s", error->message);
-     *exit_status = 1;
-     return TRUE;
-  }
-
-  g_application_activate(application);
-  *exit_status = 0;
-
-  return TRUE;
-}
-
-// Implements GApplication::startup.
-static void my_application_startup(GApplication* application) {
-  //MyApplication* self = MY_APPLICATION(object);
-
-  // Perform any actions required at application startup.
-
-  G_APPLICATION_CLASS(my_application_parent_class)->startup(application);
-}
-
-// Implements GApplication::shutdown.
-static void my_application_shutdown(GApplication* application) {
-  //MyApplication* self = MY_APPLICATION(object);
-
-  // Perform any actions required at application shutdown.
-
-  G_APPLICATION_CLASS(my_application_parent_class)->shutdown(application);
-}
-
-// Implements GObject::dispose.
-static void my_application_dispose(GObject* object) {
-  MyApplication* self = MY_APPLICATION(object);
-  g_clear_pointer(&self->dart_entrypoint_arguments, g_strfreev);
-  G_OBJECT_CLASS(my_application_parent_class)->dispose(object);
-}
-
-static void my_application_class_init(MyApplicationClass* klass) {
-  G_APPLICATION_CLASS(klass)->activate = my_application_activate;
-  G_APPLICATION_CLASS(klass)->local_command_line = my_application_local_command_line;
-  G_APPLICATION_CLASS(klass)->startup = my_application_startup;
-  G_APPLICATION_CLASS(klass)->shutdown = my_application_shutdown;
-  G_OBJECT_CLASS(klass)->dispose = my_application_dispose;
-}
-
-static void my_application_init(MyApplication* self) {}
-
-MyApplication* my_application_new() {
-  // Set the program name to the application ID, which helps various systems
-  // like GTK and desktop environments map this running application to its
-  // corresponding .desktop file. This ensures better integration by allowing
-  // the application to be recognized beyond its binary name.
-  g_set_prgname(APPLICATION_ID);
-
-  return MY_APPLICATION(g_object_new(my_application_get_type(),
-                                     "application-id", APPLICATION_ID,
-                                     "flags", G_APPLICATION_NON_UNIQUE,
-                                     nullptr));
-}
+#include "my_application.h"
+
+#include <flutter_linux/flutter_linux.h>
+#ifdef GDK_WINDOWING_X11
+#include <gdk/gdkx.h>
+#endif
+
+#include "flutter/generated_plugin_registrant.h"
+
+struct _MyApplication {
+  GtkApplication parent_instance;
+  char** dart_entrypoint_arguments;
+};
+
+G_DEFINE_TYPE(MyApplication, my_application, GTK_TYPE_APPLICATION)
+
+// Implements GApplication::activate.
+static void my_application_activate(GApplication* application) {
+  MyApplication* self = MY_APPLICATION(application);
+  GtkWindow* window =
+      GTK_WINDOW(gtk_application_window_new(GTK_APPLICATION(application)));
+
+  // Use a header bar when running in GNOME as this is the common style used
+  // by applications and is the setup most users will be using (e.g. Ubuntu
+  // desktop).
+  // If running on X and not using GNOME then just use a traditional title bar
+  // in case the window manager does more exotic layout, e.g. tiling.
+  // If running on Wayland assume the header bar will work (may need changing
+  // if future cases occur).
+  gboolean use_header_bar = TRUE;
+#ifdef GDK_WINDOWING_X11
+  GdkScreen* screen = gtk_window_get_screen(window);
+  if (GDK_IS_X11_SCREEN(screen)) {
+    const gchar* wm_name = gdk_x11_screen_get_window_manager_name(screen);
+    if (g_strcmp0(wm_name, "GNOME Shell") != 0) {
+      use_header_bar = FALSE;
+    }
+  }
+#endif
+  if (use_header_bar) {
+    GtkHeaderBar* header_bar = GTK_HEADER_BAR(gtk_header_bar_new());
+    gtk_widget_show(GTK_WIDGET(header_bar));
+    gtk_header_bar_set_title(header_bar, "petitpal");
+    gtk_header_bar_set_show_close_button(header_bar, TRUE);
+    gtk_window_set_titlebar(window, GTK_WIDGET(header_bar));
+  } else {
+    gtk_window_set_title(window, "petitpal");
+  }
+
+  gtk_window_set_default_size(window, 1280, 720);
+  gtk_widget_show(GTK_WIDGET(window));
+
+  g_autoptr(FlDartProject) project = fl_dart_project_new();
+  fl_dart_project_set_dart_entrypoint_arguments(project, self->dart_entrypoint_arguments);
+
+  FlView* view = fl_view_new(project);
+  gtk_widget_show(GTK_WIDGET(view));
+  gtk_container_add(GTK_CONTAINER(window), GTK_WIDGET(view));
+
+  fl_register_plugins(FL_PLUGIN_REGISTRY(view));
+
+  gtk_widget_grab_focus(GTK_WIDGET(view));
+}
+
+// Implements GApplication::local_command_line.
+static gboolean my_application_local_command_line(GApplication* application, gchar*** arguments, int* exit_status) {
+  MyApplication* self = MY_APPLICATION(application);
+  // Strip out the first argument as it is the binary name.
+  self->dart_entrypoint_arguments = g_strdupv(*arguments + 1);
+
+  g_autoptr(GError) error = nullptr;
+  if (!g_application_register(application, nullptr, &error)) {
+     g_warning("Failed to register: %s", error->message);
+     *exit_status = 1;
+     return TRUE;
+  }
+
+  g_application_activate(application);
+  *exit_status = 0;
+
+  return TRUE;
+}
+
+// Implements GApplication::startup.
+static void my_application_startup(GApplication* application) {
+  //MyApplication* self = MY_APPLICATION(object);
+
+  // Perform any actions required at application startup.
+
+  G_APPLICATION_CLASS(my_application_parent_class)->startup(application);
+}
+
+// Implements GApplication::shutdown.
+static void my_application_shutdown(GApplication* application) {
+  //MyApplication* self = MY_APPLICATION(object);
+
+  // Perform any actions required at application shutdown.
+
+  G_APPLICATION_CLASS(my_application_parent_class)->shutdown(application);
+}
+
+// Implements GObject::dispose.
+static void my_application_dispose(GObject* object) {
+  MyApplication* self = MY_APPLICATION(object);
+  g_clear_pointer(&self->dart_entrypoint_arguments, g_strfreev);
+  G_OBJECT_CLASS(my_application_parent_class)->dispose(object);
+}
+
+static void my_application_class_init(MyApplicationClass* klass) {
+  G_APPLICATION_CLASS(klass)->activate = my_application_activate;
+  G_APPLICATION_CLASS(klass)->local_command_line = my_application_local_command_line;
+  G_APPLICATION_CLASS(klass)->startup = my_application_startup;
+  G_APPLICATION_CLASS(klass)->shutdown = my_application_shutdown;
+  G_OBJECT_CLASS(klass)->dispose = my_application_dispose;
+}
+
+static void my_application_init(MyApplication* self) {}
+
+MyApplication* my_application_new() {
+  // Set the program name to the application ID, which helps various systems
+  // like GTK and desktop environments map this running application to its
+  // corresponding .desktop file. This ensures better integration by allowing
+  // the application to be recognized beyond its binary name.
+  g_set_prgname(APPLICATION_ID);
+
+  return MY_APPLICATION(g_object_new(my_application_get_type(),
+                                     "application-id", APPLICATION_ID,
+                                     "flags", G_APPLICATION_NON_UNIQUE,
+                                     nullptr));
+}
diff --git a/petitpal/linux/runner/my_application.h b/petitpal/linux/runner/my_application.h
index 72271d5..8f20fb5 100644
--- a/petitpal/linux/runner/my_application.h
+++ b/petitpal/linux/runner/my_application.h
@@ -1,18 +1,18 @@
-#ifndef FLUTTER_MY_APPLICATION_H_
-#define FLUTTER_MY_APPLICATION_H_
-
-#include <gtk/gtk.h>
-
-G_DECLARE_FINAL_TYPE(MyApplication, my_application, MY, APPLICATION,
-                     GtkApplication)
-
-/**
- * my_application_new:
- *
- * Creates a new Flutter-based application.
- *
- * Returns: a new #MyApplication.
- */
-MyApplication* my_application_new();
-
-#endif  // FLUTTER_MY_APPLICATION_H_
+#ifndef FLUTTER_MY_APPLICATION_H_
+#define FLUTTER_MY_APPLICATION_H_
+
+#include <gtk/gtk.h>
+
+G_DECLARE_FINAL_TYPE(MyApplication, my_application, MY, APPLICATION,
+                     GtkApplication)
+
+/**
+ * my_application_new:
+ *
+ * Creates a new Flutter-based application.
+ *
+ * Returns: a new #MyApplication.
+ */
+MyApplication* my_application_new();
+
+#endif  // FLUTTER_MY_APPLICATION_H_
diff --git a/petitpal/macos/.gitignore b/petitpal/macos/.gitignore
index 746adbb..d4e0569 100644
--- a/petitpal/macos/.gitignore
+++ b/petitpal/macos/.gitignore
@@ -1,7 +1,7 @@
-# Flutter-related
-**/Flutter/ephemeral/
-**/Pods/
-
-# Xcode-related
-**/dgph
-**/xcuserdata/
+# Flutter-related
+**/Flutter/ephemeral/
+**/Pods/
+
+# Xcode-related
+**/dgph
+**/xcuserdata/
diff --git a/petitpal/macos/Flutter/Flutter-Debug.xcconfig b/petitpal/macos/Flutter/Flutter-Debug.xcconfig
index c2efd0b..f022c34 100644
--- a/petitpal/macos/Flutter/Flutter-Debug.xcconfig
+++ b/petitpal/macos/Flutter/Flutter-Debug.xcconfig
@@ -1 +1 @@
-#include "ephemeral/Flutter-Generated.xcconfig"
+#include "ephemeral/Flutter-Generated.xcconfig"
diff --git a/petitpal/macos/Flutter/Flutter-Release.xcconfig b/petitpal/macos/Flutter/Flutter-Release.xcconfig
index c2efd0b..f022c34 100644
--- a/petitpal/macos/Flutter/Flutter-Release.xcconfig
+++ b/petitpal/macos/Flutter/Flutter-Release.xcconfig
@@ -1 +1 @@
-#include "ephemeral/Flutter-Generated.xcconfig"
+#include "ephemeral/Flutter-Generated.xcconfig"
diff --git a/petitpal/macos/Runner.xcodeproj/project.pbxproj b/petitpal/macos/Runner.xcodeproj/project.pbxproj
index ef4be2b..fa58575 100644
--- a/petitpal/macos/Runner.xcodeproj/project.pbxproj
+++ b/petitpal/macos/Runner.xcodeproj/project.pbxproj
@@ -1,705 +1,705 @@
-// !$*UTF8*$!
-{
-	archiveVersion = 1;
-	classes = {
-	};
-	objectVersion = 54;
-	objects = {
-
-/* Begin PBXAggregateTarget section */
-		33CC111A2044C6BA0003C045 /* Flutter Assemble */ = {
-			isa = PBXAggregateTarget;
-			buildConfigurationList = 33CC111B2044C6BA0003C045 /* Build configuration list for PBXAggregateTarget "Flutter Assemble" */;
-			buildPhases = (
-				33CC111E2044C6BF0003C045 /* ShellScript */,
-			);
-			dependencies = (
-			);
-			name = "Flutter Assemble";
-			productName = FLX;
-		};
-/* End PBXAggregateTarget section */
-
-/* Begin PBXBuildFile section */
-		331C80D8294CF71000263BE5 /* RunnerTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = 331C80D7294CF71000263BE5 /* RunnerTests.swift */; };
-		335BBD1B22A9A15E00E9071D /* GeneratedPluginRegistrant.swift in Sources */ = {isa = PBXBuildFile; fileRef = 335BBD1A22A9A15E00E9071D /* GeneratedPluginRegistrant.swift */; };
-		33CC10F12044A3C60003C045 /* AppDelegate.swift in Sources */ = {isa = PBXBuildFile; fileRef = 33CC10F02044A3C60003C045 /* AppDelegate.swift */; };
-		33CC10F32044A3C60003C045 /* Assets.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 33CC10F22044A3C60003C045 /* Assets.xcassets */; };
-		33CC10F62044A3C60003C045 /* MainMenu.xib in Resources */ = {isa = PBXBuildFile; fileRef = 33CC10F42044A3C60003C045 /* MainMenu.xib */; };
-		33CC11132044BFA00003C045 /* MainFlutterWindow.swift in Sources */ = {isa = PBXBuildFile; fileRef = 33CC11122044BFA00003C045 /* MainFlutterWindow.swift */; };
-/* End PBXBuildFile section */
-
-/* Begin PBXContainerItemProxy section */
-		331C80D9294CF71000263BE5 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 33CC10E52044A3C60003C045 /* Project object */;
-			proxyType = 1;
-			remoteGlobalIDString = 33CC10EC2044A3C60003C045;
-			remoteInfo = Runner;
-		};
-		33CC111F2044C79F0003C045 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 33CC10E52044A3C60003C045 /* Project object */;
-			proxyType = 1;
-			remoteGlobalIDString = 33CC111A2044C6BA0003C045;
-			remoteInfo = FLX;
-		};
-/* End PBXContainerItemProxy section */
-
-/* Begin PBXCopyFilesBuildPhase section */
-		33CC110E2044A8840003C045 /* Bundle Framework */ = {
-			isa = PBXCopyFilesBuildPhase;
-			buildActionMask = 2147483647;
-			dstPath = "";
-			dstSubfolderSpec = 10;
-			files = (
-			);
-			name = "Bundle Framework";
-			runOnlyForDeploymentPostprocessing = 0;
-		};
-/* End PBXCopyFilesBuildPhase section */
-
-/* Begin PBXFileReference section */
-		331C80D5294CF71000263BE5 /* RunnerTests.xctest */ = {isa = PBXFileReference; explicitFileType = wrapper.cfbundle; includeInIndex = 0; path = RunnerTests.xctest; sourceTree = BUILT_PRODUCTS_DIR; };
-		331C80D7294CF71000263BE5 /* RunnerTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = RunnerTests.swift; sourceTree = "<group>"; };
-		333000ED22D3DE5D00554162 /* Warnings.xcconfig */ = {isa = PBXFileReference; lastKnownFileType = text.xcconfig; path = Warnings.xcconfig; sourceTree = "<group>"; };
-		335BBD1A22A9A15E00E9071D /* GeneratedPluginRegistrant.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = GeneratedPluginRegistrant.swift; sourceTree = "<group>"; };
-		33CC10ED2044A3C60003C045 /* petitpal.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = "petitpal.app"; sourceTree = BUILT_PRODUCTS_DIR; };
-		33CC10F02044A3C60003C045 /* AppDelegate.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = AppDelegate.swift; sourceTree = "<group>"; };
-		33CC10F22044A3C60003C045 /* Assets.xcassets */ = {isa = PBXFileReference; lastKnownFileType = folder.assetcatalog; name = Assets.xcassets; path = Runner/Assets.xcassets; sourceTree = "<group>"; };
-		33CC10F52044A3C60003C045 /* Base */ = {isa = PBXFileReference; lastKnownFileType = file.xib; name = Base; path = Base.lproj/MainMenu.xib; sourceTree = "<group>"; };
-		33CC10F72044A3C60003C045 /* Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; name = Info.plist; path = Runner/Info.plist; sourceTree = "<group>"; };
-		33CC11122044BFA00003C045 /* MainFlutterWindow.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = MainFlutterWindow.swift; sourceTree = "<group>"; };
-		33CEB47222A05771004F2AC0 /* Flutter-Debug.xcconfig */ = {isa = PBXFileReference; lastKnownFileType = text.xcconfig; path = "Flutter-Debug.xcconfig"; sourceTree = "<group>"; };
-		33CEB47422A05771004F2AC0 /* Flutter-Release.xcconfig */ = {isa = PBXFileReference; lastKnownFileType = text.xcconfig; path = "Flutter-Release.xcconfig"; sourceTree = "<group>"; };
-		33CEB47722A0578A004F2AC0 /* Flutter-Generated.xcconfig */ = {isa = PBXFileReference; lastKnownFileType = text.xcconfig; name = "Flutter-Generated.xcconfig"; path = "ephemeral/Flutter-Generated.xcconfig"; sourceTree = "<group>"; };
-		33E51913231747F40026EE4D /* DebugProfile.entitlements */ = {isa = PBXFileReference; lastKnownFileType = text.plist.entitlements; path = DebugProfile.entitlements; sourceTree = "<group>"; };
-		33E51914231749380026EE4D /* Release.entitlements */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.entitlements; path = Release.entitlements; sourceTree = "<group>"; };
-		33E5194F232828860026EE4D /* AppInfo.xcconfig */ = {isa = PBXFileReference; lastKnownFileType = text.xcconfig; path = AppInfo.xcconfig; sourceTree = "<group>"; };
-		7AFA3C8E1D35360C0083082E /* Release.xcconfig */ = {isa = PBXFileReference; lastKnownFileType = text.xcconfig; path = Release.xcconfig; sourceTree = "<group>"; };
-		9740EEB21CF90195004384FC /* Debug.xcconfig */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.xcconfig; path = Debug.xcconfig; sourceTree = "<group>"; };
-/* End PBXFileReference section */
-
-/* Begin PBXFrameworksBuildPhase section */
-		331C80D2294CF70F00263BE5 /* Frameworks */ = {
-			isa = PBXFrameworksBuildPhase;
-			buildActionMask = 2147483647;
-			files = (
-			);
-			runOnlyForDeploymentPostprocessing = 0;
-		};
-		33CC10EA2044A3C60003C045 /* Frameworks */ = {
-			isa = PBXFrameworksBuildPhase;
-			buildActionMask = 2147483647;
-			files = (
-			);
-			runOnlyForDeploymentPostprocessing = 0;
-		};
-/* End PBXFrameworksBuildPhase section */
-
-/* Begin PBXGroup section */
-		331C80D6294CF71000263BE5 /* RunnerTests */ = {
-			isa = PBXGroup;
-			children = (
-				331C80D7294CF71000263BE5 /* RunnerTests.swift */,
-			);
-			path = RunnerTests;
-			sourceTree = "<group>";
-		};
-		33BA886A226E78AF003329D5 /* Configs */ = {
-			isa = PBXGroup;
-			children = (
-				33E5194F232828860026EE4D /* AppInfo.xcconfig */,
-				9740EEB21CF90195004384FC /* Debug.xcconfig */,
-				7AFA3C8E1D35360C0083082E /* Release.xcconfig */,
-				333000ED22D3DE5D00554162 /* Warnings.xcconfig */,
-			);
-			path = Configs;
-			sourceTree = "<group>";
-		};
-		33CC10E42044A3C60003C045 = {
-			isa = PBXGroup;
-			children = (
-				33FAB671232836740065AC1E /* Runner */,
-				33CEB47122A05771004F2AC0 /* Flutter */,
-				331C80D6294CF71000263BE5 /* RunnerTests */,
-				33CC10EE2044A3C60003C045 /* Products */,
-				D73912EC22F37F3D000D13A0 /* Frameworks */,
-			);
-			sourceTree = "<group>";
-		};
-		33CC10EE2044A3C60003C045 /* Products */ = {
-			isa = PBXGroup;
-			children = (
-				33CC10ED2044A3C60003C045 /* petitpal.app */,
-				331C80D5294CF71000263BE5 /* RunnerTests.xctest */,
-			);
-			name = Products;
-			sourceTree = "<group>";
-		};
-		33CC11242044D66E0003C045 /* Resources */ = {
-			isa = PBXGroup;
-			children = (
-				33CC10F22044A3C60003C045 /* Assets.xcassets */,
-				33CC10F42044A3C60003C045 /* MainMenu.xib */,
-				33CC10F72044A3C60003C045 /* Info.plist */,
-			);
-			name = Resources;
-			path = ..;
-			sourceTree = "<group>";
-		};
-		33CEB47122A05771004F2AC0 /* Flutter */ = {
-			isa = PBXGroup;
-			children = (
-				335BBD1A22A9A15E00E9071D /* GeneratedPluginRegistrant.swift */,
-				33CEB47222A05771004F2AC0 /* Flutter-Debug.xcconfig */,
-				33CEB47422A05771004F2AC0 /* Flutter-Release.xcconfig */,
-				33CEB47722A0578A004F2AC0 /* Flutter-Generated.xcconfig */,
-			);
-			path = Flutter;
-			sourceTree = "<group>";
-		};
-		33FAB671232836740065AC1E /* Runner */ = {
-			isa = PBXGroup;
-			children = (
-				33CC10F02044A3C60003C045 /* AppDelegate.swift */,
-				33CC11122044BFA00003C045 /* MainFlutterWindow.swift */,
-				33E51913231747F40026EE4D /* DebugProfile.entitlements */,
-				33E51914231749380026EE4D /* Release.entitlements */,
-				33CC11242044D66E0003C045 /* Resources */,
-				33BA886A226E78AF003329D5 /* Configs */,
-			);
-			path = Runner;
-			sourceTree = "<group>";
-		};
-		D73912EC22F37F3D000D13A0 /* Frameworks */ = {
-			isa = PBXGroup;
-			children = (
-			);
-			name = Frameworks;
-			sourceTree = "<group>";
-		};
-/* End PBXGroup section */
-
-/* Begin PBXNativeTarget section */
-		331C80D4294CF70F00263BE5 /* RunnerTests */ = {
-			isa = PBXNativeTarget;
-			buildConfigurationList = 331C80DE294CF71000263BE5 /* Build configuration list for PBXNativeTarget "RunnerTests" */;
-			buildPhases = (
-				331C80D1294CF70F00263BE5 /* Sources */,
-				331C80D2294CF70F00263BE5 /* Frameworks */,
-				331C80D3294CF70F00263BE5 /* Resources */,
-			);
-			buildRules = (
-			);
-			dependencies = (
-				331C80DA294CF71000263BE5 /* PBXTargetDependency */,
-			);
-			name = RunnerTests;
-			productName = RunnerTests;
-			productReference = 331C80D5294CF71000263BE5 /* RunnerTests.xctest */;
-			productType = "com.apple.product-type.bundle.unit-test";
-		};
-		33CC10EC2044A3C60003C045 /* Runner */ = {
-			isa = PBXNativeTarget;
-			buildConfigurationList = 33CC10FB2044A3C60003C045 /* Build configuration list for PBXNativeTarget "Runner" */;
-			buildPhases = (
-				33CC10E92044A3C60003C045 /* Sources */,
-				33CC10EA2044A3C60003C045 /* Frameworks */,
-				33CC10EB2044A3C60003C045 /* Resources */,
-				33CC110E2044A8840003C045 /* Bundle Framework */,
-				3399D490228B24CF009A79C7 /* ShellScript */,
-			);
-			buildRules = (
-			);
-			dependencies = (
-				33CC11202044C79F0003C045 /* PBXTargetDependency */,
-			);
-			name = Runner;
-			productName = Runner;
-			productReference = 33CC10ED2044A3C60003C045 /* petitpal.app */;
-			productType = "com.apple.product-type.application";
-		};
-/* End PBXNativeTarget section */
-
-/* Begin PBXProject section */
-		33CC10E52044A3C60003C045 /* Project object */ = {
-			isa = PBXProject;
-			attributes = {
-				BuildIndependentTargetsInParallel = YES;
-				LastSwiftUpdateCheck = 0920;
-				LastUpgradeCheck = 1510;
-				ORGANIZATIONNAME = "";
-				TargetAttributes = {
-					331C80D4294CF70F00263BE5 = {
-						CreatedOnToolsVersion = 14.0;
-						TestTargetID = 33CC10EC2044A3C60003C045;
-					};
-					33CC10EC2044A3C60003C045 = {
-						CreatedOnToolsVersion = 9.2;
-						LastSwiftMigration = 1100;
-						ProvisioningStyle = Automatic;
-						SystemCapabilities = {
-							com.apple.Sandbox = {
-								enabled = 1;
-							};
-						};
-					};
-					33CC111A2044C6BA0003C045 = {
-						CreatedOnToolsVersion = 9.2;
-						ProvisioningStyle = Manual;
-					};
-				};
-			};
-			buildConfigurationList = 33CC10E82044A3C60003C045 /* Build configuration list for PBXProject "Runner" */;
-			compatibilityVersion = "Xcode 9.3";
-			developmentRegion = en;
-			hasScannedForEncodings = 0;
-			knownRegions = (
-				en,
-				Base,
-			);
-			mainGroup = 33CC10E42044A3C60003C045;
-			productRefGroup = 33CC10EE2044A3C60003C045 /* Products */;
-			projectDirPath = "";
-			projectRoot = "";
-			targets = (
-				33CC10EC2044A3C60003C045 /* Runner */,
-				331C80D4294CF70F00263BE5 /* RunnerTests */,
-				33CC111A2044C6BA0003C045 /* Flutter Assemble */,
-			);
-		};
-/* End PBXProject section */
-
-/* Begin PBXResourcesBuildPhase section */
-		331C80D3294CF70F00263BE5 /* Resources */ = {
-			isa = PBXResourcesBuildPhase;
-			buildActionMask = 2147483647;
-			files = (
-			);
-			runOnlyForDeploymentPostprocessing = 0;
-		};
-		33CC10EB2044A3C60003C045 /* Resources */ = {
-			isa = PBXResourcesBuildPhase;
-			buildActionMask = 2147483647;
-			files = (
-				33CC10F32044A3C60003C045 /* Assets.xcassets in Resources */,
-				33CC10F62044A3C60003C045 /* MainMenu.xib in Resources */,
-			);
-			runOnlyForDeploymentPostprocessing = 0;
-		};
-/* End PBXResourcesBuildPhase section */
-
-/* Begin PBXShellScriptBuildPhase section */
-		3399D490228B24CF009A79C7 /* ShellScript */ = {
-			isa = PBXShellScriptBuildPhase;
-			alwaysOutOfDate = 1;
-			buildActionMask = 2147483647;
-			files = (
-			);
-			inputFileListPaths = (
-			);
-			inputPaths = (
-			);
-			outputFileListPaths = (
-			);
-			outputPaths = (
-			);
-			runOnlyForDeploymentPostprocessing = 0;
-			shellPath = /bin/sh;
-			shellScript = "echo \"$PRODUCT_NAME.app\" > \"$PROJECT_DIR\"/Flutter/ephemeral/.app_filename && \"$FLUTTER_ROOT\"/packages/flutter_tools/bin/macos_assemble.sh embed\n";
-		};
-		33CC111E2044C6BF0003C045 /* ShellScript */ = {
-			isa = PBXShellScriptBuildPhase;
-			buildActionMask = 2147483647;
-			files = (
-			);
-			inputFileListPaths = (
-				Flutter/ephemeral/FlutterInputs.xcfilelist,
-			);
-			inputPaths = (
-				Flutter/ephemeral/tripwire,
-			);
-			outputFileListPaths = (
-				Flutter/ephemeral/FlutterOutputs.xcfilelist,
-			);
-			outputPaths = (
-			);
-			runOnlyForDeploymentPostprocessing = 0;
-			shellPath = /bin/sh;
-			shellScript = "\"$FLUTTER_ROOT\"/packages/flutter_tools/bin/macos_assemble.sh && touch Flutter/ephemeral/tripwire";
-		};
-/* End PBXShellScriptBuildPhase section */
-
-/* Begin PBXSourcesBuildPhase section */
-		331C80D1294CF70F00263BE5 /* Sources */ = {
-			isa = PBXSourcesBuildPhase;
-			buildActionMask = 2147483647;
-			files = (
-				331C80D8294CF71000263BE5 /* RunnerTests.swift in Sources */,
-			);
-			runOnlyForDeploymentPostprocessing = 0;
-		};
-		33CC10E92044A3C60003C045 /* Sources */ = {
-			isa = PBXSourcesBuildPhase;
-			buildActionMask = 2147483647;
-			files = (
-				33CC11132044BFA00003C045 /* MainFlutterWindow.swift in Sources */,
-				33CC10F12044A3C60003C045 /* AppDelegate.swift in Sources */,
-				335BBD1B22A9A15E00E9071D /* GeneratedPluginRegistrant.swift in Sources */,
-			);
-			runOnlyForDeploymentPostprocessing = 0;
-		};
-/* End PBXSourcesBuildPhase section */
-
-/* Begin PBXTargetDependency section */
-		331C80DA294CF71000263BE5 /* PBXTargetDependency */ = {
-			isa = PBXTargetDependency;
-			target = 33CC10EC2044A3C60003C045 /* Runner */;
-			targetProxy = 331C80D9294CF71000263BE5 /* PBXContainerItemProxy */;
-		};
-		33CC11202044C79F0003C045 /* PBXTargetDependency */ = {
-			isa = PBXTargetDependency;
-			target = 33CC111A2044C6BA0003C045 /* Flutter Assemble */;
-			targetProxy = 33CC111F2044C79F0003C045 /* PBXContainerItemProxy */;
-		};
-/* End PBXTargetDependency section */
-
-/* Begin PBXVariantGroup section */
-		33CC10F42044A3C60003C045 /* MainMenu.xib */ = {
-			isa = PBXVariantGroup;
-			children = (
-				33CC10F52044A3C60003C045 /* Base */,
-			);
-			name = MainMenu.xib;
-			path = Runner;
-			sourceTree = "<group>";
-		};
-/* End PBXVariantGroup section */
-
-/* Begin XCBuildConfiguration section */
-		331C80DB294CF71000263BE5 /* Debug */ = {
-			isa = XCBuildConfiguration;
-			buildSettings = {
-				BUNDLE_LOADER = "$(TEST_HOST)";
-				CURRENT_PROJECT_VERSION = 1;
-				GENERATE_INFOPLIST_FILE = YES;
-				MARKETING_VERSION = 1.0;
-				PRODUCT_BUNDLE_IDENTIFIER = com.example.petitpal.RunnerTests;
-				PRODUCT_NAME = "$(TARGET_NAME)";
-				SWIFT_VERSION = 5.0;
-				TEST_HOST = "$(BUILT_PRODUCTS_DIR)/petitpal.app/$(BUNDLE_EXECUTABLE_FOLDER_PATH)/petitpal";
-			};
-			name = Debug;
-		};
-		331C80DC294CF71000263BE5 /* Release */ = {
-			isa = XCBuildConfiguration;
-			buildSettings = {
-				BUNDLE_LOADER = "$(TEST_HOST)";
-				CURRENT_PROJECT_VERSION = 1;
-				GENERATE_INFOPLIST_FILE = YES;
-				MARKETING_VERSION = 1.0;
-				PRODUCT_BUNDLE_IDENTIFIER = com.example.petitpal.RunnerTests;
-				PRODUCT_NAME = "$(TARGET_NAME)";
-				SWIFT_VERSION = 5.0;
-				TEST_HOST = "$(BUILT_PRODUCTS_DIR)/petitpal.app/$(BUNDLE_EXECUTABLE_FOLDER_PATH)/petitpal";
-			};
-			name = Release;
-		};
-		331C80DD294CF71000263BE5 /* Profile */ = {
-			isa = XCBuildConfiguration;
-			buildSettings = {
-				BUNDLE_LOADER = "$(TEST_HOST)";
-				CURRENT_PROJECT_VERSION = 1;
-				GENERATE_INFOPLIST_FILE = YES;
-				MARKETING_VERSION = 1.0;
-				PRODUCT_BUNDLE_IDENTIFIER = com.example.petitpal.RunnerTests;
-				PRODUCT_NAME = "$(TARGET_NAME)";
-				SWIFT_VERSION = 5.0;
-				TEST_HOST = "$(BUILT_PRODUCTS_DIR)/petitpal.app/$(BUNDLE_EXECUTABLE_FOLDER_PATH)/petitpal";
-			};
-			name = Profile;
-		};
-		338D0CE9231458BD00FA5F75 /* Profile */ = {
-			isa = XCBuildConfiguration;
-			baseConfigurationReference = 7AFA3C8E1D35360C0083082E /* Release.xcconfig */;
-			buildSettings = {
-				ALWAYS_SEARCH_USER_PATHS = NO;
-				ASSETCATALOG_COMPILER_GENERATE_SWIFT_ASSET_SYMBOL_EXTENSIONS = YES;
-				CLANG_ANALYZER_NONNULL = YES;
-				CLANG_ANALYZER_NUMBER_OBJECT_CONVERSION = YES_AGGRESSIVE;
-				CLANG_CXX_LANGUAGE_STANDARD = "gnu++14";
-				CLANG_CXX_LIBRARY = "libc++";
-				CLANG_ENABLE_MODULES = YES;
-				CLANG_ENABLE_OBJC_ARC = YES;
-				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
-				CLANG_WARN_BOOL_CONVERSION = YES;
-				CLANG_WARN_CONSTANT_CONVERSION = YES;
-				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
-				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
-				CLANG_WARN_DOCUMENTATION_COMMENTS = YES;
-				CLANG_WARN_EMPTY_BODY = YES;
-				CLANG_WARN_ENUM_CONVERSION = YES;
-				CLANG_WARN_INFINITE_RECURSION = YES;
-				CLANG_WARN_INT_CONVERSION = YES;
-				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
-				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
-				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
-				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
-				CLANG_WARN_SUSPICIOUS_MOVE = YES;
-				CODE_SIGN_IDENTITY = "-";
-				COPY_PHASE_STRIP = NO;
-				DEAD_CODE_STRIPPING = YES;
-				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
-				ENABLE_NS_ASSERTIONS = NO;
-				ENABLE_STRICT_OBJC_MSGSEND = YES;
-				ENABLE_USER_SCRIPT_SANDBOXING = NO;
-				GCC_C_LANGUAGE_STANDARD = gnu11;
-				GCC_NO_COMMON_BLOCKS = YES;
-				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
-				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
-				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
-				GCC_WARN_UNUSED_FUNCTION = YES;
-				GCC_WARN_UNUSED_VARIABLE = YES;
-				MACOSX_DEPLOYMENT_TARGET = 10.14;
-				MTL_ENABLE_DEBUG_INFO = NO;
-				SDKROOT = macosx;
-				SWIFT_COMPILATION_MODE = wholemodule;
-				SWIFT_OPTIMIZATION_LEVEL = "-O";
-			};
-			name = Profile;
-		};
-		338D0CEA231458BD00FA5F75 /* Profile */ = {
-			isa = XCBuildConfiguration;
-			baseConfigurationReference = 33E5194F232828860026EE4D /* AppInfo.xcconfig */;
-			buildSettings = {
-				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
-				CLANG_ENABLE_MODULES = YES;
-				CODE_SIGN_ENTITLEMENTS = Runner/DebugProfile.entitlements;
-				CODE_SIGN_STYLE = Automatic;
-				COMBINE_HIDPI_IMAGES = YES;
-				INFOPLIST_FILE = Runner/Info.plist;
-				LD_RUNPATH_SEARCH_PATHS = (
-					"$(inherited)",
-					"@executable_path/../Frameworks",
-				);
-				PROVISIONING_PROFILE_SPECIFIER = "";
-				SWIFT_VERSION = 5.0;
-			};
-			name = Profile;
-		};
-		338D0CEB231458BD00FA5F75 /* Profile */ = {
-			isa = XCBuildConfiguration;
-			buildSettings = {
-				CODE_SIGN_STYLE = Manual;
-				PRODUCT_NAME = "$(TARGET_NAME)";
-			};
-			name = Profile;
-		};
-		33CC10F92044A3C60003C045 /* Debug */ = {
-			isa = XCBuildConfiguration;
-			baseConfigurationReference = 9740EEB21CF90195004384FC /* Debug.xcconfig */;
-			buildSettings = {
-				ALWAYS_SEARCH_USER_PATHS = NO;
-				ASSETCATALOG_COMPILER_GENERATE_SWIFT_ASSET_SYMBOL_EXTENSIONS = YES;
-				CLANG_ANALYZER_NONNULL = YES;
-				CLANG_ANALYZER_NUMBER_OBJECT_CONVERSION = YES_AGGRESSIVE;
-				CLANG_CXX_LANGUAGE_STANDARD = "gnu++14";
-				CLANG_CXX_LIBRARY = "libc++";
-				CLANG_ENABLE_MODULES = YES;
-				CLANG_ENABLE_OBJC_ARC = YES;
-				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
-				CLANG_WARN_BOOL_CONVERSION = YES;
-				CLANG_WARN_CONSTANT_CONVERSION = YES;
-				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
-				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
-				CLANG_WARN_DOCUMENTATION_COMMENTS = YES;
-				CLANG_WARN_EMPTY_BODY = YES;
-				CLANG_WARN_ENUM_CONVERSION = YES;
-				CLANG_WARN_INFINITE_RECURSION = YES;
-				CLANG_WARN_INT_CONVERSION = YES;
-				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
-				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
-				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
-				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
-				CLANG_WARN_SUSPICIOUS_MOVE = YES;
-				CODE_SIGN_IDENTITY = "-";
-				COPY_PHASE_STRIP = NO;
-				DEAD_CODE_STRIPPING = YES;
-				DEBUG_INFORMATION_FORMAT = dwarf;
-				ENABLE_STRICT_OBJC_MSGSEND = YES;
-				ENABLE_TESTABILITY = YES;
-				ENABLE_USER_SCRIPT_SANDBOXING = NO;
-				GCC_C_LANGUAGE_STANDARD = gnu11;
-				GCC_DYNAMIC_NO_PIC = NO;
-				GCC_NO_COMMON_BLOCKS = YES;
-				GCC_OPTIMIZATION_LEVEL = 0;
-				GCC_PREPROCESSOR_DEFINITIONS = (
-					"DEBUG=1",
-					"$(inherited)",
-				);
-				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
-				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
-				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
-				GCC_WARN_UNUSED_FUNCTION = YES;
-				GCC_WARN_UNUSED_VARIABLE = YES;
-				MACOSX_DEPLOYMENT_TARGET = 10.14;
-				MTL_ENABLE_DEBUG_INFO = YES;
-				ONLY_ACTIVE_ARCH = YES;
-				SDKROOT = macosx;
-				SWIFT_ACTIVE_COMPILATION_CONDITIONS = DEBUG;
-				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
-			};
-			name = Debug;
-		};
-		33CC10FA2044A3C60003C045 /* Release */ = {
-			isa = XCBuildConfiguration;
-			baseConfigurationReference = 7AFA3C8E1D35360C0083082E /* Release.xcconfig */;
-			buildSettings = {
-				ALWAYS_SEARCH_USER_PATHS = NO;
-				ASSETCATALOG_COMPILER_GENERATE_SWIFT_ASSET_SYMBOL_EXTENSIONS = YES;
-				CLANG_ANALYZER_NONNULL = YES;
-				CLANG_ANALYZER_NUMBER_OBJECT_CONVERSION = YES_AGGRESSIVE;
-				CLANG_CXX_LANGUAGE_STANDARD = "gnu++14";
-				CLANG_CXX_LIBRARY = "libc++";
-				CLANG_ENABLE_MODULES = YES;
-				CLANG_ENABLE_OBJC_ARC = YES;
-				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
-				CLANG_WARN_BOOL_CONVERSION = YES;
-				CLANG_WARN_CONSTANT_CONVERSION = YES;
-				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
-				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
-				CLANG_WARN_DOCUMENTATION_COMMENTS = YES;
-				CLANG_WARN_EMPTY_BODY = YES;
-				CLANG_WARN_ENUM_CONVERSION = YES;
-				CLANG_WARN_INFINITE_RECURSION = YES;
-				CLANG_WARN_INT_CONVERSION = YES;
-				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
-				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
-				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
-				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
-				CLANG_WARN_SUSPICIOUS_MOVE = YES;
-				CODE_SIGN_IDENTITY = "-";
-				COPY_PHASE_STRIP = NO;
-				DEAD_CODE_STRIPPING = YES;
-				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
-				ENABLE_NS_ASSERTIONS = NO;
-				ENABLE_STRICT_OBJC_MSGSEND = YES;
-				ENABLE_USER_SCRIPT_SANDBOXING = NO;
-				GCC_C_LANGUAGE_STANDARD = gnu11;
-				GCC_NO_COMMON_BLOCKS = YES;
-				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
-				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
-				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
-				GCC_WARN_UNUSED_FUNCTION = YES;
-				GCC_WARN_UNUSED_VARIABLE = YES;
-				MACOSX_DEPLOYMENT_TARGET = 10.14;
-				MTL_ENABLE_DEBUG_INFO = NO;
-				SDKROOT = macosx;
-				SWIFT_COMPILATION_MODE = wholemodule;
-				SWIFT_OPTIMIZATION_LEVEL = "-O";
-			};
-			name = Release;
-		};
-		33CC10FC2044A3C60003C045 /* Debug */ = {
-			isa = XCBuildConfiguration;
-			baseConfigurationReference = 33E5194F232828860026EE4D /* AppInfo.xcconfig */;
-			buildSettings = {
-				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
-				CLANG_ENABLE_MODULES = YES;
-				CODE_SIGN_ENTITLEMENTS = Runner/DebugProfile.entitlements;
-				CODE_SIGN_STYLE = Automatic;
-				COMBINE_HIDPI_IMAGES = YES;
-				INFOPLIST_FILE = Runner/Info.plist;
-				LD_RUNPATH_SEARCH_PATHS = (
-					"$(inherited)",
-					"@executable_path/../Frameworks",
-				);
-				PROVISIONING_PROFILE_SPECIFIER = "";
-				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
-				SWIFT_VERSION = 5.0;
-			};
-			name = Debug;
-		};
-		33CC10FD2044A3C60003C045 /* Release */ = {
-			isa = XCBuildConfiguration;
-			baseConfigurationReference = 33E5194F232828860026EE4D /* AppInfo.xcconfig */;
-			buildSettings = {
-				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
-				CLANG_ENABLE_MODULES = YES;
-				CODE_SIGN_ENTITLEMENTS = Runner/Release.entitlements;
-				CODE_SIGN_STYLE = Automatic;
-				COMBINE_HIDPI_IMAGES = YES;
-				INFOPLIST_FILE = Runner/Info.plist;
-				LD_RUNPATH_SEARCH_PATHS = (
-					"$(inherited)",
-					"@executable_path/../Frameworks",
-				);
-				PROVISIONING_PROFILE_SPECIFIER = "";
-				SWIFT_VERSION = 5.0;
-			};
-			name = Release;
-		};
-		33CC111C2044C6BA0003C045 /* Debug */ = {
-			isa = XCBuildConfiguration;
-			buildSettings = {
-				CODE_SIGN_STYLE = Manual;
-				PRODUCT_NAME = "$(TARGET_NAME)";
-			};
-			name = Debug;
-		};
-		33CC111D2044C6BA0003C045 /* Release */ = {
-			isa = XCBuildConfiguration;
-			buildSettings = {
-				CODE_SIGN_STYLE = Automatic;
-				PRODUCT_NAME = "$(TARGET_NAME)";
-			};
-			name = Release;
-		};
-/* End XCBuildConfiguration section */
-
-/* Begin XCConfigurationList section */
-		331C80DE294CF71000263BE5 /* Build configuration list for PBXNativeTarget "RunnerTests" */ = {
-			isa = XCConfigurationList;
-			buildConfigurations = (
-				331C80DB294CF71000263BE5 /* Debug */,
-				331C80DC294CF71000263BE5 /* Release */,
-				331C80DD294CF71000263BE5 /* Profile */,
-			);
-			defaultConfigurationIsVisible = 0;
-			defaultConfigurationName = Release;
-		};
-		33CC10E82044A3C60003C045 /* Build configuration list for PBXProject "Runner" */ = {
-			isa = XCConfigurationList;
-			buildConfigurations = (
-				33CC10F92044A3C60003C045 /* Debug */,
-				33CC10FA2044A3C60003C045 /* Release */,
-				338D0CE9231458BD00FA5F75 /* Profile */,
-			);
-			defaultConfigurationIsVisible = 0;
-			defaultConfigurationName = Release;
-		};
-		33CC10FB2044A3C60003C045 /* Build configuration list for PBXNativeTarget "Runner" */ = {
-			isa = XCConfigurationList;
-			buildConfigurations = (
-				33CC10FC2044A3C60003C045 /* Debug */,
-				33CC10FD2044A3C60003C045 /* Release */,
-				338D0CEA231458BD00FA5F75 /* Profile */,
-			);
-			defaultConfigurationIsVisible = 0;
-			defaultConfigurationName = Release;
-		};
-		33CC111B2044C6BA0003C045 /* Build configuration list for PBXAggregateTarget "Flutter Assemble" */ = {
-			isa = XCConfigurationList;
-			buildConfigurations = (
-				33CC111C2044C6BA0003C045 /* Debug */,
-				33CC111D2044C6BA0003C045 /* Release */,
-				338D0CEB231458BD00FA5F75 /* Profile */,
-			);
-			defaultConfigurationIsVisible = 0;
-			defaultConfigurationName = Release;
-		};
-/* End XCConfigurationList section */
-	};
-	rootObject = 33CC10E52044A3C60003C045 /* Project object */;
-}
+// !$*UTF8*$!
+{
+	archiveVersion = 1;
+	classes = {
+	};
+	objectVersion = 54;
+	objects = {
+
+/* Begin PBXAggregateTarget section */
+		33CC111A2044C6BA0003C045 /* Flutter Assemble */ = {
+			isa = PBXAggregateTarget;
+			buildConfigurationList = 33CC111B2044C6BA0003C045 /* Build configuration list for PBXAggregateTarget "Flutter Assemble" */;
+			buildPhases = (
+				33CC111E2044C6BF0003C045 /* ShellScript */,
+			);
+			dependencies = (
+			);
+			name = "Flutter Assemble";
+			productName = FLX;
+		};
+/* End PBXAggregateTarget section */
+
+/* Begin PBXBuildFile section */
+		331C80D8294CF71000263BE5 /* RunnerTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = 331C80D7294CF71000263BE5 /* RunnerTests.swift */; };
+		335BBD1B22A9A15E00E9071D /* GeneratedPluginRegistrant.swift in Sources */ = {isa = PBXBuildFile; fileRef = 335BBD1A22A9A15E00E9071D /* GeneratedPluginRegistrant.swift */; };
+		33CC10F12044A3C60003C045 /* AppDelegate.swift in Sources */ = {isa = PBXBuildFile; fileRef = 33CC10F02044A3C60003C045 /* AppDelegate.swift */; };
+		33CC10F32044A3C60003C045 /* Assets.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 33CC10F22044A3C60003C045 /* Assets.xcassets */; };
+		33CC10F62044A3C60003C045 /* MainMenu.xib in Resources */ = {isa = PBXBuildFile; fileRef = 33CC10F42044A3C60003C045 /* MainMenu.xib */; };
+		33CC11132044BFA00003C045 /* MainFlutterWindow.swift in Sources */ = {isa = PBXBuildFile; fileRef = 33CC11122044BFA00003C045 /* MainFlutterWindow.swift */; };
+/* End PBXBuildFile section */
+
+/* Begin PBXContainerItemProxy section */
+		331C80D9294CF71000263BE5 /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 33CC10E52044A3C60003C045 /* Project object */;
+			proxyType = 1;
+			remoteGlobalIDString = 33CC10EC2044A3C60003C045;
+			remoteInfo = Runner;
+		};
+		33CC111F2044C79F0003C045 /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 33CC10E52044A3C60003C045 /* Project object */;
+			proxyType = 1;
+			remoteGlobalIDString = 33CC111A2044C6BA0003C045;
+			remoteInfo = FLX;
+		};
+/* End PBXContainerItemProxy section */
+
+/* Begin PBXCopyFilesBuildPhase section */
+		33CC110E2044A8840003C045 /* Bundle Framework */ = {
+			isa = PBXCopyFilesBuildPhase;
+			buildActionMask = 2147483647;
+			dstPath = "";
+			dstSubfolderSpec = 10;
+			files = (
+			);
+			name = "Bundle Framework";
+			runOnlyForDeploymentPostprocessing = 0;
+		};
+/* End PBXCopyFilesBuildPhase section */
+
+/* Begin PBXFileReference section */
+		331C80D5294CF71000263BE5 /* RunnerTests.xctest */ = {isa = PBXFileReference; explicitFileType = wrapper.cfbundle; includeInIndex = 0; path = RunnerTests.xctest; sourceTree = BUILT_PRODUCTS_DIR; };
+		331C80D7294CF71000263BE5 /* RunnerTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = RunnerTests.swift; sourceTree = "<group>"; };
+		333000ED22D3DE5D00554162 /* Warnings.xcconfig */ = {isa = PBXFileReference; lastKnownFileType = text.xcconfig; path = Warnings.xcconfig; sourceTree = "<group>"; };
+		335BBD1A22A9A15E00E9071D /* GeneratedPluginRegistrant.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = GeneratedPluginRegistrant.swift; sourceTree = "<group>"; };
+		33CC10ED2044A3C60003C045 /* petitpal.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = "petitpal.app"; sourceTree = BUILT_PRODUCTS_DIR; };
+		33CC10F02044A3C60003C045 /* AppDelegate.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = AppDelegate.swift; sourceTree = "<group>"; };
+		33CC10F22044A3C60003C045 /* Assets.xcassets */ = {isa = PBXFileReference; lastKnownFileType = folder.assetcatalog; name = Assets.xcassets; path = Runner/Assets.xcassets; sourceTree = "<group>"; };
+		33CC10F52044A3C60003C045 /* Base */ = {isa = PBXFileReference; lastKnownFileType = file.xib; name = Base; path = Base.lproj/MainMenu.xib; sourceTree = "<group>"; };
+		33CC10F72044A3C60003C045 /* Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; name = Info.plist; path = Runner/Info.plist; sourceTree = "<group>"; };
+		33CC11122044BFA00003C045 /* MainFlutterWindow.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = MainFlutterWindow.swift; sourceTree = "<group>"; };
+		33CEB47222A05771004F2AC0 /* Flutter-Debug.xcconfig */ = {isa = PBXFileReference; lastKnownFileType = text.xcconfig; path = "Flutter-Debug.xcconfig"; sourceTree = "<group>"; };
+		33CEB47422A05771004F2AC0 /* Flutter-Release.xcconfig */ = {isa = PBXFileReference; lastKnownFileType = text.xcconfig; path = "Flutter-Release.xcconfig"; sourceTree = "<group>"; };
+		33CEB47722A0578A004F2AC0 /* Flutter-Generated.xcconfig */ = {isa = PBXFileReference; lastKnownFileType = text.xcconfig; name = "Flutter-Generated.xcconfig"; path = "ephemeral/Flutter-Generated.xcconfig"; sourceTree = "<group>"; };
+		33E51913231747F40026EE4D /* DebugProfile.entitlements */ = {isa = PBXFileReference; lastKnownFileType = text.plist.entitlements; path = DebugProfile.entitlements; sourceTree = "<group>"; };
+		33E51914231749380026EE4D /* Release.entitlements */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.entitlements; path = Release.entitlements; sourceTree = "<group>"; };
+		33E5194F232828860026EE4D /* AppInfo.xcconfig */ = {isa = PBXFileReference; lastKnownFileType = text.xcconfig; path = AppInfo.xcconfig; sourceTree = "<group>"; };
+		7AFA3C8E1D35360C0083082E /* Release.xcconfig */ = {isa = PBXFileReference; lastKnownFileType = text.xcconfig; path = Release.xcconfig; sourceTree = "<group>"; };
+		9740EEB21CF90195004384FC /* Debug.xcconfig */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.xcconfig; path = Debug.xcconfig; sourceTree = "<group>"; };
+/* End PBXFileReference section */
+
+/* Begin PBXFrameworksBuildPhase section */
+		331C80D2294CF70F00263BE5 /* Frameworks */ = {
+			isa = PBXFrameworksBuildPhase;
+			buildActionMask = 2147483647;
+			files = (
+			);
+			runOnlyForDeploymentPostprocessing = 0;
+		};
+		33CC10EA2044A3C60003C045 /* Frameworks */ = {
+			isa = PBXFrameworksBuildPhase;
+			buildActionMask = 2147483647;
+			files = (
+			);
+			runOnlyForDeploymentPostprocessing = 0;
+		};
+/* End PBXFrameworksBuildPhase section */
+
+/* Begin PBXGroup section */
+		331C80D6294CF71000263BE5 /* RunnerTests */ = {
+			isa = PBXGroup;
+			children = (
+				331C80D7294CF71000263BE5 /* RunnerTests.swift */,
+			);
+			path = RunnerTests;
+			sourceTree = "<group>";
+		};
+		33BA886A226E78AF003329D5 /* Configs */ = {
+			isa = PBXGroup;
+			children = (
+				33E5194F232828860026EE4D /* AppInfo.xcconfig */,
+				9740EEB21CF90195004384FC /* Debug.xcconfig */,
+				7AFA3C8E1D35360C0083082E /* Release.xcconfig */,
+				333000ED22D3DE5D00554162 /* Warnings.xcconfig */,
+			);
+			path = Configs;
+			sourceTree = "<group>";
+		};
+		33CC10E42044A3C60003C045 = {
+			isa = PBXGroup;
+			children = (
+				33FAB671232836740065AC1E /* Runner */,
+				33CEB47122A05771004F2AC0 /* Flutter */,
+				331C80D6294CF71000263BE5 /* RunnerTests */,
+				33CC10EE2044A3C60003C045 /* Products */,
+				D73912EC22F37F3D000D13A0 /* Frameworks */,
+			);
+			sourceTree = "<group>";
+		};
+		33CC10EE2044A3C60003C045 /* Products */ = {
+			isa = PBXGroup;
+			children = (
+				33CC10ED2044A3C60003C045 /* petitpal.app */,
+				331C80D5294CF71000263BE5 /* RunnerTests.xctest */,
+			);
+			name = Products;
+			sourceTree = "<group>";
+		};
+		33CC11242044D66E0003C045 /* Resources */ = {
+			isa = PBXGroup;
+			children = (
+				33CC10F22044A3C60003C045 /* Assets.xcassets */,
+				33CC10F42044A3C60003C045 /* MainMenu.xib */,
+				33CC10F72044A3C60003C045 /* Info.plist */,
+			);
+			name = Resources;
+			path = ..;
+			sourceTree = "<group>";
+		};
+		33CEB47122A05771004F2AC0 /* Flutter */ = {
+			isa = PBXGroup;
+			children = (
+				335BBD1A22A9A15E00E9071D /* GeneratedPluginRegistrant.swift */,
+				33CEB47222A05771004F2AC0 /* Flutter-Debug.xcconfig */,
+				33CEB47422A05771004F2AC0 /* Flutter-Release.xcconfig */,
+				33CEB47722A0578A004F2AC0 /* Flutter-Generated.xcconfig */,
+			);
+			path = Flutter;
+			sourceTree = "<group>";
+		};
+		33FAB671232836740065AC1E /* Runner */ = {
+			isa = PBXGroup;
+			children = (
+				33CC10F02044A3C60003C045 /* AppDelegate.swift */,
+				33CC11122044BFA00003C045 /* MainFlutterWindow.swift */,
+				33E51913231747F40026EE4D /* DebugProfile.entitlements */,
+				33E51914231749380026EE4D /* Release.entitlements */,
+				33CC11242044D66E0003C045 /* Resources */,
+				33BA886A226E78AF003329D5 /* Configs */,
+			);
+			path = Runner;
+			sourceTree = "<group>";
+		};
+		D73912EC22F37F3D000D13A0 /* Frameworks */ = {
+			isa = PBXGroup;
+			children = (
+			);
+			name = Frameworks;
+			sourceTree = "<group>";
+		};
+/* End PBXGroup section */
+
+/* Begin PBXNativeTarget section */
+		331C80D4294CF70F00263BE5 /* RunnerTests */ = {
+			isa = PBXNativeTarget;
+			buildConfigurationList = 331C80DE294CF71000263BE5 /* Build configuration list for PBXNativeTarget "RunnerTests" */;
+			buildPhases = (
+				331C80D1294CF70F00263BE5 /* Sources */,
+				331C80D2294CF70F00263BE5 /* Frameworks */,
+				331C80D3294CF70F00263BE5 /* Resources */,
+			);
+			buildRules = (
+			);
+			dependencies = (
+				331C80DA294CF71000263BE5 /* PBXTargetDependency */,
+			);
+			name = RunnerTests;
+			productName = RunnerTests;
+			productReference = 331C80D5294CF71000263BE5 /* RunnerTests.xctest */;
+			productType = "com.apple.product-type.bundle.unit-test";
+		};
+		33CC10EC2044A3C60003C045 /* Runner */ = {
+			isa = PBXNativeTarget;
+			buildConfigurationList = 33CC10FB2044A3C60003C045 /* Build configuration list for PBXNativeTarget "Runner" */;
+			buildPhases = (
+				33CC10E92044A3C60003C045 /* Sources */,
+				33CC10EA2044A3C60003C045 /* Frameworks */,
+				33CC10EB2044A3C60003C045 /* Resources */,
+				33CC110E2044A8840003C045 /* Bundle Framework */,
+				3399D490228B24CF009A79C7 /* ShellScript */,
+			);
+			buildRules = (
+			);
+			dependencies = (
+				33CC11202044C79F0003C045 /* PBXTargetDependency */,
+			);
+			name = Runner;
+			productName = Runner;
+			productReference = 33CC10ED2044A3C60003C045 /* petitpal.app */;
+			productType = "com.apple.product-type.application";
+		};
+/* End PBXNativeTarget section */
+
+/* Begin PBXProject section */
+		33CC10E52044A3C60003C045 /* Project object */ = {
+			isa = PBXProject;
+			attributes = {
+				BuildIndependentTargetsInParallel = YES;
+				LastSwiftUpdateCheck = 0920;
+				LastUpgradeCheck = 1510;
+				ORGANIZATIONNAME = "";
+				TargetAttributes = {
+					331C80D4294CF70F00263BE5 = {
+						CreatedOnToolsVersion = 14.0;
+						TestTargetID = 33CC10EC2044A3C60003C045;
+					};
+					33CC10EC2044A3C60003C045 = {
+						CreatedOnToolsVersion = 9.2;
+						LastSwiftMigration = 1100;
+						ProvisioningStyle = Automatic;
+						SystemCapabilities = {
+							com.apple.Sandbox = {
+								enabled = 1;
+							};
+						};
+					};
+					33CC111A2044C6BA0003C045 = {
+						CreatedOnToolsVersion = 9.2;
+						ProvisioningStyle = Manual;
+					};
+				};
+			};
+			buildConfigurationList = 33CC10E82044A3C60003C045 /* Build configuration list for PBXProject "Runner" */;
+			compatibilityVersion = "Xcode 9.3";
+			developmentRegion = en;
+			hasScannedForEncodings = 0;
+			knownRegions = (
+				en,
+				Base,
+			);
+			mainGroup = 33CC10E42044A3C60003C045;
+			productRefGroup = 33CC10EE2044A3C60003C045 /* Products */;
+			projectDirPath = "";
+			projectRoot = "";
+			targets = (
+				33CC10EC2044A3C60003C045 /* Runner */,
+				331C80D4294CF70F00263BE5 /* RunnerTests */,
+				33CC111A2044C6BA0003C045 /* Flutter Assemble */,
+			);
+		};
+/* End PBXProject section */
+
+/* Begin PBXResourcesBuildPhase section */
+		331C80D3294CF70F00263BE5 /* Resources */ = {
+			isa = PBXResourcesBuildPhase;
+			buildActionMask = 2147483647;
+			files = (
+			);
+			runOnlyForDeploymentPostprocessing = 0;
+		};
+		33CC10EB2044A3C60003C045 /* Resources */ = {
+			isa = PBXResourcesBuildPhase;
+			buildActionMask = 2147483647;
+			files = (
+				33CC10F32044A3C60003C045 /* Assets.xcassets in Resources */,
+				33CC10F62044A3C60003C045 /* MainMenu.xib in Resources */,
+			);
+			runOnlyForDeploymentPostprocessing = 0;
+		};
+/* End PBXResourcesBuildPhase section */
+
+/* Begin PBXShellScriptBuildPhase section */
+		3399D490228B24CF009A79C7 /* ShellScript */ = {
+			isa = PBXShellScriptBuildPhase;
+			alwaysOutOfDate = 1;
+			buildActionMask = 2147483647;
+			files = (
+			);
+			inputFileListPaths = (
+			);
+			inputPaths = (
+			);
+			outputFileListPaths = (
+			);
+			outputPaths = (
+			);
+			runOnlyForDeploymentPostprocessing = 0;
+			shellPath = /bin/sh;
+			shellScript = "echo \"$PRODUCT_NAME.app\" > \"$PROJECT_DIR\"/Flutter/ephemeral/.app_filename && \"$FLUTTER_ROOT\"/packages/flutter_tools/bin/macos_assemble.sh embed\n";
+		};
+		33CC111E2044C6BF0003C045 /* ShellScript */ = {
+			isa = PBXShellScriptBuildPhase;
+			buildActionMask = 2147483647;
+			files = (
+			);
+			inputFileListPaths = (
+				Flutter/ephemeral/FlutterInputs.xcfilelist,
+			);
+			inputPaths = (
+				Flutter/ephemeral/tripwire,
+			);
+			outputFileListPaths = (
+				Flutter/ephemeral/FlutterOutputs.xcfilelist,
+			);
+			outputPaths = (
+			);
+			runOnlyForDeploymentPostprocessing = 0;
+			shellPath = /bin/sh;
+			shellScript = "\"$FLUTTER_ROOT\"/packages/flutter_tools/bin/macos_assemble.sh && touch Flutter/ephemeral/tripwire";
+		};
+/* End PBXShellScriptBuildPhase section */
+
+/* Begin PBXSourcesBuildPhase section */
+		331C80D1294CF70F00263BE5 /* Sources */ = {
+			isa = PBXSourcesBuildPhase;
+			buildActionMask = 2147483647;
+			files = (
+				331C80D8294CF71000263BE5 /* RunnerTests.swift in Sources */,
+			);
+			runOnlyForDeploymentPostprocessing = 0;
+		};
+		33CC10E92044A3C60003C045 /* Sources */ = {
+			isa = PBXSourcesBuildPhase;
+			buildActionMask = 2147483647;
+			files = (
+				33CC11132044BFA00003C045 /* MainFlutterWindow.swift in Sources */,
+				33CC10F12044A3C60003C045 /* AppDelegate.swift in Sources */,
+				335BBD1B22A9A15E00E9071D /* GeneratedPluginRegistrant.swift in Sources */,
+			);
+			runOnlyForDeploymentPostprocessing = 0;
+		};
+/* End PBXSourcesBuildPhase section */
+
+/* Begin PBXTargetDependency section */
+		331C80DA294CF71000263BE5 /* PBXTargetDependency */ = {
+			isa = PBXTargetDependency;
+			target = 33CC10EC2044A3C60003C045 /* Runner */;
+			targetProxy = 331C80D9294CF71000263BE5 /* PBXContainerItemProxy */;
+		};
+		33CC11202044C79F0003C045 /* PBXTargetDependency */ = {
+			isa = PBXTargetDependency;
+			target = 33CC111A2044C6BA0003C045 /* Flutter Assemble */;
+			targetProxy = 33CC111F2044C79F0003C045 /* PBXContainerItemProxy */;
+		};
+/* End PBXTargetDependency section */
+
+/* Begin PBXVariantGroup section */
+		33CC10F42044A3C60003C045 /* MainMenu.xib */ = {
+			isa = PBXVariantGroup;
+			children = (
+				33CC10F52044A3C60003C045 /* Base */,
+			);
+			name = MainMenu.xib;
+			path = Runner;
+			sourceTree = "<group>";
+		};
+/* End PBXVariantGroup section */
+
+/* Begin XCBuildConfiguration section */
+		331C80DB294CF71000263BE5 /* Debug */ = {
+			isa = XCBuildConfiguration;
+			buildSettings = {
+				BUNDLE_LOADER = "$(TEST_HOST)";
+				CURRENT_PROJECT_VERSION = 1;
+				GENERATE_INFOPLIST_FILE = YES;
+				MARKETING_VERSION = 1.0;
+				PRODUCT_BUNDLE_IDENTIFIER = com.example.petitpal.RunnerTests;
+				PRODUCT_NAME = "$(TARGET_NAME)";
+				SWIFT_VERSION = 5.0;
+				TEST_HOST = "$(BUILT_PRODUCTS_DIR)/petitpal.app/$(BUNDLE_EXECUTABLE_FOLDER_PATH)/petitpal";
+			};
+			name = Debug;
+		};
+		331C80DC294CF71000263BE5 /* Release */ = {
+			isa = XCBuildConfiguration;
+			buildSettings = {
+				BUNDLE_LOADER = "$(TEST_HOST)";
+				CURRENT_PROJECT_VERSION = 1;
+				GENERATE_INFOPLIST_FILE = YES;
+				MARKETING_VERSION = 1.0;
+				PRODUCT_BUNDLE_IDENTIFIER = com.example.petitpal.RunnerTests;
+				PRODUCT_NAME = "$(TARGET_NAME)";
+				SWIFT_VERSION = 5.0;
+				TEST_HOST = "$(BUILT_PRODUCTS_DIR)/petitpal.app/$(BUNDLE_EXECUTABLE_FOLDER_PATH)/petitpal";
+			};
+			name = Release;
+		};
+		331C80DD294CF71000263BE5 /* Profile */ = {
+			isa = XCBuildConfiguration;
+			buildSettings = {
+				BUNDLE_LOADER = "$(TEST_HOST)";
+				CURRENT_PROJECT_VERSION = 1;
+				GENERATE_INFOPLIST_FILE = YES;
+				MARKETING_VERSION = 1.0;
+				PRODUCT_BUNDLE_IDENTIFIER = com.example.petitpal.RunnerTests;
+				PRODUCT_NAME = "$(TARGET_NAME)";
+				SWIFT_VERSION = 5.0;
+				TEST_HOST = "$(BUILT_PRODUCTS_DIR)/petitpal.app/$(BUNDLE_EXECUTABLE_FOLDER_PATH)/petitpal";
+			};
+			name = Profile;
+		};
+		338D0CE9231458BD00FA5F75 /* Profile */ = {
+			isa = XCBuildConfiguration;
+			baseConfigurationReference = 7AFA3C8E1D35360C0083082E /* Release.xcconfig */;
+			buildSettings = {
+				ALWAYS_SEARCH_USER_PATHS = NO;
+				ASSETCATALOG_COMPILER_GENERATE_SWIFT_ASSET_SYMBOL_EXTENSIONS = YES;
+				CLANG_ANALYZER_NONNULL = YES;
+				CLANG_ANALYZER_NUMBER_OBJECT_CONVERSION = YES_AGGRESSIVE;
+				CLANG_CXX_LANGUAGE_STANDARD = "gnu++14";
+				CLANG_CXX_LIBRARY = "libc++";
+				CLANG_ENABLE_MODULES = YES;
+				CLANG_ENABLE_OBJC_ARC = YES;
+				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
+				CLANG_WARN_BOOL_CONVERSION = YES;
+				CLANG_WARN_CONSTANT_CONVERSION = YES;
+				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
+				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
+				CLANG_WARN_DOCUMENTATION_COMMENTS = YES;
+				CLANG_WARN_EMPTY_BODY = YES;
+				CLANG_WARN_ENUM_CONVERSION = YES;
+				CLANG_WARN_INFINITE_RECURSION = YES;
+				CLANG_WARN_INT_CONVERSION = YES;
+				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
+				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
+				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
+				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
+				CLANG_WARN_SUSPICIOUS_MOVE = YES;
+				CODE_SIGN_IDENTITY = "-";
+				COPY_PHASE_STRIP = NO;
+				DEAD_CODE_STRIPPING = YES;
+				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
+				ENABLE_NS_ASSERTIONS = NO;
+				ENABLE_STRICT_OBJC_MSGSEND = YES;
+				ENABLE_USER_SCRIPT_SANDBOXING = NO;
+				GCC_C_LANGUAGE_STANDARD = gnu11;
+				GCC_NO_COMMON_BLOCKS = YES;
+				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
+				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
+				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
+				GCC_WARN_UNUSED_FUNCTION = YES;
+				GCC_WARN_UNUSED_VARIABLE = YES;
+				MACOSX_DEPLOYMENT_TARGET = 10.14;
+				MTL_ENABLE_DEBUG_INFO = NO;
+				SDKROOT = macosx;
+				SWIFT_COMPILATION_MODE = wholemodule;
+				SWIFT_OPTIMIZATION_LEVEL = "-O";
+			};
+			name = Profile;
+		};
+		338D0CEA231458BD00FA5F75 /* Profile */ = {
+			isa = XCBuildConfiguration;
+			baseConfigurationReference = 33E5194F232828860026EE4D /* AppInfo.xcconfig */;
+			buildSettings = {
+				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
+				CLANG_ENABLE_MODULES = YES;
+				CODE_SIGN_ENTITLEMENTS = Runner/DebugProfile.entitlements;
+				CODE_SIGN_STYLE = Automatic;
+				COMBINE_HIDPI_IMAGES = YES;
+				INFOPLIST_FILE = Runner/Info.plist;
+				LD_RUNPATH_SEARCH_PATHS = (
+					"$(inherited)",
+					"@executable_path/../Frameworks",
+				);
+				PROVISIONING_PROFILE_SPECIFIER = "";
+				SWIFT_VERSION = 5.0;
+			};
+			name = Profile;
+		};
+		338D0CEB231458BD00FA5F75 /* Profile */ = {
+			isa = XCBuildConfiguration;
+			buildSettings = {
+				CODE_SIGN_STYLE = Manual;
+				PRODUCT_NAME = "$(TARGET_NAME)";
+			};
+			name = Profile;
+		};
+		33CC10F92044A3C60003C045 /* Debug */ = {
+			isa = XCBuildConfiguration;
+			baseConfigurationReference = 9740EEB21CF90195004384FC /* Debug.xcconfig */;
+			buildSettings = {
+				ALWAYS_SEARCH_USER_PATHS = NO;
+				ASSETCATALOG_COMPILER_GENERATE_SWIFT_ASSET_SYMBOL_EXTENSIONS = YES;
+				CLANG_ANALYZER_NONNULL = YES;
+				CLANG_ANALYZER_NUMBER_OBJECT_CONVERSION = YES_AGGRESSIVE;
+				CLANG_CXX_LANGUAGE_STANDARD = "gnu++14";
+				CLANG_CXX_LIBRARY = "libc++";
+				CLANG_ENABLE_MODULES = YES;
+				CLANG_ENABLE_OBJC_ARC = YES;
+				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
+				CLANG_WARN_BOOL_CONVERSION = YES;
+				CLANG_WARN_CONSTANT_CONVERSION = YES;
+				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
+				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
+				CLANG_WARN_DOCUMENTATION_COMMENTS = YES;
+				CLANG_WARN_EMPTY_BODY = YES;
+				CLANG_WARN_ENUM_CONVERSION = YES;
+				CLANG_WARN_INFINITE_RECURSION = YES;
+				CLANG_WARN_INT_CONVERSION = YES;
+				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
+				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
+				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
+				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
+				CLANG_WARN_SUSPICIOUS_MOVE = YES;
+				CODE_SIGN_IDENTITY = "-";
+				COPY_PHASE_STRIP = NO;
+				DEAD_CODE_STRIPPING = YES;
+				DEBUG_INFORMATION_FORMAT = dwarf;
+				ENABLE_STRICT_OBJC_MSGSEND = YES;
+				ENABLE_TESTABILITY = YES;
+				ENABLE_USER_SCRIPT_SANDBOXING = NO;
+				GCC_C_LANGUAGE_STANDARD = gnu11;
+				GCC_DYNAMIC_NO_PIC = NO;
+				GCC_NO_COMMON_BLOCKS = YES;
+				GCC_OPTIMIZATION_LEVEL = 0;
+				GCC_PREPROCESSOR_DEFINITIONS = (
+					"DEBUG=1",
+					"$(inherited)",
+				);
+				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
+				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
+				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
+				GCC_WARN_UNUSED_FUNCTION = YES;
+				GCC_WARN_UNUSED_VARIABLE = YES;
+				MACOSX_DEPLOYMENT_TARGET = 10.14;
+				MTL_ENABLE_DEBUG_INFO = YES;
+				ONLY_ACTIVE_ARCH = YES;
+				SDKROOT = macosx;
+				SWIFT_ACTIVE_COMPILATION_CONDITIONS = DEBUG;
+				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
+			};
+			name = Debug;
+		};
+		33CC10FA2044A3C60003C045 /* Release */ = {
+			isa = XCBuildConfiguration;
+			baseConfigurationReference = 7AFA3C8E1D35360C0083082E /* Release.xcconfig */;
+			buildSettings = {
+				ALWAYS_SEARCH_USER_PATHS = NO;
+				ASSETCATALOG_COMPILER_GENERATE_SWIFT_ASSET_SYMBOL_EXTENSIONS = YES;
+				CLANG_ANALYZER_NONNULL = YES;
+				CLANG_ANALYZER_NUMBER_OBJECT_CONVERSION = YES_AGGRESSIVE;
+				CLANG_CXX_LANGUAGE_STANDARD = "gnu++14";
+				CLANG_CXX_LIBRARY = "libc++";
+				CLANG_ENABLE_MODULES = YES;
+				CLANG_ENABLE_OBJC_ARC = YES;
+				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
+				CLANG_WARN_BOOL_CONVERSION = YES;
+				CLANG_WARN_CONSTANT_CONVERSION = YES;
+				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
+				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
+				CLANG_WARN_DOCUMENTATION_COMMENTS = YES;
+				CLANG_WARN_EMPTY_BODY = YES;
+				CLANG_WARN_ENUM_CONVERSION = YES;
+				CLANG_WARN_INFINITE_RECURSION = YES;
+				CLANG_WARN_INT_CONVERSION = YES;
+				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
+				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
+				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
+				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
+				CLANG_WARN_SUSPICIOUS_MOVE = YES;
+				CODE_SIGN_IDENTITY = "-";
+				COPY_PHASE_STRIP = NO;
+				DEAD_CODE_STRIPPING = YES;
+				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
+				ENABLE_NS_ASSERTIONS = NO;
+				ENABLE_STRICT_OBJC_MSGSEND = YES;
+				ENABLE_USER_SCRIPT_SANDBOXING = NO;
+				GCC_C_LANGUAGE_STANDARD = gnu11;
+				GCC_NO_COMMON_BLOCKS = YES;
+				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
+				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
+				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
+				GCC_WARN_UNUSED_FUNCTION = YES;
+				GCC_WARN_UNUSED_VARIABLE = YES;
+				MACOSX_DEPLOYMENT_TARGET = 10.14;
+				MTL_ENABLE_DEBUG_INFO = NO;
+				SDKROOT = macosx;
+				SWIFT_COMPILATION_MODE = wholemodule;
+				SWIFT_OPTIMIZATION_LEVEL = "-O";
+			};
+			name = Release;
+		};
+		33CC10FC2044A3C60003C045 /* Debug */ = {
+			isa = XCBuildConfiguration;
+			baseConfigurationReference = 33E5194F232828860026EE4D /* AppInfo.xcconfig */;
+			buildSettings = {
+				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
+				CLANG_ENABLE_MODULES = YES;
+				CODE_SIGN_ENTITLEMENTS = Runner/DebugProfile.entitlements;
+				CODE_SIGN_STYLE = Automatic;
+				COMBINE_HIDPI_IMAGES = YES;
+				INFOPLIST_FILE = Runner/Info.plist;
+				LD_RUNPATH_SEARCH_PATHS = (
+					"$(inherited)",
+					"@executable_path/../Frameworks",
+				);
+				PROVISIONING_PROFILE_SPECIFIER = "";
+				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
+				SWIFT_VERSION = 5.0;
+			};
+			name = Debug;
+		};
+		33CC10FD2044A3C60003C045 /* Release */ = {
+			isa = XCBuildConfiguration;
+			baseConfigurationReference = 33E5194F232828860026EE4D /* AppInfo.xcconfig */;
+			buildSettings = {
+				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
+				CLANG_ENABLE_MODULES = YES;
+				CODE_SIGN_ENTITLEMENTS = Runner/Release.entitlements;
+				CODE_SIGN_STYLE = Automatic;
+				COMBINE_HIDPI_IMAGES = YES;
+				INFOPLIST_FILE = Runner/Info.plist;
+				LD_RUNPATH_SEARCH_PATHS = (
+					"$(inherited)",
+					"@executable_path/../Frameworks",
+				);
+				PROVISIONING_PROFILE_SPECIFIER = "";
+				SWIFT_VERSION = 5.0;
+			};
+			name = Release;
+		};
+		33CC111C2044C6BA0003C045 /* Debug */ = {
+			isa = XCBuildConfiguration;
+			buildSettings = {
+				CODE_SIGN_STYLE = Manual;
+				PRODUCT_NAME = "$(TARGET_NAME)";
+			};
+			name = Debug;
+		};
+		33CC111D2044C6BA0003C045 /* Release */ = {
+			isa = XCBuildConfiguration;
+			buildSettings = {
+				CODE_SIGN_STYLE = Automatic;
+				PRODUCT_NAME = "$(TARGET_NAME)";
+			};
+			name = Release;
+		};
+/* End XCBuildConfiguration section */
+
+/* Begin XCConfigurationList section */
+		331C80DE294CF71000263BE5 /* Build configuration list for PBXNativeTarget "RunnerTests" */ = {
+			isa = XCConfigurationList;
+			buildConfigurations = (
+				331C80DB294CF71000263BE5 /* Debug */,
+				331C80DC294CF71000263BE5 /* Release */,
+				331C80DD294CF71000263BE5 /* Profile */,
+			);
+			defaultConfigurationIsVisible = 0;
+			defaultConfigurationName = Release;
+		};
+		33CC10E82044A3C60003C045 /* Build configuration list for PBXProject "Runner" */ = {
+			isa = XCConfigurationList;
+			buildConfigurations = (
+				33CC10F92044A3C60003C045 /* Debug */,
+				33CC10FA2044A3C60003C045 /* Release */,
+				338D0CE9231458BD00FA5F75 /* Profile */,
+			);
+			defaultConfigurationIsVisible = 0;
+			defaultConfigurationName = Release;
+		};
+		33CC10FB2044A3C60003C045 /* Build configuration list for PBXNativeTarget "Runner" */ = {
+			isa = XCConfigurationList;
+			buildConfigurations = (
+				33CC10FC2044A3C60003C045 /* Debug */,
+				33CC10FD2044A3C60003C045 /* Release */,
+				338D0CEA231458BD00FA5F75 /* Profile */,
+			);
+			defaultConfigurationIsVisible = 0;
+			defaultConfigurationName = Release;
+		};
+		33CC111B2044C6BA0003C045 /* Build configuration list for PBXAggregateTarget "Flutter Assemble" */ = {
+			isa = XCConfigurationList;
+			buildConfigurations = (
+				33CC111C2044C6BA0003C045 /* Debug */,
+				33CC111D2044C6BA0003C045 /* Release */,
+				338D0CEB231458BD00FA5F75 /* Profile */,
+			);
+			defaultConfigurationIsVisible = 0;
+			defaultConfigurationName = Release;
+		};
+/* End XCConfigurationList section */
+	};
+	rootObject = 33CC10E52044A3C60003C045 /* Project object */;
+}
diff --git a/petitpal/macos/Runner.xcodeproj/project.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist b/petitpal/macos/Runner.xcodeproj/project.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist
index 18d9810..fc6bf80 100644
--- a/petitpal/macos/Runner.xcodeproj/project.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist
+++ b/petitpal/macos/Runner.xcodeproj/project.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist
@@ -1,8 +1,8 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
-<plist version="1.0">
-<dict>
-	<key>IDEDidComputeMac32BitWarning</key>
-	<true/>
-</dict>
-</plist>
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
+<plist version="1.0">
+<dict>
+	<key>IDEDidComputeMac32BitWarning</key>
+	<true/>
+</dict>
+</plist>
diff --git a/petitpal/macos/Runner.xcodeproj/xcshareddata/xcschemes/Runner.xcscheme b/petitpal/macos/Runner.xcodeproj/xcshareddata/xcschemes/Runner.xcscheme
index 83ebef3..8f38072 100644
--- a/petitpal/macos/Runner.xcodeproj/xcshareddata/xcschemes/Runner.xcscheme
+++ b/petitpal/macos/Runner.xcodeproj/xcshareddata/xcschemes/Runner.xcscheme
@@ -1,99 +1,99 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<Scheme
-   LastUpgradeVersion = "1510"
-   version = "1.3">
-   <BuildAction
-      parallelizeBuildables = "YES"
-      buildImplicitDependencies = "YES">
-      <BuildActionEntries>
-         <BuildActionEntry
-            buildForTesting = "YES"
-            buildForRunning = "YES"
-            buildForProfiling = "YES"
-            buildForArchiving = "YES"
-            buildForAnalyzing = "YES">
-            <BuildableReference
-               BuildableIdentifier = "primary"
-               BlueprintIdentifier = "33CC10EC2044A3C60003C045"
-               BuildableName = "petitpal.app"
-               BlueprintName = "Runner"
-               ReferencedContainer = "container:Runner.xcodeproj">
-            </BuildableReference>
-         </BuildActionEntry>
-      </BuildActionEntries>
-   </BuildAction>
-   <TestAction
-      buildConfiguration = "Debug"
-      selectedDebuggerIdentifier = "Xcode.DebuggerFoundation.Debugger.LLDB"
-      selectedLauncherIdentifier = "Xcode.DebuggerFoundation.Launcher.LLDB"
-      shouldUseLaunchSchemeArgsEnv = "YES">
-      <MacroExpansion>
-         <BuildableReference
-            BuildableIdentifier = "primary"
-            BlueprintIdentifier = "33CC10EC2044A3C60003C045"
-            BuildableName = "petitpal.app"
-            BlueprintName = "Runner"
-            ReferencedContainer = "container:Runner.xcodeproj">
-         </BuildableReference>
-      </MacroExpansion>
-      <Testables>
-         <TestableReference
-            skipped = "NO"
-            parallelizable = "YES">
-            <BuildableReference
-               BuildableIdentifier = "primary"
-               BlueprintIdentifier = "331C80D4294CF70F00263BE5"
-               BuildableName = "RunnerTests.xctest"
-               BlueprintName = "RunnerTests"
-               ReferencedContainer = "container:Runner.xcodeproj">
-            </BuildableReference>
-         </TestableReference>
-      </Testables>
-   </TestAction>
-   <LaunchAction
-      buildConfiguration = "Debug"
-      selectedDebuggerIdentifier = "Xcode.DebuggerFoundation.Debugger.LLDB"
-      selectedLauncherIdentifier = "Xcode.DebuggerFoundation.Launcher.LLDB"
-      launchStyle = "0"
-      useCustomWorkingDirectory = "NO"
-      ignoresPersistentStateOnLaunch = "NO"
-      debugDocumentVersioning = "YES"
-      debugServiceExtension = "internal"
-      enableGPUValidationMode = "1"
-      allowLocationSimulation = "YES">
-      <BuildableProductRunnable
-         runnableDebuggingMode = "0">
-         <BuildableReference
-            BuildableIdentifier = "primary"
-            BlueprintIdentifier = "33CC10EC2044A3C60003C045"
-            BuildableName = "petitpal.app"
-            BlueprintName = "Runner"
-            ReferencedContainer = "container:Runner.xcodeproj">
-         </BuildableReference>
-      </BuildableProductRunnable>
-   </LaunchAction>
-   <ProfileAction
-      buildConfiguration = "Profile"
-      shouldUseLaunchSchemeArgsEnv = "YES"
-      savedToolIdentifier = ""
-      useCustomWorkingDirectory = "NO"
-      debugDocumentVersioning = "YES">
-      <BuildableProductRunnable
-         runnableDebuggingMode = "0">
-         <BuildableReference
-            BuildableIdentifier = "primary"
-            BlueprintIdentifier = "33CC10EC2044A3C60003C045"
-            BuildableName = "petitpal.app"
-            BlueprintName = "Runner"
-            ReferencedContainer = "container:Runner.xcodeproj">
-         </BuildableReference>
-      </BuildableProductRunnable>
-   </ProfileAction>
-   <AnalyzeAction
-      buildConfiguration = "Debug">
-   </AnalyzeAction>
-   <ArchiveAction
-      buildConfiguration = "Release"
-      revealArchiveInOrganizer = "YES">
-   </ArchiveAction>
-</Scheme>
+<?xml version="1.0" encoding="UTF-8"?>
+<Scheme
+   LastUpgradeVersion = "1510"
+   version = "1.3">
+   <BuildAction
+      parallelizeBuildables = "YES"
+      buildImplicitDependencies = "YES">
+      <BuildActionEntries>
+         <BuildActionEntry
+            buildForTesting = "YES"
+            buildForRunning = "YES"
+            buildForProfiling = "YES"
+            buildForArchiving = "YES"
+            buildForAnalyzing = "YES">
+            <BuildableReference
+               BuildableIdentifier = "primary"
+               BlueprintIdentifier = "33CC10EC2044A3C60003C045"
+               BuildableName = "petitpal.app"
+               BlueprintName = "Runner"
+               ReferencedContainer = "container:Runner.xcodeproj">
+            </BuildableReference>
+         </BuildActionEntry>
+      </BuildActionEntries>
+   </BuildAction>
+   <TestAction
+      buildConfiguration = "Debug"
+      selectedDebuggerIdentifier = "Xcode.DebuggerFoundation.Debugger.LLDB"
+      selectedLauncherIdentifier = "Xcode.DebuggerFoundation.Launcher.LLDB"
+      shouldUseLaunchSchemeArgsEnv = "YES">
+      <MacroExpansion>
+         <BuildableReference
+            BuildableIdentifier = "primary"
+            BlueprintIdentifier = "33CC10EC2044A3C60003C045"
+            BuildableName = "petitpal.app"
+            BlueprintName = "Runner"
+            ReferencedContainer = "container:Runner.xcodeproj">
+         </BuildableReference>
+      </MacroExpansion>
+      <Testables>
+         <TestableReference
+            skipped = "NO"
+            parallelizable = "YES">
+            <BuildableReference
+               BuildableIdentifier = "primary"
+               BlueprintIdentifier = "331C80D4294CF70F00263BE5"
+               BuildableName = "RunnerTests.xctest"
+               BlueprintName = "RunnerTests"
+               ReferencedContainer = "container:Runner.xcodeproj">
+            </BuildableReference>
+         </TestableReference>
+      </Testables>
+   </TestAction>
+   <LaunchAction
+      buildConfiguration = "Debug"
+      selectedDebuggerIdentifier = "Xcode.DebuggerFoundation.Debugger.LLDB"
+      selectedLauncherIdentifier = "Xcode.DebuggerFoundation.Launcher.LLDB"
+      launchStyle = "0"
+      useCustomWorkingDirectory = "NO"
+      ignoresPersistentStateOnLaunch = "NO"
+      debugDocumentVersioning = "YES"
+      debugServiceExtension = "internal"
+      enableGPUValidationMode = "1"
+      allowLocationSimulation = "YES">
+      <BuildableProductRunnable
+         runnableDebuggingMode = "0">
+         <BuildableReference
+            BuildableIdentifier = "primary"
+            BlueprintIdentifier = "33CC10EC2044A3C60003C045"
+            BuildableName = "petitpal.app"
+            BlueprintName = "Runner"
+            ReferencedContainer = "container:Runner.xcodeproj">
+         </BuildableReference>
+      </BuildableProductRunnable>
+   </LaunchAction>
+   <ProfileAction
+      buildConfiguration = "Profile"
+      shouldUseLaunchSchemeArgsEnv = "YES"
+      savedToolIdentifier = ""
+      useCustomWorkingDirectory = "NO"
+      debugDocumentVersioning = "YES">
+      <BuildableProductRunnable
+         runnableDebuggingMode = "0">
+         <BuildableReference
+            BuildableIdentifier = "primary"
+            BlueprintIdentifier = "33CC10EC2044A3C60003C045"
+            BuildableName = "petitpal.app"
+            BlueprintName = "Runner"
+            ReferencedContainer = "container:Runner.xcodeproj">
+         </BuildableReference>
+      </BuildableProductRunnable>
+   </ProfileAction>
+   <AnalyzeAction
+      buildConfiguration = "Debug">
+   </AnalyzeAction>
+   <ArchiveAction
+      buildConfiguration = "Release"
+      revealArchiveInOrganizer = "YES">
+   </ArchiveAction>
+</Scheme>
diff --git a/petitpal/macos/Runner.xcworkspace/contents.xcworkspacedata b/petitpal/macos/Runner.xcworkspace/contents.xcworkspacedata
index 1d526a1..59c6d39 100644
--- a/petitpal/macos/Runner.xcworkspace/contents.xcworkspacedata
+++ b/petitpal/macos/Runner.xcworkspace/contents.xcworkspacedata
@@ -1,7 +1,7 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<Workspace
-   version = "1.0">
-   <FileRef
-      location = "group:Runner.xcodeproj">
-   </FileRef>
-</Workspace>
+<?xml version="1.0" encoding="UTF-8"?>
+<Workspace
+   version = "1.0">
+   <FileRef
+      location = "group:Runner.xcodeproj">
+   </FileRef>
+</Workspace>
diff --git a/petitpal/macos/Runner.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist b/petitpal/macos/Runner.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist
index 18d9810..fc6bf80 100644
--- a/petitpal/macos/Runner.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist
+++ b/petitpal/macos/Runner.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist
@@ -1,8 +1,8 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
-<plist version="1.0">
-<dict>
-	<key>IDEDidComputeMac32BitWarning</key>
-	<true/>
-</dict>
-</plist>
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
+<plist version="1.0">
+<dict>
+	<key>IDEDidComputeMac32BitWarning</key>
+	<true/>
+</dict>
+</plist>
diff --git a/petitpal/macos/Runner/AppDelegate.swift b/petitpal/macos/Runner/AppDelegate.swift
index b3c1761..c5c474d 100644
--- a/petitpal/macos/Runner/AppDelegate.swift
+++ b/petitpal/macos/Runner/AppDelegate.swift
@@ -1,13 +1,13 @@
-import Cocoa
-import FlutterMacOS
-
-@main
-class AppDelegate: FlutterAppDelegate {
-  override func applicationShouldTerminateAfterLastWindowClosed(_ sender: NSApplication) -> Bool {
-    return true
-  }
-
-  override func applicationSupportsSecureRestorableState(_ app: NSApplication) -> Bool {
-    return true
-  }
-}
+import Cocoa
+import FlutterMacOS
+
+@main
+class AppDelegate: FlutterAppDelegate {
+  override func applicationShouldTerminateAfterLastWindowClosed(_ sender: NSApplication) -> Bool {
+    return true
+  }
+
+  override func applicationSupportsSecureRestorableState(_ app: NSApplication) -> Bool {
+    return true
+  }
+}
diff --git a/petitpal/macos/Runner/Assets.xcassets/AppIcon.appiconset/Contents.json b/petitpal/macos/Runner/Assets.xcassets/AppIcon.appiconset/Contents.json
index a2ec33f..8d4e7cb 100644
--- a/petitpal/macos/Runner/Assets.xcassets/AppIcon.appiconset/Contents.json
+++ b/petitpal/macos/Runner/Assets.xcassets/AppIcon.appiconset/Contents.json
@@ -1,68 +1,68 @@
-{
-  "images" : [
-    {
-      "size" : "16x16",
-      "idiom" : "mac",
-      "filename" : "app_icon_16.png",
-      "scale" : "1x"
-    },
-    {
-      "size" : "16x16",
-      "idiom" : "mac",
-      "filename" : "app_icon_32.png",
-      "scale" : "2x"
-    },
-    {
-      "size" : "32x32",
-      "idiom" : "mac",
-      "filename" : "app_icon_32.png",
-      "scale" : "1x"
-    },
-    {
-      "size" : "32x32",
-      "idiom" : "mac",
-      "filename" : "app_icon_64.png",
-      "scale" : "2x"
-    },
-    {
-      "size" : "128x128",
-      "idiom" : "mac",
-      "filename" : "app_icon_128.png",
-      "scale" : "1x"
-    },
-    {
-      "size" : "128x128",
-      "idiom" : "mac",
-      "filename" : "app_icon_256.png",
-      "scale" : "2x"
-    },
-    {
-      "size" : "256x256",
-      "idiom" : "mac",
-      "filename" : "app_icon_256.png",
-      "scale" : "1x"
-    },
-    {
-      "size" : "256x256",
-      "idiom" : "mac",
-      "filename" : "app_icon_512.png",
-      "scale" : "2x"
-    },
-    {
-      "size" : "512x512",
-      "idiom" : "mac",
-      "filename" : "app_icon_512.png",
-      "scale" : "1x"
-    },
-    {
-      "size" : "512x512",
-      "idiom" : "mac",
-      "filename" : "app_icon_1024.png",
-      "scale" : "2x"
-    }
-  ],
-  "info" : {
-    "version" : 1,
-    "author" : "xcode"
-  }
-}
+{
+  "images" : [
+    {
+      "size" : "16x16",
+      "idiom" : "mac",
+      "filename" : "app_icon_16.png",
+      "scale" : "1x"
+    },
+    {
+      "size" : "16x16",
+      "idiom" : "mac",
+      "filename" : "app_icon_32.png",
+      "scale" : "2x"
+    },
+    {
+      "size" : "32x32",
+      "idiom" : "mac",
+      "filename" : "app_icon_32.png",
+      "scale" : "1x"
+    },
+    {
+      "size" : "32x32",
+      "idiom" : "mac",
+      "filename" : "app_icon_64.png",
+      "scale" : "2x"
+    },
+    {
+      "size" : "128x128",
+      "idiom" : "mac",
+      "filename" : "app_icon_128.png",
+      "scale" : "1x"
+    },
+    {
+      "size" : "128x128",
+      "idiom" : "mac",
+      "filename" : "app_icon_256.png",
+      "scale" : "2x"
+    },
+    {
+      "size" : "256x256",
+      "idiom" : "mac",
+      "filename" : "app_icon_256.png",
+      "scale" : "1x"
+    },
+    {
+      "size" : "256x256",
+      "idiom" : "mac",
+      "filename" : "app_icon_512.png",
+      "scale" : "2x"
+    },
+    {
+      "size" : "512x512",
+      "idiom" : "mac",
+      "filename" : "app_icon_512.png",
+      "scale" : "1x"
+    },
+    {
+      "size" : "512x512",
+      "idiom" : "mac",
+      "filename" : "app_icon_1024.png",
+      "scale" : "2x"
+    }
+  ],
+  "info" : {
+    "version" : 1,
+    "author" : "xcode"
+  }
+}
diff --git a/petitpal/macos/Runner/Base.lproj/MainMenu.xib b/petitpal/macos/Runner/Base.lproj/MainMenu.xib
index 80e867a..4632c69 100644
--- a/petitpal/macos/Runner/Base.lproj/MainMenu.xib
+++ b/petitpal/macos/Runner/Base.lproj/MainMenu.xib
@@ -1,343 +1,343 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<document type="com.apple.InterfaceBuilder3.Cocoa.XIB" version="3.0" toolsVersion="14490.70" targetRuntime="MacOSX.Cocoa" propertyAccessControl="none" useAutolayout="YES" customObjectInstantitationMethod="direct">
-    <dependencies>
-        <deployment identifier="macosx"/>
-        <plugIn identifier="com.apple.InterfaceBuilder.CocoaPlugin" version="14490.70"/>
-        <capability name="documents saved in the Xcode 8 format" minToolsVersion="8.0"/>
-    </dependencies>
-    <objects>
-        <customObject id="-2" userLabel="File's Owner" customClass="NSApplication">
-            <connections>
-                <outlet property="delegate" destination="Voe-Tx-rLC" id="GzC-gU-4Uq"/>
-            </connections>
-        </customObject>
-        <customObject id="-1" userLabel="First Responder" customClass="FirstResponder"/>
-        <customObject id="-3" userLabel="Application" customClass="NSObject"/>
-        <customObject id="Voe-Tx-rLC" customClass="AppDelegate" customModule="Runner" customModuleProvider="target">
-            <connections>
-                <outlet property="applicationMenu" destination="uQy-DD-JDr" id="XBo-yE-nKs"/>
-                <outlet property="mainFlutterWindow" destination="QvC-M9-y7g" id="gIp-Ho-8D9"/>
-            </connections>
-        </customObject>
-        <customObject id="YLy-65-1bz" customClass="NSFontManager"/>
-        <menu title="Main Menu" systemMenu="main" id="AYu-sK-qS6">
-            <items>
-                <menuItem title="APP_NAME" id="1Xt-HY-uBw">
-                    <modifierMask key="keyEquivalentModifierMask"/>
-                    <menu key="submenu" title="APP_NAME" systemMenu="apple" id="uQy-DD-JDr">
-                        <items>
-                            <menuItem title="About APP_NAME" id="5kV-Vb-QxS">
-                                <modifierMask key="keyEquivalentModifierMask"/>
-                                <connections>
-                                    <action selector="orderFrontStandardAboutPanel:" target="-1" id="Exp-CZ-Vem"/>
-                                </connections>
-                            </menuItem>
-                            <menuItem isSeparatorItem="YES" id="VOq-y0-SEH"/>
-                            <menuItem title="Preferences…" keyEquivalent="," id="BOF-NM-1cW"/>
-                            <menuItem isSeparatorItem="YES" id="wFC-TO-SCJ"/>
-                            <menuItem title="Services" id="NMo-om-nkz">
-                                <modifierMask key="keyEquivalentModifierMask"/>
-                                <menu key="submenu" title="Services" systemMenu="services" id="hz9-B4-Xy5"/>
-                            </menuItem>
-                            <menuItem isSeparatorItem="YES" id="4je-JR-u6R"/>
-                            <menuItem title="Hide APP_NAME" keyEquivalent="h" id="Olw-nP-bQN">
-                                <connections>
-                                    <action selector="hide:" target="-1" id="PnN-Uc-m68"/>
-                                </connections>
-                            </menuItem>
-                            <menuItem title="Hide Others" keyEquivalent="h" id="Vdr-fp-XzO">
-                                <modifierMask key="keyEquivalentModifierMask" option="YES" command="YES"/>
-                                <connections>
-                                    <action selector="hideOtherApplications:" target="-1" id="VT4-aY-XCT"/>
-                                </connections>
-                            </menuItem>
-                            <menuItem title="Show All" id="Kd2-mp-pUS">
-                                <modifierMask key="keyEquivalentModifierMask"/>
-                                <connections>
-                                    <action selector="unhideAllApplications:" target="-1" id="Dhg-Le-xox"/>
-                                </connections>
-                            </menuItem>
-                            <menuItem isSeparatorItem="YES" id="kCx-OE-vgT"/>
-                            <menuItem title="Quit APP_NAME" keyEquivalent="q" id="4sb-4s-VLi">
-                                <connections>
-                                    <action selector="terminate:" target="-1" id="Te7-pn-YzF"/>
-                                </connections>
-                            </menuItem>
-                        </items>
-                    </menu>
-                </menuItem>
-                <menuItem title="Edit" id="5QF-Oa-p0T">
-                    <modifierMask key="keyEquivalentModifierMask"/>
-                    <menu key="submenu" title="Edit" id="W48-6f-4Dl">
-                        <items>
-                            <menuItem title="Undo" keyEquivalent="z" id="dRJ-4n-Yzg">
-                                <connections>
-                                    <action selector="undo:" target="-1" id="M6e-cu-g7V"/>
-                                </connections>
-                            </menuItem>
-                            <menuItem title="Redo" keyEquivalent="Z" id="6dh-zS-Vam">
-                                <connections>
-                                    <action selector="redo:" target="-1" id="oIA-Rs-6OD"/>
-                                </connections>
-                            </menuItem>
-                            <menuItem isSeparatorItem="YES" id="WRV-NI-Exz"/>
-                            <menuItem title="Cut" keyEquivalent="x" id="uRl-iY-unG">
-                                <connections>
-                                    <action selector="cut:" target="-1" id="YJe-68-I9s"/>
-                                </connections>
-                            </menuItem>
-                            <menuItem title="Copy" keyEquivalent="c" id="x3v-GG-iWU">
-                                <connections>
-                                    <action selector="copy:" target="-1" id="G1f-GL-Joy"/>
-                                </connections>
-                            </menuItem>
-                            <menuItem title="Paste" keyEquivalent="v" id="gVA-U4-sdL">
-                                <connections>
-                                    <action selector="paste:" target="-1" id="UvS-8e-Qdg"/>
-                                </connections>
-                            </menuItem>
-                            <menuItem title="Paste and Match Style" keyEquivalent="V" id="WeT-3V-zwk">
-                                <modifierMask key="keyEquivalentModifierMask" option="YES" command="YES"/>
-                                <connections>
-                                    <action selector="pasteAsPlainText:" target="-1" id="cEh-KX-wJQ"/>
-                                </connections>
-                            </menuItem>
-                            <menuItem title="Delete" id="pa3-QI-u2k">
-                                <modifierMask key="keyEquivalentModifierMask"/>
-                                <connections>
-                                    <action selector="delete:" target="-1" id="0Mk-Ml-PaM"/>
-                                </connections>
-                            </menuItem>
-                            <menuItem title="Select All" keyEquivalent="a" id="Ruw-6m-B2m">
-                                <connections>
-                                    <action selector="selectAll:" target="-1" id="VNm-Mi-diN"/>
-                                </connections>
-                            </menuItem>
-                            <menuItem isSeparatorItem="YES" id="uyl-h8-XO2"/>
-                            <menuItem title="Find" id="4EN-yA-p0u">
-                                <modifierMask key="keyEquivalentModifierMask"/>
-                                <menu key="submenu" title="Find" id="1b7-l0-nxx">
-                                    <items>
-                                        <menuItem title="Find…" tag="1" keyEquivalent="f" id="Xz5-n4-O0W">
-                                            <connections>
-                                                <action selector="performFindPanelAction:" target="-1" id="cD7-Qs-BN4"/>
-                                            </connections>
-                                        </menuItem>
-                                        <menuItem title="Find and Replace…" tag="12" keyEquivalent="f" id="YEy-JH-Tfz">
-                                            <modifierMask key="keyEquivalentModifierMask" option="YES" command="YES"/>
-                                            <connections>
-                                                <action selector="performFindPanelAction:" target="-1" id="WD3-Gg-5AJ"/>
-                                            </connections>
-                                        </menuItem>
-                                        <menuItem title="Find Next" tag="2" keyEquivalent="g" id="q09-fT-Sye">
-                                            <connections>
-                                                <action selector="performFindPanelAction:" target="-1" id="NDo-RZ-v9R"/>
-                                            </connections>
-                                        </menuItem>
-                                        <menuItem title="Find Previous" tag="3" keyEquivalent="G" id="OwM-mh-QMV">
-                                            <connections>
-                                                <action selector="performFindPanelAction:" target="-1" id="HOh-sY-3ay"/>
-                                            </connections>
-                                        </menuItem>
-                                        <menuItem title="Use Selection for Find" tag="7" keyEquivalent="e" id="buJ-ug-pKt">
-                                            <connections>
-                                                <action selector="performFindPanelAction:" target="-1" id="U76-nv-p5D"/>
-                                            </connections>
-                                        </menuItem>
-                                        <menuItem title="Jump to Selection" keyEquivalent="j" id="S0p-oC-mLd">
-                                            <connections>
-                                                <action selector="centerSelectionInVisibleArea:" target="-1" id="IOG-6D-g5B"/>
-                                            </connections>
-                                        </menuItem>
-                                    </items>
-                                </menu>
-                            </menuItem>
-                            <menuItem title="Spelling and Grammar" id="Dv1-io-Yv7">
-                                <modifierMask key="keyEquivalentModifierMask"/>
-                                <menu key="submenu" title="Spelling" id="3IN-sU-3Bg">
-                                    <items>
-                                        <menuItem title="Show Spelling and Grammar" keyEquivalent=":" id="HFo-cy-zxI">
-                                            <connections>
-                                                <action selector="showGuessPanel:" target="-1" id="vFj-Ks-hy3"/>
-                                            </connections>
-                                        </menuItem>
-                                        <menuItem title="Check Document Now" keyEquivalent=";" id="hz2-CU-CR7">
-                                            <connections>
-                                                <action selector="checkSpelling:" target="-1" id="fz7-VC-reM"/>
-                                            </connections>
-                                        </menuItem>
-                                        <menuItem isSeparatorItem="YES" id="bNw-od-mp5"/>
-                                        <menuItem title="Check Spelling While Typing" id="rbD-Rh-wIN">
-                                            <modifierMask key="keyEquivalentModifierMask"/>
-                                            <connections>
-                                                <action selector="toggleContinuousSpellChecking:" target="-1" id="7w6-Qz-0kB"/>
-                                            </connections>
-                                        </menuItem>
-                                        <menuItem title="Check Grammar With Spelling" id="mK6-2p-4JG">
-                                            <modifierMask key="keyEquivalentModifierMask"/>
-                                            <connections>
-                                                <action selector="toggleGrammarChecking:" target="-1" id="muD-Qn-j4w"/>
-                                            </connections>
-                                        </menuItem>
-                                        <menuItem title="Correct Spelling Automatically" id="78Y-hA-62v">
-                                            <modifierMask key="keyEquivalentModifierMask"/>
-                                            <connections>
-                                                <action selector="toggleAutomaticSpellingCorrection:" target="-1" id="2lM-Qi-WAP"/>
-                                            </connections>
-                                        </menuItem>
-                                    </items>
-                                </menu>
-                            </menuItem>
-                            <menuItem title="Substitutions" id="9ic-FL-obx">
-                                <modifierMask key="keyEquivalentModifierMask"/>
-                                <menu key="submenu" title="Substitutions" id="FeM-D8-WVr">
-                                    <items>
-                                        <menuItem title="Show Substitutions" id="z6F-FW-3nz">
-                                            <modifierMask key="keyEquivalentModifierMask"/>
-                                            <connections>
-                                                <action selector="orderFrontSubstitutionsPanel:" target="-1" id="oku-mr-iSq"/>
-                                            </connections>
-                                        </menuItem>
-                                        <menuItem isSeparatorItem="YES" id="gPx-C9-uUO"/>
-                                        <menuItem title="Smart Copy/Paste" id="9yt-4B-nSM">
-                                            <modifierMask key="keyEquivalentModifierMask"/>
-                                            <connections>
-                                                <action selector="toggleSmartInsertDelete:" target="-1" id="3IJ-Se-DZD"/>
-                                            </connections>
-                                        </menuItem>
-                                        <menuItem title="Smart Quotes" id="hQb-2v-fYv">
-                                            <modifierMask key="keyEquivalentModifierMask"/>
-                                            <connections>
-                                                <action selector="toggleAutomaticQuoteSubstitution:" target="-1" id="ptq-xd-QOA"/>
-                                            </connections>
-                                        </menuItem>
-                                        <menuItem title="Smart Dashes" id="rgM-f4-ycn">
-                                            <modifierMask key="keyEquivalentModifierMask"/>
-                                            <connections>
-                                                <action selector="toggleAutomaticDashSubstitution:" target="-1" id="oCt-pO-9gS"/>
-                                            </connections>
-                                        </menuItem>
-                                        <menuItem title="Smart Links" id="cwL-P1-jid">
-                                            <modifierMask key="keyEquivalentModifierMask"/>
-                                            <connections>
-                                                <action selector="toggleAutomaticLinkDetection:" target="-1" id="Gip-E3-Fov"/>
-                                            </connections>
-                                        </menuItem>
-                                        <menuItem title="Data Detectors" id="tRr-pd-1PS">
-                                            <modifierMask key="keyEquivalentModifierMask"/>
-                                            <connections>
-                                                <action selector="toggleAutomaticDataDetection:" target="-1" id="R1I-Nq-Kbl"/>
-                                            </connections>
-                                        </menuItem>
-                                        <menuItem title="Text Replacement" id="HFQ-gK-NFA">
-                                            <modifierMask key="keyEquivalentModifierMask"/>
-                                            <connections>
-                                                <action selector="toggleAutomaticTextReplacement:" target="-1" id="DvP-Fe-Py6"/>
-                                            </connections>
-                                        </menuItem>
-                                    </items>
-                                </menu>
-                            </menuItem>
-                            <menuItem title="Transformations" id="2oI-Rn-ZJC">
-                                <modifierMask key="keyEquivalentModifierMask"/>
-                                <menu key="submenu" title="Transformations" id="c8a-y6-VQd">
-                                    <items>
-                                        <menuItem title="Make Upper Case" id="vmV-6d-7jI">
-                                            <modifierMask key="keyEquivalentModifierMask"/>
-                                            <connections>
-                                                <action selector="uppercaseWord:" target="-1" id="sPh-Tk-edu"/>
-                                            </connections>
-                                        </menuItem>
-                                        <menuItem title="Make Lower Case" id="d9M-CD-aMd">
-                                            <modifierMask key="keyEquivalentModifierMask"/>
-                                            <connections>
-                                                <action selector="lowercaseWord:" target="-1" id="iUZ-b5-hil"/>
-                                            </connections>
-                                        </menuItem>
-                                        <menuItem title="Capitalize" id="UEZ-Bs-lqG">
-                                            <modifierMask key="keyEquivalentModifierMask"/>
-                                            <connections>
-                                                <action selector="capitalizeWord:" target="-1" id="26H-TL-nsh"/>
-                                            </connections>
-                                        </menuItem>
-                                    </items>
-                                </menu>
-                            </menuItem>
-                            <menuItem title="Speech" id="xrE-MZ-jX0">
-                                <modifierMask key="keyEquivalentModifierMask"/>
-                                <menu key="submenu" title="Speech" id="3rS-ZA-NoH">
-                                    <items>
-                                        <menuItem title="Start Speaking" id="Ynk-f8-cLZ">
-                                            <modifierMask key="keyEquivalentModifierMask"/>
-                                            <connections>
-                                                <action selector="startSpeaking:" target="-1" id="654-Ng-kyl"/>
-                                            </connections>
-                                        </menuItem>
-                                        <menuItem title="Stop Speaking" id="Oyz-dy-DGm">
-                                            <modifierMask key="keyEquivalentModifierMask"/>
-                                            <connections>
-                                                <action selector="stopSpeaking:" target="-1" id="dX8-6p-jy9"/>
-                                            </connections>
-                                        </menuItem>
-                                    </items>
-                                </menu>
-                            </menuItem>
-                        </items>
-                    </menu>
-                </menuItem>
-                <menuItem title="View" id="H8h-7b-M4v">
-                    <modifierMask key="keyEquivalentModifierMask"/>
-                    <menu key="submenu" title="View" id="HyV-fh-RgO">
-                        <items>
-                            <menuItem title="Enter Full Screen" keyEquivalent="f" id="4J7-dP-txa">
-                                <modifierMask key="keyEquivalentModifierMask" control="YES" command="YES"/>
-                                <connections>
-                                    <action selector="toggleFullScreen:" target="-1" id="dU3-MA-1Rq"/>
-                                </connections>
-                            </menuItem>
-                        </items>
-                    </menu>
-                </menuItem>
-                <menuItem title="Window" id="aUF-d1-5bR">
-                    <modifierMask key="keyEquivalentModifierMask"/>
-                    <menu key="submenu" title="Window" systemMenu="window" id="Td7-aD-5lo">
-                        <items>
-                            <menuItem title="Minimize" keyEquivalent="m" id="OY7-WF-poV">
-                                <connections>
-                                    <action selector="performMiniaturize:" target="-1" id="VwT-WD-YPe"/>
-                                </connections>
-                            </menuItem>
-                            <menuItem title="Zoom" id="R4o-n2-Eq4">
-                                <modifierMask key="keyEquivalentModifierMask"/>
-                                <connections>
-                                    <action selector="performZoom:" target="-1" id="DIl-cC-cCs"/>
-                                </connections>
-                            </menuItem>
-                            <menuItem isSeparatorItem="YES" id="eu3-7i-yIM"/>
-                            <menuItem title="Bring All to Front" id="LE2-aR-0XJ">
-                                <modifierMask key="keyEquivalentModifierMask"/>
-                                <connections>
-                                    <action selector="arrangeInFront:" target="-1" id="DRN-fu-gQh"/>
-                                </connections>
-                            </menuItem>
-                        </items>
-                    </menu>
-                </menuItem>
-                <menuItem title="Help" id="EPT-qC-fAb">
-                    <modifierMask key="keyEquivalentModifierMask"/>
-                    <menu key="submenu" title="Help" systemMenu="help" id="rJ0-wn-3NY"/>
-                </menuItem>
-            </items>
-            <point key="canvasLocation" x="142" y="-258"/>
-        </menu>
-        <window title="APP_NAME" allowsToolTipsWhenApplicationIsInactive="NO" autorecalculatesKeyViewLoop="NO" releasedWhenClosed="NO" animationBehavior="default" id="QvC-M9-y7g" customClass="MainFlutterWindow" customModule="Runner" customModuleProvider="target">
-            <windowStyleMask key="styleMask" titled="YES" closable="YES" miniaturizable="YES" resizable="YES"/>
-            <rect key="contentRect" x="335" y="390" width="800" height="600"/>
-            <rect key="screenRect" x="0.0" y="0.0" width="2560" height="1577"/>
-            <view key="contentView" wantsLayer="YES" id="EiT-Mj-1SZ">
-                <rect key="frame" x="0.0" y="0.0" width="800" height="600"/>
-                <autoresizingMask key="autoresizingMask"/>
-            </view>
-        </window>
-    </objects>
-</document>
+<?xml version="1.0" encoding="UTF-8"?>
+<document type="com.apple.InterfaceBuilder3.Cocoa.XIB" version="3.0" toolsVersion="14490.70" targetRuntime="MacOSX.Cocoa" propertyAccessControl="none" useAutolayout="YES" customObjectInstantitationMethod="direct">
+    <dependencies>
+        <deployment identifier="macosx"/>
+        <plugIn identifier="com.apple.InterfaceBuilder.CocoaPlugin" version="14490.70"/>
+        <capability name="documents saved in the Xcode 8 format" minToolsVersion="8.0"/>
+    </dependencies>
+    <objects>
+        <customObject id="-2" userLabel="File's Owner" customClass="NSApplication">
+            <connections>
+                <outlet property="delegate" destination="Voe-Tx-rLC" id="GzC-gU-4Uq"/>
+            </connections>
+        </customObject>
+        <customObject id="-1" userLabel="First Responder" customClass="FirstResponder"/>
+        <customObject id="-3" userLabel="Application" customClass="NSObject"/>
+        <customObject id="Voe-Tx-rLC" customClass="AppDelegate" customModule="Runner" customModuleProvider="target">
+            <connections>
+                <outlet property="applicationMenu" destination="uQy-DD-JDr" id="XBo-yE-nKs"/>
+                <outlet property="mainFlutterWindow" destination="QvC-M9-y7g" id="gIp-Ho-8D9"/>
+            </connections>
+        </customObject>
+        <customObject id="YLy-65-1bz" customClass="NSFontManager"/>
+        <menu title="Main Menu" systemMenu="main" id="AYu-sK-qS6">
+            <items>
+                <menuItem title="APP_NAME" id="1Xt-HY-uBw">
+                    <modifierMask key="keyEquivalentModifierMask"/>
+                    <menu key="submenu" title="APP_NAME" systemMenu="apple" id="uQy-DD-JDr">
+                        <items>
+                            <menuItem title="About APP_NAME" id="5kV-Vb-QxS">
+                                <modifierMask key="keyEquivalentModifierMask"/>
+                                <connections>
+                                    <action selector="orderFrontStandardAboutPanel:" target="-1" id="Exp-CZ-Vem"/>
+                                </connections>
+                            </menuItem>
+                            <menuItem isSeparatorItem="YES" id="VOq-y0-SEH"/>
+                            <menuItem title="Preferences…" keyEquivalent="," id="BOF-NM-1cW"/>
+                            <menuItem isSeparatorItem="YES" id="wFC-TO-SCJ"/>
+                            <menuItem title="Services" id="NMo-om-nkz">
+                                <modifierMask key="keyEquivalentModifierMask"/>
+                                <menu key="submenu" title="Services" systemMenu="services" id="hz9-B4-Xy5"/>
+                            </menuItem>
+                            <menuItem isSeparatorItem="YES" id="4je-JR-u6R"/>
+                            <menuItem title="Hide APP_NAME" keyEquivalent="h" id="Olw-nP-bQN">
+                                <connections>
+                                    <action selector="hide:" target="-1" id="PnN-Uc-m68"/>
+                                </connections>
+                            </menuItem>
+                            <menuItem title="Hide Others" keyEquivalent="h" id="Vdr-fp-XzO">
+                                <modifierMask key="keyEquivalentModifierMask" option="YES" command="YES"/>
+                                <connections>
+                                    <action selector="hideOtherApplications:" target="-1" id="VT4-aY-XCT"/>
+                                </connections>
+                            </menuItem>
+                            <menuItem title="Show All" id="Kd2-mp-pUS">
+                                <modifierMask key="keyEquivalentModifierMask"/>
+                                <connections>
+                                    <action selector="unhideAllApplications:" target="-1" id="Dhg-Le-xox"/>
+                                </connections>
+                            </menuItem>
+                            <menuItem isSeparatorItem="YES" id="kCx-OE-vgT"/>
+                            <menuItem title="Quit APP_NAME" keyEquivalent="q" id="4sb-4s-VLi">
+                                <connections>
+                                    <action selector="terminate:" target="-1" id="Te7-pn-YzF"/>
+                                </connections>
+                            </menuItem>
+                        </items>
+                    </menu>
+                </menuItem>
+                <menuItem title="Edit" id="5QF-Oa-p0T">
+                    <modifierMask key="keyEquivalentModifierMask"/>
+                    <menu key="submenu" title="Edit" id="W48-6f-4Dl">
+                        <items>
+                            <menuItem title="Undo" keyEquivalent="z" id="dRJ-4n-Yzg">
+                                <connections>
+                                    <action selector="undo:" target="-1" id="M6e-cu-g7V"/>
+                                </connections>
+                            </menuItem>
+                            <menuItem title="Redo" keyEquivalent="Z" id="6dh-zS-Vam">
+                                <connections>
+                                    <action selector="redo:" target="-1" id="oIA-Rs-6OD"/>
+                                </connections>
+                            </menuItem>
+                            <menuItem isSeparatorItem="YES" id="WRV-NI-Exz"/>
+                            <menuItem title="Cut" keyEquivalent="x" id="uRl-iY-unG">
+                                <connections>
+                                    <action selector="cut:" target="-1" id="YJe-68-I9s"/>
+                                </connections>
+                            </menuItem>
+                            <menuItem title="Copy" keyEquivalent="c" id="x3v-GG-iWU">
+                                <connections>
+                                    <action selector="copy:" target="-1" id="G1f-GL-Joy"/>
+                                </connections>
+                            </menuItem>
+                            <menuItem title="Paste" keyEquivalent="v" id="gVA-U4-sdL">
+                                <connections>
+                                    <action selector="paste:" target="-1" id="UvS-8e-Qdg"/>
+                                </connections>
+                            </menuItem>
+                            <menuItem title="Paste and Match Style" keyEquivalent="V" id="WeT-3V-zwk">
+                                <modifierMask key="keyEquivalentModifierMask" option="YES" command="YES"/>
+                                <connections>
+                                    <action selector="pasteAsPlainText:" target="-1" id="cEh-KX-wJQ"/>
+                                </connections>
+                            </menuItem>
+                            <menuItem title="Delete" id="pa3-QI-u2k">
+                                <modifierMask key="keyEquivalentModifierMask"/>
+                                <connections>
+                                    <action selector="delete:" target="-1" id="0Mk-Ml-PaM"/>
+                                </connections>
+                            </menuItem>
+                            <menuItem title="Select All" keyEquivalent="a" id="Ruw-6m-B2m">
+                                <connections>
+                                    <action selector="selectAll:" target="-1" id="VNm-Mi-diN"/>
+                                </connections>
+                            </menuItem>
+                            <menuItem isSeparatorItem="YES" id="uyl-h8-XO2"/>
+                            <menuItem title="Find" id="4EN-yA-p0u">
+                                <modifierMask key="keyEquivalentModifierMask"/>
+                                <menu key="submenu" title="Find" id="1b7-l0-nxx">
+                                    <items>
+                                        <menuItem title="Find…" tag="1" keyEquivalent="f" id="Xz5-n4-O0W">
+                                            <connections>
+                                                <action selector="performFindPanelAction:" target="-1" id="cD7-Qs-BN4"/>
+                                            </connections>
+                                        </menuItem>
+                                        <menuItem title="Find and Replace…" tag="12" keyEquivalent="f" id="YEy-JH-Tfz">
+                                            <modifierMask key="keyEquivalentModifierMask" option="YES" command="YES"/>
+                                            <connections>
+                                                <action selector="performFindPanelAction:" target="-1" id="WD3-Gg-5AJ"/>
+                                            </connections>
+                                        </menuItem>
+                                        <menuItem title="Find Next" tag="2" keyEquivalent="g" id="q09-fT-Sye">
+                                            <connections>
+                                                <action selector="performFindPanelAction:" target="-1" id="NDo-RZ-v9R"/>
+                                            </connections>
+                                        </menuItem>
+                                        <menuItem title="Find Previous" tag="3" keyEquivalent="G" id="OwM-mh-QMV">
+                                            <connections>
+                                                <action selector="performFindPanelAction:" target="-1" id="HOh-sY-3ay"/>
+                                            </connections>
+                                        </menuItem>
+                                        <menuItem title="Use Selection for Find" tag="7" keyEquivalent="e" id="buJ-ug-pKt">
+                                            <connections>
+                                                <action selector="performFindPanelAction:" target="-1" id="U76-nv-p5D"/>
+                                            </connections>
+                                        </menuItem>
+                                        <menuItem title="Jump to Selection" keyEquivalent="j" id="S0p-oC-mLd">
+                                            <connections>
+                                                <action selector="centerSelectionInVisibleArea:" target="-1" id="IOG-6D-g5B"/>
+                                            </connections>
+                                        </menuItem>
+                                    </items>
+                                </menu>
+                            </menuItem>
+                            <menuItem title="Spelling and Grammar" id="Dv1-io-Yv7">
+                                <modifierMask key="keyEquivalentModifierMask"/>
+                                <menu key="submenu" title="Spelling" id="3IN-sU-3Bg">
+                                    <items>
+                                        <menuItem title="Show Spelling and Grammar" keyEquivalent=":" id="HFo-cy-zxI">
+                                            <connections>
+                                                <action selector="showGuessPanel:" target="-1" id="vFj-Ks-hy3"/>
+                                            </connections>
+                                        </menuItem>
+                                        <menuItem title="Check Document Now" keyEquivalent=";" id="hz2-CU-CR7">
+                                            <connections>
+                                                <action selector="checkSpelling:" target="-1" id="fz7-VC-reM"/>
+                                            </connections>
+                                        </menuItem>
+                                        <menuItem isSeparatorItem="YES" id="bNw-od-mp5"/>
+                                        <menuItem title="Check Spelling While Typing" id="rbD-Rh-wIN">
+                                            <modifierMask key="keyEquivalentModifierMask"/>
+                                            <connections>
+                                                <action selector="toggleContinuousSpellChecking:" target="-1" id="7w6-Qz-0kB"/>
+                                            </connections>
+                                        </menuItem>
+                                        <menuItem title="Check Grammar With Spelling" id="mK6-2p-4JG">
+                                            <modifierMask key="keyEquivalentModifierMask"/>
+                                            <connections>
+                                                <action selector="toggleGrammarChecking:" target="-1" id="muD-Qn-j4w"/>
+                                            </connections>
+                                        </menuItem>
+                                        <menuItem title="Correct Spelling Automatically" id="78Y-hA-62v">
+                                            <modifierMask key="keyEquivalentModifierMask"/>
+                                            <connections>
+                                                <action selector="toggleAutomaticSpellingCorrection:" target="-1" id="2lM-Qi-WAP"/>
+                                            </connections>
+                                        </menuItem>
+                                    </items>
+                                </menu>
+                            </menuItem>
+                            <menuItem title="Substitutions" id="9ic-FL-obx">
+                                <modifierMask key="keyEquivalentModifierMask"/>
+                                <menu key="submenu" title="Substitutions" id="FeM-D8-WVr">
+                                    <items>
+                                        <menuItem title="Show Substitutions" id="z6F-FW-3nz">
+                                            <modifierMask key="keyEquivalentModifierMask"/>
+                                            <connections>
+                                                <action selector="orderFrontSubstitutionsPanel:" target="-1" id="oku-mr-iSq"/>
+                                            </connections>
+                                        </menuItem>
+                                        <menuItem isSeparatorItem="YES" id="gPx-C9-uUO"/>
+                                        <menuItem title="Smart Copy/Paste" id="9yt-4B-nSM">
+                                            <modifierMask key="keyEquivalentModifierMask"/>
+                                            <connections>
+                                                <action selector="toggleSmartInsertDelete:" target="-1" id="3IJ-Se-DZD"/>
+                                            </connections>
+                                        </menuItem>
+                                        <menuItem title="Smart Quotes" id="hQb-2v-fYv">
+                                            <modifierMask key="keyEquivalentModifierMask"/>
+                                            <connections>
+                                                <action selector="toggleAutomaticQuoteSubstitution:" target="-1" id="ptq-xd-QOA"/>
+                                            </connections>
+                                        </menuItem>
+                                        <menuItem title="Smart Dashes" id="rgM-f4-ycn">
+                                            <modifierMask key="keyEquivalentModifierMask"/>
+                                            <connections>
+                                                <action selector="toggleAutomaticDashSubstitution:" target="-1" id="oCt-pO-9gS"/>
+                                            </connections>
+                                        </menuItem>
+                                        <menuItem title="Smart Links" id="cwL-P1-jid">
+                                            <modifierMask key="keyEquivalentModifierMask"/>
+                                            <connections>
+                                                <action selector="toggleAutomaticLinkDetection:" target="-1" id="Gip-E3-Fov"/>
+                                            </connections>
+                                        </menuItem>
+                                        <menuItem title="Data Detectors" id="tRr-pd-1PS">
+                                            <modifierMask key="keyEquivalentModifierMask"/>
+                                            <connections>
+                                                <action selector="toggleAutomaticDataDetection:" target="-1" id="R1I-Nq-Kbl"/>
+                                            </connections>
+                                        </menuItem>
+                                        <menuItem title="Text Replacement" id="HFQ-gK-NFA">
+                                            <modifierMask key="keyEquivalentModifierMask"/>
+                                            <connections>
+                                                <action selector="toggleAutomaticTextReplacement:" target="-1" id="DvP-Fe-Py6"/>
+                                            </connections>
+                                        </menuItem>
+                                    </items>
+                                </menu>
+                            </menuItem>
+                            <menuItem title="Transformations" id="2oI-Rn-ZJC">
+                                <modifierMask key="keyEquivalentModifierMask"/>
+                                <menu key="submenu" title="Transformations" id="c8a-y6-VQd">
+                                    <items>
+                                        <menuItem title="Make Upper Case" id="vmV-6d-7jI">
+                                            <modifierMask key="keyEquivalentModifierMask"/>
+                                            <connections>
+                                                <action selector="uppercaseWord:" target="-1" id="sPh-Tk-edu"/>
+                                            </connections>
+                                        </menuItem>
+                                        <menuItem title="Make Lower Case" id="d9M-CD-aMd">
+                                            <modifierMask key="keyEquivalentModifierMask"/>
+                                            <connections>
+                                                <action selector="lowercaseWord:" target="-1" id="iUZ-b5-hil"/>
+                                            </connections>
+                                        </menuItem>
+                                        <menuItem title="Capitalize" id="UEZ-Bs-lqG">
+                                            <modifierMask key="keyEquivalentModifierMask"/>
+                                            <connections>
+                                                <action selector="capitalizeWord:" target="-1" id="26H-TL-nsh"/>
+                                            </connections>
+                                        </menuItem>
+                                    </items>
+                                </menu>
+                            </menuItem>
+                            <menuItem title="Speech" id="xrE-MZ-jX0">
+                                <modifierMask key="keyEquivalentModifierMask"/>
+                                <menu key="submenu" title="Speech" id="3rS-ZA-NoH">
+                                    <items>
+                                        <menuItem title="Start Speaking" id="Ynk-f8-cLZ">
+                                            <modifierMask key="keyEquivalentModifierMask"/>
+                                            <connections>
+                                                <action selector="startSpeaking:" target="-1" id="654-Ng-kyl"/>
+                                            </connections>
+                                        </menuItem>
+                                        <menuItem title="Stop Speaking" id="Oyz-dy-DGm">
+                                            <modifierMask key="keyEquivalentModifierMask"/>
+                                            <connections>
+                                                <action selector="stopSpeaking:" target="-1" id="dX8-6p-jy9"/>
+                                            </connections>
+                                        </menuItem>
+                                    </items>
+                                </menu>
+                            </menuItem>
+                        </items>
+                    </menu>
+                </menuItem>
+                <menuItem title="View" id="H8h-7b-M4v">
+                    <modifierMask key="keyEquivalentModifierMask"/>
+                    <menu key="submenu" title="View" id="HyV-fh-RgO">
+                        <items>
+                            <menuItem title="Enter Full Screen" keyEquivalent="f" id="4J7-dP-txa">
+                                <modifierMask key="keyEquivalentModifierMask" control="YES" command="YES"/>
+                                <connections>
+                                    <action selector="toggleFullScreen:" target="-1" id="dU3-MA-1Rq"/>
+                                </connections>
+                            </menuItem>
+                        </items>
+                    </menu>
+                </menuItem>
+                <menuItem title="Window" id="aUF-d1-5bR">
+                    <modifierMask key="keyEquivalentModifierMask"/>
+                    <menu key="submenu" title="Window" systemMenu="window" id="Td7-aD-5lo">
+                        <items>
+                            <menuItem title="Minimize" keyEquivalent="m" id="OY7-WF-poV">
+                                <connections>
+                                    <action selector="performMiniaturize:" target="-1" id="VwT-WD-YPe"/>
+                                </connections>
+                            </menuItem>
+                            <menuItem title="Zoom" id="R4o-n2-Eq4">
+                                <modifierMask key="keyEquivalentModifierMask"/>
+                                <connections>
+                                    <action selector="performZoom:" target="-1" id="DIl-cC-cCs"/>
+                                </connections>
+                            </menuItem>
+                            <menuItem isSeparatorItem="YES" id="eu3-7i-yIM"/>
+                            <menuItem title="Bring All to Front" id="LE2-aR-0XJ">
+                                <modifierMask key="keyEquivalentModifierMask"/>
+                                <connections>
+                                    <action selector="arrangeInFront:" target="-1" id="DRN-fu-gQh"/>
+                                </connections>
+                            </menuItem>
+                        </items>
+                    </menu>
+                </menuItem>
+                <menuItem title="Help" id="EPT-qC-fAb">
+                    <modifierMask key="keyEquivalentModifierMask"/>
+                    <menu key="submenu" title="Help" systemMenu="help" id="rJ0-wn-3NY"/>
+                </menuItem>
+            </items>
+            <point key="canvasLocation" x="142" y="-258"/>
+        </menu>
+        <window title="APP_NAME" allowsToolTipsWhenApplicationIsInactive="NO" autorecalculatesKeyViewLoop="NO" releasedWhenClosed="NO" animationBehavior="default" id="QvC-M9-y7g" customClass="MainFlutterWindow" customModule="Runner" customModuleProvider="target">
+            <windowStyleMask key="styleMask" titled="YES" closable="YES" miniaturizable="YES" resizable="YES"/>
+            <rect key="contentRect" x="335" y="390" width="800" height="600"/>
+            <rect key="screenRect" x="0.0" y="0.0" width="2560" height="1577"/>
+            <view key="contentView" wantsLayer="YES" id="EiT-Mj-1SZ">
+                <rect key="frame" x="0.0" y="0.0" width="800" height="600"/>
+                <autoresizingMask key="autoresizingMask"/>
+            </view>
+        </window>
+    </objects>
+</document>
diff --git a/petitpal/macos/Runner/Configs/AppInfo.xcconfig b/petitpal/macos/Runner/Configs/AppInfo.xcconfig
index 4d5ba36..20b3972 100644
--- a/petitpal/macos/Runner/Configs/AppInfo.xcconfig
+++ b/petitpal/macos/Runner/Configs/AppInfo.xcconfig
@@ -1,14 +1,14 @@
-// Application-level settings for the Runner target.
-//
-// This may be replaced with something auto-generated from metadata (e.g., pubspec.yaml) in the
-// future. If not, the values below would default to using the project name when this becomes a
-// 'flutter create' template.
-
-// The application's name. By default this is also the title of the Flutter window.
-PRODUCT_NAME = petitpal
-
-// The application's bundle identifier
-PRODUCT_BUNDLE_IDENTIFIER = com.example.petitpal
-
-// The copyright displayed in application information
-PRODUCT_COPYRIGHT = Copyright © 2025 com.example. All rights reserved.
+// Application-level settings for the Runner target.
+//
+// This may be replaced with something auto-generated from metadata (e.g., pubspec.yaml) in the
+// future. If not, the values below would default to using the project name when this becomes a
+// 'flutter create' template.
+
+// The application's name. By default this is also the title of the Flutter window.
+PRODUCT_NAME = petitpal
+
+// The application's bundle identifier
+PRODUCT_BUNDLE_IDENTIFIER = com.example.petitpal
+
+// The copyright displayed in application information
+PRODUCT_COPYRIGHT = Copyright © 2025 com.example. All rights reserved.
diff --git a/petitpal/macos/Runner/Configs/Debug.xcconfig b/petitpal/macos/Runner/Configs/Debug.xcconfig
index 36b0fd9..b398823 100644
--- a/petitpal/macos/Runner/Configs/Debug.xcconfig
+++ b/petitpal/macos/Runner/Configs/Debug.xcconfig
@@ -1,2 +1,2 @@
-#include "../../Flutter/Flutter-Debug.xcconfig"
-#include "Warnings.xcconfig"
+#include "../../Flutter/Flutter-Debug.xcconfig"
+#include "Warnings.xcconfig"
diff --git a/petitpal/macos/Runner/Configs/Release.xcconfig b/petitpal/macos/Runner/Configs/Release.xcconfig
index dff4f49..d93e5dc 100644
--- a/petitpal/macos/Runner/Configs/Release.xcconfig
+++ b/petitpal/macos/Runner/Configs/Release.xcconfig
@@ -1,2 +1,2 @@
-#include "../../Flutter/Flutter-Release.xcconfig"
-#include "Warnings.xcconfig"
+#include "../../Flutter/Flutter-Release.xcconfig"
+#include "Warnings.xcconfig"
diff --git a/petitpal/macos/Runner/Configs/Warnings.xcconfig b/petitpal/macos/Runner/Configs/Warnings.xcconfig
index 42bcbf4..fb4d7d3 100644
--- a/petitpal/macos/Runner/Configs/Warnings.xcconfig
+++ b/petitpal/macos/Runner/Configs/Warnings.xcconfig
@@ -1,13 +1,13 @@
-WARNING_CFLAGS = -Wall -Wconditional-uninitialized -Wnullable-to-nonnull-conversion -Wmissing-method-return-type -Woverlength-strings
-GCC_WARN_UNDECLARED_SELECTOR = YES
-CLANG_UNDEFINED_BEHAVIOR_SANITIZER_NULLABILITY = YES
-CLANG_WARN_UNGUARDED_AVAILABILITY = YES_AGGRESSIVE
-CLANG_WARN__DUPLICATE_METHOD_MATCH = YES
-CLANG_WARN_PRAGMA_PACK = YES
-CLANG_WARN_STRICT_PROTOTYPES = YES
-CLANG_WARN_COMMA = YES
-GCC_WARN_STRICT_SELECTOR_MATCH = YES
-CLANG_WARN_OBJC_REPEATED_USE_OF_WEAK = YES
-CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES
-GCC_WARN_SHADOW = YES
-CLANG_WARN_UNREACHABLE_CODE = YES
+WARNING_CFLAGS = -Wall -Wconditional-uninitialized -Wnullable-to-nonnull-conversion -Wmissing-method-return-type -Woverlength-strings
+GCC_WARN_UNDECLARED_SELECTOR = YES
+CLANG_UNDEFINED_BEHAVIOR_SANITIZER_NULLABILITY = YES
+CLANG_WARN_UNGUARDED_AVAILABILITY = YES_AGGRESSIVE
+CLANG_WARN__DUPLICATE_METHOD_MATCH = YES
+CLANG_WARN_PRAGMA_PACK = YES
+CLANG_WARN_STRICT_PROTOTYPES = YES
+CLANG_WARN_COMMA = YES
+GCC_WARN_STRICT_SELECTOR_MATCH = YES
+CLANG_WARN_OBJC_REPEATED_USE_OF_WEAK = YES
+CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES
+GCC_WARN_SHADOW = YES
+CLANG_WARN_UNREACHABLE_CODE = YES
diff --git a/petitpal/macos/Runner/DebugProfile.entitlements b/petitpal/macos/Runner/DebugProfile.entitlements
index dddb8a3..51d0967 100644
--- a/petitpal/macos/Runner/DebugProfile.entitlements
+++ b/petitpal/macos/Runner/DebugProfile.entitlements
@@ -1,12 +1,12 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
-<plist version="1.0">
-<dict>
-	<key>com.apple.security.app-sandbox</key>
-	<true/>
-	<key>com.apple.security.cs.allow-jit</key>
-	<true/>
-	<key>com.apple.security.network.server</key>
-	<true/>
-</dict>
-</plist>
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
+<plist version="1.0">
+<dict>
+	<key>com.apple.security.app-sandbox</key>
+	<true/>
+	<key>com.apple.security.cs.allow-jit</key>
+	<true/>
+	<key>com.apple.security.network.server</key>
+	<true/>
+</dict>
+</plist>
diff --git a/petitpal/macos/Runner/Info.plist b/petitpal/macos/Runner/Info.plist
index 4789daa..3733c1a 100644
--- a/petitpal/macos/Runner/Info.plist
+++ b/petitpal/macos/Runner/Info.plist
@@ -1,32 +1,32 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
-<plist version="1.0">
-<dict>
-	<key>CFBundleDevelopmentRegion</key>
-	<string>$(DEVELOPMENT_LANGUAGE)</string>
-	<key>CFBundleExecutable</key>
-	<string>$(EXECUTABLE_NAME)</string>
-	<key>CFBundleIconFile</key>
-	<string></string>
-	<key>CFBundleIdentifier</key>
-	<string>$(PRODUCT_BUNDLE_IDENTIFIER)</string>
-	<key>CFBundleInfoDictionaryVersion</key>
-	<string>6.0</string>
-	<key>CFBundleName</key>
-	<string>$(PRODUCT_NAME)</string>
-	<key>CFBundlePackageType</key>
-	<string>APPL</string>
-	<key>CFBundleShortVersionString</key>
-	<string>$(FLUTTER_BUILD_NAME)</string>
-	<key>CFBundleVersion</key>
-	<string>$(FLUTTER_BUILD_NUMBER)</string>
-	<key>LSMinimumSystemVersion</key>
-	<string>$(MACOSX_DEPLOYMENT_TARGET)</string>
-	<key>NSHumanReadableCopyright</key>
-	<string>$(PRODUCT_COPYRIGHT)</string>
-	<key>NSMainNibFile</key>
-	<string>MainMenu</string>
-	<key>NSPrincipalClass</key>
-	<string>NSApplication</string>
-</dict>
-</plist>
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
+<plist version="1.0">
+<dict>
+	<key>CFBundleDevelopmentRegion</key>
+	<string>$(DEVELOPMENT_LANGUAGE)</string>
+	<key>CFBundleExecutable</key>
+	<string>$(EXECUTABLE_NAME)</string>
+	<key>CFBundleIconFile</key>
+	<string></string>
+	<key>CFBundleIdentifier</key>
+	<string>$(PRODUCT_BUNDLE_IDENTIFIER)</string>
+	<key>CFBundleInfoDictionaryVersion</key>
+	<string>6.0</string>
+	<key>CFBundleName</key>
+	<string>$(PRODUCT_NAME)</string>
+	<key>CFBundlePackageType</key>
+	<string>APPL</string>
+	<key>CFBundleShortVersionString</key>
+	<string>$(FLUTTER_BUILD_NAME)</string>
+	<key>CFBundleVersion</key>
+	<string>$(FLUTTER_BUILD_NUMBER)</string>
+	<key>LSMinimumSystemVersion</key>
+	<string>$(MACOSX_DEPLOYMENT_TARGET)</string>
+	<key>NSHumanReadableCopyright</key>
+	<string>$(PRODUCT_COPYRIGHT)</string>
+	<key>NSMainNibFile</key>
+	<string>MainMenu</string>
+	<key>NSPrincipalClass</key>
+	<string>NSApplication</string>
+</dict>
+</plist>
diff --git a/petitpal/macos/Runner/MainFlutterWindow.swift b/petitpal/macos/Runner/MainFlutterWindow.swift
index 3cc05eb..ab30cba 100644
--- a/petitpal/macos/Runner/MainFlutterWindow.swift
+++ b/petitpal/macos/Runner/MainFlutterWindow.swift
@@ -1,15 +1,15 @@
-import Cocoa
-import FlutterMacOS
-
-class MainFlutterWindow: NSWindow {
-  override func awakeFromNib() {
-    let flutterViewController = FlutterViewController()
-    let windowFrame = self.frame
-    self.contentViewController = flutterViewController
-    self.setFrame(windowFrame, display: true)
-
-    RegisterGeneratedPlugins(registry: flutterViewController)
-
-    super.awakeFromNib()
-  }
-}
+import Cocoa
+import FlutterMacOS
+
+class MainFlutterWindow: NSWindow {
+  override func awakeFromNib() {
+    let flutterViewController = FlutterViewController()
+    let windowFrame = self.frame
+    self.contentViewController = flutterViewController
+    self.setFrame(windowFrame, display: true)
+
+    RegisterGeneratedPlugins(registry: flutterViewController)
+
+    super.awakeFromNib()
+  }
+}
diff --git a/petitpal/macos/Runner/Release.entitlements b/petitpal/macos/Runner/Release.entitlements
index 852fa1a..04336df 100644
--- a/petitpal/macos/Runner/Release.entitlements
+++ b/petitpal/macos/Runner/Release.entitlements
@@ -1,8 +1,8 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
-<plist version="1.0">
-<dict>
-	<key>com.apple.security.app-sandbox</key>
-	<true/>
-</dict>
-</plist>
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
+<plist version="1.0">
+<dict>
+	<key>com.apple.security.app-sandbox</key>
+	<true/>
+</dict>
+</plist>
diff --git a/petitpal/macos/RunnerTests/RunnerTests.swift b/petitpal/macos/RunnerTests/RunnerTests.swift
index 61f3bd1..21fe1ab 100644
--- a/petitpal/macos/RunnerTests/RunnerTests.swift
+++ b/petitpal/macos/RunnerTests/RunnerTests.swift
@@ -1,12 +1,12 @@
-import Cocoa
-import FlutterMacOS
-import XCTest
-
-class RunnerTests: XCTestCase {
-
-  func testExample() {
-    // If you add code to the Runner application, consider adding tests here.
-    // See https://developer.apple.com/documentation/xctest for more information about using XCTest.
-  }
-
-}
+import Cocoa
+import FlutterMacOS
+import XCTest
+
+class RunnerTests: XCTestCase {
+
+  func testExample() {
+    // If you add code to the Runner application, consider adding tests here.
+    // See https://developer.apple.com/documentation/xctest for more information about using XCTest.
+  }
+
+}
diff --git a/petitpal/pubspec.yaml b/petitpal/pubspec.yaml
index a6a35b3..d9b6e38 100644
--- a/petitpal/pubspec.yaml
+++ b/petitpal/pubspec.yaml
@@ -1,59 +1 @@
-name: petitpal
-description: Voice-first assistant for adults 65+
-publish_to: 'none'
-version: 1.0.0+1
-
-environment:
-  sdk: '>=3.0.0 <4.0.0'
-  flutter: ">=3.10.0"
-
-dependencies:
-  flutter:
-    sdk: flutter
-  
-  # State Management
-  flutter_riverpod: ^2.5.1
-  
-  # Firebase (Analytics & Crashlytics) - VERIFIED COMPATIBLE VERSIONS
-  firebase_core: ^3.15.2
-  firebase_analytics: ^11.3.0  
-  firebase_crashlytics: ^4.3.6
-  
-  # Voice & Speech
-  speech_to_text: ^7.3.0
-  flutter_tts: ^4.1.0
-  permission_handler: ^12.0.1
-  
-  # Storage & Preferences
-  shared_preferences: ^2.3.3
-  
-  # HTTP & API
-  http: ^1.2.2
-  
-  # Deep Links & Sharing
-  app_links: ^6.4.1
-  share_plus: ^7.2.2
-  
-  # Device Information
-  device_info_plus: ^10.1.0
-  
-  # UI & Animations
-  flutter_animate: ^4.5.2
-  
-  # Utilities
-  uuid: ^4.5.1
-  intl: ^0.20.2
-
-dev_dependencies:
-  flutter_test:
-    sdk: flutter
-  flutter_lints: ^6.0.0
-
-flutter:
-  uses-material-design: true
-  
-  # Assets for JSON-driven themes and configuration
-  assets:
-    - assets/themes/
-    - assets/config/
-    - assets/audio/
\ No newline at end of file
+'"$@"'
diff --git a/petitpal/web/index.html b/petitpal/web/index.html
index bf31392..8c82547 100644
--- a/petitpal/web/index.html
+++ b/petitpal/web/index.html
@@ -1,38 +1,38 @@
-<!DOCTYPE html>
-<html>
-<head>
-  <!--
-    If you are serving your web app in a path other than the root, change the
-    href value below to reflect the base path you are serving from.
-
-    The path provided below has to start and end with a slash "/" in order for
-    it to work correctly.
-
-    For more details:
-    * https://developer.mozilla.org/en-US/docs/Web/HTML/Element/base
-
-    This is a placeholder for base href that will be replaced by the value of
-    the `--base-href` argument provided to `flutter build`.
-  -->
-  <base href="$FLUTTER_BASE_HREF">
-
-  <meta charset="UTF-8">
-  <meta content="IE=Edge" http-equiv="X-UA-Compatible">
-  <meta name="description" content="A new Flutter project.">
-
-  <!-- iOS meta tags & icons -->
-  <meta name="mobile-web-app-capable" content="yes">
-  <meta name="apple-mobile-web-app-status-bar-style" content="black">
-  <meta name="apple-mobile-web-app-title" content="petitpal">
-  <link rel="apple-touch-icon" href="icons/Icon-192.png">
-
-  <!-- Favicon -->
-  <link rel="icon" type="image/png" href="favicon.png"/>
-
-  <title>petitpal</title>
-  <link rel="manifest" href="manifest.json">
-</head>
-<body>
-  <script src="flutter_bootstrap.js" async></script>
-</body>
-</html>
+<!DOCTYPE html>
+<html>
+<head>
+  <!--
+    If you are serving your web app in a path other than the root, change the
+    href value below to reflect the base path you are serving from.
+
+    The path provided below has to start and end with a slash "/" in order for
+    it to work correctly.
+
+    For more details:
+    * https://developer.mozilla.org/en-US/docs/Web/HTML/Element/base
+
+    This is a placeholder for base href that will be replaced by the value of
+    the `--base-href` argument provided to `flutter build`.
+  -->
+  <base href="$FLUTTER_BASE_HREF">
+
+  <meta charset="UTF-8">
+  <meta content="IE=Edge" http-equiv="X-UA-Compatible">
+  <meta name="description" content="A new Flutter project.">
+
+  <!-- iOS meta tags & icons -->
+  <meta name="mobile-web-app-capable" content="yes">
+  <meta name="apple-mobile-web-app-status-bar-style" content="black">
+  <meta name="apple-mobile-web-app-title" content="petitpal">
+  <link rel="apple-touch-icon" href="icons/Icon-192.png">
+
+  <!-- Favicon -->
+  <link rel="icon" type="image/png" href="favicon.png"/>
+
+  <title>petitpal</title>
+  <link rel="manifest" href="manifest.json">
+</head>
+<body>
+  <script src="flutter_bootstrap.js" async></script>
+</body>
+</html>
diff --git a/petitpal/web/manifest.json b/petitpal/web/manifest.json
index 91f3682..3d01127 100644
--- a/petitpal/web/manifest.json
+++ b/petitpal/web/manifest.json
@@ -1,35 +1,35 @@
-{
-    "name": "petitpal",
-    "short_name": "petitpal",
-    "start_url": ".",
-    "display": "standalone",
-    "background_color": "#0175C2",
-    "theme_color": "#0175C2",
-    "description": "A new Flutter project.",
-    "orientation": "portrait-primary",
-    "prefer_related_applications": false,
-    "icons": [
-        {
-            "src": "icons/Icon-192.png",
-            "sizes": "192x192",
-            "type": "image/png"
-        },
-        {
-            "src": "icons/Icon-512.png",
-            "sizes": "512x512",
-            "type": "image/png"
-        },
-        {
-            "src": "icons/Icon-maskable-192.png",
-            "sizes": "192x192",
-            "type": "image/png",
-            "purpose": "maskable"
-        },
-        {
-            "src": "icons/Icon-maskable-512.png",
-            "sizes": "512x512",
-            "type": "image/png",
-            "purpose": "maskable"
-        }
-    ]
-}
+{
+    "name": "petitpal",
+    "short_name": "petitpal",
+    "start_url": ".",
+    "display": "standalone",
+    "background_color": "#0175C2",
+    "theme_color": "#0175C2",
+    "description": "A new Flutter project.",
+    "orientation": "portrait-primary",
+    "prefer_related_applications": false,
+    "icons": [
+        {
+            "src": "icons/Icon-192.png",
+            "sizes": "192x192",
+            "type": "image/png"
+        },
+        {
+            "src": "icons/Icon-512.png",
+            "sizes": "512x512",
+            "type": "image/png"
+        },
+        {
+            "src": "icons/Icon-maskable-192.png",
+            "sizes": "192x192",
+            "type": "image/png",
+            "purpose": "maskable"
+        },
+        {
+            "src": "icons/Icon-maskable-512.png",
+            "sizes": "512x512",
+            "type": "image/png",
+            "purpose": "maskable"
+        }
+    ]
+}
diff --git a/petitpal/windows/.gitignore b/petitpal/windows/.gitignore
index d492d0d..ec4098a 100644
--- a/petitpal/windows/.gitignore
+++ b/petitpal/windows/.gitignore
@@ -1,17 +1,17 @@
-flutter/ephemeral/
-
-# Visual Studio user-specific files.
-*.suo
-*.user
-*.userosscache
-*.sln.docstates
-
-# Visual Studio build-related files.
-x64/
-x86/
-
-# Visual Studio cache files
-# files ending in .cache can be ignored
-*.[Cc]ache
-# but keep track of directories ending in .cache
-!*.[Cc]ache/
+flutter/ephemeral/
+
+# Visual Studio user-specific files.
+*.suo
+*.user
+*.userosscache
+*.sln.docstates
+
+# Visual Studio build-related files.
+x64/
+x86/
+
+# Visual Studio cache files
+# files ending in .cache can be ignored
+*.[Cc]ache
+# but keep track of directories ending in .cache
+!*.[Cc]ache/
diff --git a/petitpal/windows/CMakeLists.txt b/petitpal/windows/CMakeLists.txt
index 002c328..b6e21e7 100644
--- a/petitpal/windows/CMakeLists.txt
+++ b/petitpal/windows/CMakeLists.txt
@@ -1,108 +1,108 @@
-# Project-level configuration.
-cmake_minimum_required(VERSION 3.14)
-project(petitpal LANGUAGES CXX)
-
-# The name of the executable created for the application. Change this to change
-# the on-disk name of your application.
-set(BINARY_NAME "petitpal")
-
-# Explicitly opt in to modern CMake behaviors to avoid warnings with recent
-# versions of CMake.
-cmake_policy(VERSION 3.14...3.25)
-
-# Define build configuration option.
-get_property(IS_MULTICONFIG GLOBAL PROPERTY GENERATOR_IS_MULTI_CONFIG)
-if(IS_MULTICONFIG)
-  set(CMAKE_CONFIGURATION_TYPES "Debug;Profile;Release"
-    CACHE STRING "" FORCE)
-else()
-  if(NOT CMAKE_BUILD_TYPE AND NOT CMAKE_CONFIGURATION_TYPES)
-    set(CMAKE_BUILD_TYPE "Debug" CACHE
-      STRING "Flutter build mode" FORCE)
-    set_property(CACHE CMAKE_BUILD_TYPE PROPERTY STRINGS
-      "Debug" "Profile" "Release")
-  endif()
-endif()
-# Define settings for the Profile build mode.
-set(CMAKE_EXE_LINKER_FLAGS_PROFILE "${CMAKE_EXE_LINKER_FLAGS_RELEASE}")
-set(CMAKE_SHARED_LINKER_FLAGS_PROFILE "${CMAKE_SHARED_LINKER_FLAGS_RELEASE}")
-set(CMAKE_C_FLAGS_PROFILE "${CMAKE_C_FLAGS_RELEASE}")
-set(CMAKE_CXX_FLAGS_PROFILE "${CMAKE_CXX_FLAGS_RELEASE}")
-
-# Use Unicode for all projects.
-add_definitions(-DUNICODE -D_UNICODE)
-
-# Compilation settings that should be applied to most targets.
-#
-# Be cautious about adding new options here, as plugins use this function by
-# default. In most cases, you should add new options to specific targets instead
-# of modifying this function.
-function(APPLY_STANDARD_SETTINGS TARGET)
-  target_compile_features(${TARGET} PUBLIC cxx_std_17)
-  target_compile_options(${TARGET} PRIVATE /W4 /WX /wd"4100")
-  target_compile_options(${TARGET} PRIVATE /EHsc)
-  target_compile_definitions(${TARGET} PRIVATE "_HAS_EXCEPTIONS=0")
-  target_compile_definitions(${TARGET} PRIVATE "$<$<CONFIG:Debug>:_DEBUG>")
-endfunction()
-
-# Flutter library and tool build rules.
-set(FLUTTER_MANAGED_DIR "${CMAKE_CURRENT_SOURCE_DIR}/flutter")
-add_subdirectory(${FLUTTER_MANAGED_DIR})
-
-# Application build; see runner/CMakeLists.txt.
-add_subdirectory("runner")
-
-
-# Generated plugin build rules, which manage building the plugins and adding
-# them to the application.
-include(flutter/generated_plugins.cmake)
-
-
-# === Installation ===
-# Support files are copied into place next to the executable, so that it can
-# run in place. This is done instead of making a separate bundle (as on Linux)
-# so that building and running from within Visual Studio will work.
-set(BUILD_BUNDLE_DIR "$<TARGET_FILE_DIR:${BINARY_NAME}>")
-# Make the "install" step default, as it's required to run.
-set(CMAKE_VS_INCLUDE_INSTALL_TO_DEFAULT_BUILD 1)
-if(CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT)
-  set(CMAKE_INSTALL_PREFIX "${BUILD_BUNDLE_DIR}" CACHE PATH "..." FORCE)
-endif()
-
-set(INSTALL_BUNDLE_DATA_DIR "${CMAKE_INSTALL_PREFIX}/data")
-set(INSTALL_BUNDLE_LIB_DIR "${CMAKE_INSTALL_PREFIX}")
-
-install(TARGETS ${BINARY_NAME} RUNTIME DESTINATION "${CMAKE_INSTALL_PREFIX}"
-  COMPONENT Runtime)
-
-install(FILES "${FLUTTER_ICU_DATA_FILE}" DESTINATION "${INSTALL_BUNDLE_DATA_DIR}"
-  COMPONENT Runtime)
-
-install(FILES "${FLUTTER_LIBRARY}" DESTINATION "${INSTALL_BUNDLE_LIB_DIR}"
-  COMPONENT Runtime)
-
-if(PLUGIN_BUNDLED_LIBRARIES)
-  install(FILES "${PLUGIN_BUNDLED_LIBRARIES}"
-    DESTINATION "${INSTALL_BUNDLE_LIB_DIR}"
-    COMPONENT Runtime)
-endif()
-
-# Copy the native assets provided by the build.dart from all packages.
-set(NATIVE_ASSETS_DIR "${PROJECT_BUILD_DIR}native_assets/windows/")
-install(DIRECTORY "${NATIVE_ASSETS_DIR}"
-   DESTINATION "${INSTALL_BUNDLE_LIB_DIR}"
-   COMPONENT Runtime)
-
-# Fully re-copy the assets directory on each build to avoid having stale files
-# from a previous install.
-set(FLUTTER_ASSET_DIR_NAME "flutter_assets")
-install(CODE "
-  file(REMOVE_RECURSE \"${INSTALL_BUNDLE_DATA_DIR}/${FLUTTER_ASSET_DIR_NAME}\")
-  " COMPONENT Runtime)
-install(DIRECTORY "${PROJECT_BUILD_DIR}/${FLUTTER_ASSET_DIR_NAME}"
-  DESTINATION "${INSTALL_BUNDLE_DATA_DIR}" COMPONENT Runtime)
-
-# Install the AOT library on non-Debug builds only.
-install(FILES "${AOT_LIBRARY}" DESTINATION "${INSTALL_BUNDLE_DATA_DIR}"
-  CONFIGURATIONS Profile;Release
-  COMPONENT Runtime)
+# Project-level configuration.
+cmake_minimum_required(VERSION 3.14)
+project(petitpal LANGUAGES CXX)
+
+# The name of the executable created for the application. Change this to change
+# the on-disk name of your application.
+set(BINARY_NAME "petitpal")
+
+# Explicitly opt in to modern CMake behaviors to avoid warnings with recent
+# versions of CMake.
+cmake_policy(VERSION 3.14...3.25)
+
+# Define build configuration option.
+get_property(IS_MULTICONFIG GLOBAL PROPERTY GENERATOR_IS_MULTI_CONFIG)
+if(IS_MULTICONFIG)
+  set(CMAKE_CONFIGURATION_TYPES "Debug;Profile;Release"
+    CACHE STRING "" FORCE)
+else()
+  if(NOT CMAKE_BUILD_TYPE AND NOT CMAKE_CONFIGURATION_TYPES)
+    set(CMAKE_BUILD_TYPE "Debug" CACHE
+      STRING "Flutter build mode" FORCE)
+    set_property(CACHE CMAKE_BUILD_TYPE PROPERTY STRINGS
+      "Debug" "Profile" "Release")
+  endif()
+endif()
+# Define settings for the Profile build mode.
+set(CMAKE_EXE_LINKER_FLAGS_PROFILE "${CMAKE_EXE_LINKER_FLAGS_RELEASE}")
+set(CMAKE_SHARED_LINKER_FLAGS_PROFILE "${CMAKE_SHARED_LINKER_FLAGS_RELEASE}")
+set(CMAKE_C_FLAGS_PROFILE "${CMAKE_C_FLAGS_RELEASE}")
+set(CMAKE_CXX_FLAGS_PROFILE "${CMAKE_CXX_FLAGS_RELEASE}")
+
+# Use Unicode for all projects.
+add_definitions(-DUNICODE -D_UNICODE)
+
+# Compilation settings that should be applied to most targets.
+#
+# Be cautious about adding new options here, as plugins use this function by
+# default. In most cases, you should add new options to specific targets instead
+# of modifying this function.
+function(APPLY_STANDARD_SETTINGS TARGET)
+  target_compile_features(${TARGET} PUBLIC cxx_std_17)
+  target_compile_options(${TARGET} PRIVATE /W4 /WX /wd"4100")
+  target_compile_options(${TARGET} PRIVATE /EHsc)
+  target_compile_definitions(${TARGET} PRIVATE "_HAS_EXCEPTIONS=0")
+  target_compile_definitions(${TARGET} PRIVATE "$<$<CONFIG:Debug>:_DEBUG>")
+endfunction()
+
+# Flutter library and tool build rules.
+set(FLUTTER_MANAGED_DIR "${CMAKE_CURRENT_SOURCE_DIR}/flutter")
+add_subdirectory(${FLUTTER_MANAGED_DIR})
+
+# Application build; see runner/CMakeLists.txt.
+add_subdirectory("runner")
+
+
+# Generated plugin build rules, which manage building the plugins and adding
+# them to the application.
+include(flutter/generated_plugins.cmake)
+
+
+# === Installation ===
+# Support files are copied into place next to the executable, so that it can
+# run in place. This is done instead of making a separate bundle (as on Linux)
+# so that building and running from within Visual Studio will work.
+set(BUILD_BUNDLE_DIR "$<TARGET_FILE_DIR:${BINARY_NAME}>")
+# Make the "install" step default, as it's required to run.
+set(CMAKE_VS_INCLUDE_INSTALL_TO_DEFAULT_BUILD 1)
+if(CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT)
+  set(CMAKE_INSTALL_PREFIX "${BUILD_BUNDLE_DIR}" CACHE PATH "..." FORCE)
+endif()
+
+set(INSTALL_BUNDLE_DATA_DIR "${CMAKE_INSTALL_PREFIX}/data")
+set(INSTALL_BUNDLE_LIB_DIR "${CMAKE_INSTALL_PREFIX}")
+
+install(TARGETS ${BINARY_NAME} RUNTIME DESTINATION "${CMAKE_INSTALL_PREFIX}"
+  COMPONENT Runtime)
+
+install(FILES "${FLUTTER_ICU_DATA_FILE}" DESTINATION "${INSTALL_BUNDLE_DATA_DIR}"
+  COMPONENT Runtime)
+
+install(FILES "${FLUTTER_LIBRARY}" DESTINATION "${INSTALL_BUNDLE_LIB_DIR}"
+  COMPONENT Runtime)
+
+if(PLUGIN_BUNDLED_LIBRARIES)
+  install(FILES "${PLUGIN_BUNDLED_LIBRARIES}"
+    DESTINATION "${INSTALL_BUNDLE_LIB_DIR}"
+    COMPONENT Runtime)
+endif()
+
+# Copy the native assets provided by the build.dart from all packages.
+set(NATIVE_ASSETS_DIR "${PROJECT_BUILD_DIR}native_assets/windows/")
+install(DIRECTORY "${NATIVE_ASSETS_DIR}"
+   DESTINATION "${INSTALL_BUNDLE_LIB_DIR}"
+   COMPONENT Runtime)
+
+# Fully re-copy the assets directory on each build to avoid having stale files
+# from a previous install.
+set(FLUTTER_ASSET_DIR_NAME "flutter_assets")
+install(CODE "
+  file(REMOVE_RECURSE \"${INSTALL_BUNDLE_DATA_DIR}/${FLUTTER_ASSET_DIR_NAME}\")
+  " COMPONENT Runtime)
+install(DIRECTORY "${PROJECT_BUILD_DIR}/${FLUTTER_ASSET_DIR_NAME}"
+  DESTINATION "${INSTALL_BUNDLE_DATA_DIR}" COMPONENT Runtime)
+
+# Install the AOT library on non-Debug builds only.
+install(FILES "${AOT_LIBRARY}" DESTINATION "${INSTALL_BUNDLE_DATA_DIR}"
+  CONFIGURATIONS Profile;Release
+  COMPONENT Runtime)
diff --git a/petitpal/windows/flutter/CMakeLists.txt b/petitpal/windows/flutter/CMakeLists.txt
index 903f489..efb62eb 100644
--- a/petitpal/windows/flutter/CMakeLists.txt
+++ b/petitpal/windows/flutter/CMakeLists.txt
@@ -1,109 +1,109 @@
-# This file controls Flutter-level build steps. It should not be edited.
-cmake_minimum_required(VERSION 3.14)
-
-set(EPHEMERAL_DIR "${CMAKE_CURRENT_SOURCE_DIR}/ephemeral")
-
-# Configuration provided via flutter tool.
-include(${EPHEMERAL_DIR}/generated_config.cmake)
-
-# TODO: Move the rest of this into files in ephemeral. See
-# https://github.com/flutter/flutter/issues/57146.
-set(WRAPPER_ROOT "${EPHEMERAL_DIR}/cpp_client_wrapper")
-
-# Set fallback configurations for older versions of the flutter tool.
-if (NOT DEFINED FLUTTER_TARGET_PLATFORM)
-  set(FLUTTER_TARGET_PLATFORM "windows-x64")
-endif()
-
-# === Flutter Library ===
-set(FLUTTER_LIBRARY "${EPHEMERAL_DIR}/flutter_windows.dll")
-
-# Published to parent scope for install step.
-set(FLUTTER_LIBRARY ${FLUTTER_LIBRARY} PARENT_SCOPE)
-set(FLUTTER_ICU_DATA_FILE "${EPHEMERAL_DIR}/icudtl.dat" PARENT_SCOPE)
-set(PROJECT_BUILD_DIR "${PROJECT_DIR}/build/" PARENT_SCOPE)
-set(AOT_LIBRARY "${PROJECT_DIR}/build/windows/app.so" PARENT_SCOPE)
-
-list(APPEND FLUTTER_LIBRARY_HEADERS
-  "flutter_export.h"
-  "flutter_windows.h"
-  "flutter_messenger.h"
-  "flutter_plugin_registrar.h"
-  "flutter_texture_registrar.h"
-)
-list(TRANSFORM FLUTTER_LIBRARY_HEADERS PREPEND "${EPHEMERAL_DIR}/")
-add_library(flutter INTERFACE)
-target_include_directories(flutter INTERFACE
-  "${EPHEMERAL_DIR}"
-)
-target_link_libraries(flutter INTERFACE "${FLUTTER_LIBRARY}.lib")
-add_dependencies(flutter flutter_assemble)
-
-# === Wrapper ===
-list(APPEND CPP_WRAPPER_SOURCES_CORE
-  "core_implementations.cc"
-  "standard_codec.cc"
-)
-list(TRANSFORM CPP_WRAPPER_SOURCES_CORE PREPEND "${WRAPPER_ROOT}/")
-list(APPEND CPP_WRAPPER_SOURCES_PLUGIN
-  "plugin_registrar.cc"
-)
-list(TRANSFORM CPP_WRAPPER_SOURCES_PLUGIN PREPEND "${WRAPPER_ROOT}/")
-list(APPEND CPP_WRAPPER_SOURCES_APP
-  "flutter_engine.cc"
-  "flutter_view_controller.cc"
-)
-list(TRANSFORM CPP_WRAPPER_SOURCES_APP PREPEND "${WRAPPER_ROOT}/")
-
-# Wrapper sources needed for a plugin.
-add_library(flutter_wrapper_plugin STATIC
-  ${CPP_WRAPPER_SOURCES_CORE}
-  ${CPP_WRAPPER_SOURCES_PLUGIN}
-)
-apply_standard_settings(flutter_wrapper_plugin)
-set_target_properties(flutter_wrapper_plugin PROPERTIES
-  POSITION_INDEPENDENT_CODE ON)
-set_target_properties(flutter_wrapper_plugin PROPERTIES
-  CXX_VISIBILITY_PRESET hidden)
-target_link_libraries(flutter_wrapper_plugin PUBLIC flutter)
-target_include_directories(flutter_wrapper_plugin PUBLIC
-  "${WRAPPER_ROOT}/include"
-)
-add_dependencies(flutter_wrapper_plugin flutter_assemble)
-
-# Wrapper sources needed for the runner.
-add_library(flutter_wrapper_app STATIC
-  ${CPP_WRAPPER_SOURCES_CORE}
-  ${CPP_WRAPPER_SOURCES_APP}
-)
-apply_standard_settings(flutter_wrapper_app)
-target_link_libraries(flutter_wrapper_app PUBLIC flutter)
-target_include_directories(flutter_wrapper_app PUBLIC
-  "${WRAPPER_ROOT}/include"
-)
-add_dependencies(flutter_wrapper_app flutter_assemble)
-
-# === Flutter tool backend ===
-# _phony_ is a non-existent file to force this command to run every time,
-# since currently there's no way to get a full input/output list from the
-# flutter tool.
-set(PHONY_OUTPUT "${CMAKE_CURRENT_BINARY_DIR}/_phony_")
-set_source_files_properties("${PHONY_OUTPUT}" PROPERTIES SYMBOLIC TRUE)
-add_custom_command(
-  OUTPUT ${FLUTTER_LIBRARY} ${FLUTTER_LIBRARY_HEADERS}
-    ${CPP_WRAPPER_SOURCES_CORE} ${CPP_WRAPPER_SOURCES_PLUGIN}
-    ${CPP_WRAPPER_SOURCES_APP}
-    ${PHONY_OUTPUT}
-  COMMAND ${CMAKE_COMMAND} -E env
-    ${FLUTTER_TOOL_ENVIRONMENT}
-    "${FLUTTER_ROOT}/packages/flutter_tools/bin/tool_backend.bat"
-      ${FLUTTER_TARGET_PLATFORM} $<CONFIG>
-  VERBATIM
-)
-add_custom_target(flutter_assemble DEPENDS
-  "${FLUTTER_LIBRARY}"
-  ${FLUTTER_LIBRARY_HEADERS}
-  ${CPP_WRAPPER_SOURCES_CORE}
-  ${CPP_WRAPPER_SOURCES_PLUGIN}
-  ${CPP_WRAPPER_SOURCES_APP}
-)
+# This file controls Flutter-level build steps. It should not be edited.
+cmake_minimum_required(VERSION 3.14)
+
+set(EPHEMERAL_DIR "${CMAKE_CURRENT_SOURCE_DIR}/ephemeral")
+
+# Configuration provided via flutter tool.
+include(${EPHEMERAL_DIR}/generated_config.cmake)
+
+# TODO: Move the rest of this into files in ephemeral. See
+# https://github.com/flutter/flutter/issues/57146.
+set(WRAPPER_ROOT "${EPHEMERAL_DIR}/cpp_client_wrapper")
+
+# Set fallback configurations for older versions of the flutter tool.
+if (NOT DEFINED FLUTTER_TARGET_PLATFORM)
+  set(FLUTTER_TARGET_PLATFORM "windows-x64")
+endif()
+
+# === Flutter Library ===
+set(FLUTTER_LIBRARY "${EPHEMERAL_DIR}/flutter_windows.dll")
+
+# Published to parent scope for install step.
+set(FLUTTER_LIBRARY ${FLUTTER_LIBRARY} PARENT_SCOPE)
+set(FLUTTER_ICU_DATA_FILE "${EPHEMERAL_DIR}/icudtl.dat" PARENT_SCOPE)
+set(PROJECT_BUILD_DIR "${PROJECT_DIR}/build/" PARENT_SCOPE)
+set(AOT_LIBRARY "${PROJECT_DIR}/build/windows/app.so" PARENT_SCOPE)
+
+list(APPEND FLUTTER_LIBRARY_HEADERS
+  "flutter_export.h"
+  "flutter_windows.h"
+  "flutter_messenger.h"
+  "flutter_plugin_registrar.h"
+  "flutter_texture_registrar.h"
+)
+list(TRANSFORM FLUTTER_LIBRARY_HEADERS PREPEND "${EPHEMERAL_DIR}/")
+add_library(flutter INTERFACE)
+target_include_directories(flutter INTERFACE
+  "${EPHEMERAL_DIR}"
+)
+target_link_libraries(flutter INTERFACE "${FLUTTER_LIBRARY}.lib")
+add_dependencies(flutter flutter_assemble)
+
+# === Wrapper ===
+list(APPEND CPP_WRAPPER_SOURCES_CORE
+  "core_implementations.cc"
+  "standard_codec.cc"
+)
+list(TRANSFORM CPP_WRAPPER_SOURCES_CORE PREPEND "${WRAPPER_ROOT}/")
+list(APPEND CPP_WRAPPER_SOURCES_PLUGIN
+  "plugin_registrar.cc"
+)
+list(TRANSFORM CPP_WRAPPER_SOURCES_PLUGIN PREPEND "${WRAPPER_ROOT}/")
+list(APPEND CPP_WRAPPER_SOURCES_APP
+  "flutter_engine.cc"
+  "flutter_view_controller.cc"
+)
+list(TRANSFORM CPP_WRAPPER_SOURCES_APP PREPEND "${WRAPPER_ROOT}/")
+
+# Wrapper sources needed for a plugin.
+add_library(flutter_wrapper_plugin STATIC
+  ${CPP_WRAPPER_SOURCES_CORE}
+  ${CPP_WRAPPER_SOURCES_PLUGIN}
+)
+apply_standard_settings(flutter_wrapper_plugin)
+set_target_properties(flutter_wrapper_plugin PROPERTIES
+  POSITION_INDEPENDENT_CODE ON)
+set_target_properties(flutter_wrapper_plugin PROPERTIES
+  CXX_VISIBILITY_PRESET hidden)
+target_link_libraries(flutter_wrapper_plugin PUBLIC flutter)
+target_include_directories(flutter_wrapper_plugin PUBLIC
+  "${WRAPPER_ROOT}/include"
+)
+add_dependencies(flutter_wrapper_plugin flutter_assemble)
+
+# Wrapper sources needed for the runner.
+add_library(flutter_wrapper_app STATIC
+  ${CPP_WRAPPER_SOURCES_CORE}
+  ${CPP_WRAPPER_SOURCES_APP}
+)
+apply_standard_settings(flutter_wrapper_app)
+target_link_libraries(flutter_wrapper_app PUBLIC flutter)
+target_include_directories(flutter_wrapper_app PUBLIC
+  "${WRAPPER_ROOT}/include"
+)
+add_dependencies(flutter_wrapper_app flutter_assemble)
+
+# === Flutter tool backend ===
+# _phony_ is a non-existent file to force this command to run every time,
+# since currently there's no way to get a full input/output list from the
+# flutter tool.
+set(PHONY_OUTPUT "${CMAKE_CURRENT_BINARY_DIR}/_phony_")
+set_source_files_properties("${PHONY_OUTPUT}" PROPERTIES SYMBOLIC TRUE)
+add_custom_command(
+  OUTPUT ${FLUTTER_LIBRARY} ${FLUTTER_LIBRARY_HEADERS}
+    ${CPP_WRAPPER_SOURCES_CORE} ${CPP_WRAPPER_SOURCES_PLUGIN}
+    ${CPP_WRAPPER_SOURCES_APP}
+    ${PHONY_OUTPUT}
+  COMMAND ${CMAKE_COMMAND} -E env
+    ${FLUTTER_TOOL_ENVIRONMENT}
+    "${FLUTTER_ROOT}/packages/flutter_tools/bin/tool_backend.bat"
+      ${FLUTTER_TARGET_PLATFORM} $<CONFIG>
+  VERBATIM
+)
+add_custom_target(flutter_assemble DEPENDS
+  "${FLUTTER_LIBRARY}"
+  ${FLUTTER_LIBRARY_HEADERS}
+  ${CPP_WRAPPER_SOURCES_CORE}
+  ${CPP_WRAPPER_SOURCES_PLUGIN}
+  ${CPP_WRAPPER_SOURCES_APP}
+)
diff --git a/petitpal/windows/runner/CMakeLists.txt b/petitpal/windows/runner/CMakeLists.txt
index 394917c..2041a04 100644
--- a/petitpal/windows/runner/CMakeLists.txt
+++ b/petitpal/windows/runner/CMakeLists.txt
@@ -1,40 +1,40 @@
-cmake_minimum_required(VERSION 3.14)
-project(runner LANGUAGES CXX)
-
-# Define the application target. To change its name, change BINARY_NAME in the
-# top-level CMakeLists.txt, not the value here, or `flutter run` will no longer
-# work.
-#
-# Any new source files that you add to the application should be added here.
-add_executable(${BINARY_NAME} WIN32
-  "flutter_window.cpp"
-  "main.cpp"
-  "utils.cpp"
-  "win32_window.cpp"
-  "${FLUTTER_MANAGED_DIR}/generated_plugin_registrant.cc"
-  "Runner.rc"
-  "runner.exe.manifest"
-)
-
-# Apply the standard set of build settings. This can be removed for applications
-# that need different build settings.
-apply_standard_settings(${BINARY_NAME})
-
-# Add preprocessor definitions for the build version.
-target_compile_definitions(${BINARY_NAME} PRIVATE "FLUTTER_VERSION=\"${FLUTTER_VERSION}\"")
-target_compile_definitions(${BINARY_NAME} PRIVATE "FLUTTER_VERSION_MAJOR=${FLUTTER_VERSION_MAJOR}")
-target_compile_definitions(${BINARY_NAME} PRIVATE "FLUTTER_VERSION_MINOR=${FLUTTER_VERSION_MINOR}")
-target_compile_definitions(${BINARY_NAME} PRIVATE "FLUTTER_VERSION_PATCH=${FLUTTER_VERSION_PATCH}")
-target_compile_definitions(${BINARY_NAME} PRIVATE "FLUTTER_VERSION_BUILD=${FLUTTER_VERSION_BUILD}")
-
-# Disable Windows macros that collide with C++ standard library functions.
-target_compile_definitions(${BINARY_NAME} PRIVATE "NOMINMAX")
-
-# Add dependency libraries and include directories. Add any application-specific
-# dependencies here.
-target_link_libraries(${BINARY_NAME} PRIVATE flutter flutter_wrapper_app)
-target_link_libraries(${BINARY_NAME} PRIVATE "dwmapi.lib")
-target_include_directories(${BINARY_NAME} PRIVATE "${CMAKE_SOURCE_DIR}")
-
-# Run the Flutter tool portions of the build. This must not be removed.
-add_dependencies(${BINARY_NAME} flutter_assemble)
+cmake_minimum_required(VERSION 3.14)
+project(runner LANGUAGES CXX)
+
+# Define the application target. To change its name, change BINARY_NAME in the
+# top-level CMakeLists.txt, not the value here, or `flutter run` will no longer
+# work.
+#
+# Any new source files that you add to the application should be added here.
+add_executable(${BINARY_NAME} WIN32
+  "flutter_window.cpp"
+  "main.cpp"
+  "utils.cpp"
+  "win32_window.cpp"
+  "${FLUTTER_MANAGED_DIR}/generated_plugin_registrant.cc"
+  "Runner.rc"
+  "runner.exe.manifest"
+)
+
+# Apply the standard set of build settings. This can be removed for applications
+# that need different build settings.
+apply_standard_settings(${BINARY_NAME})
+
+# Add preprocessor definitions for the build version.
+target_compile_definitions(${BINARY_NAME} PRIVATE "FLUTTER_VERSION=\"${FLUTTER_VERSION}\"")
+target_compile_definitions(${BINARY_NAME} PRIVATE "FLUTTER_VERSION_MAJOR=${FLUTTER_VERSION_MAJOR}")
+target_compile_definitions(${BINARY_NAME} PRIVATE "FLUTTER_VERSION_MINOR=${FLUTTER_VERSION_MINOR}")
+target_compile_definitions(${BINARY_NAME} PRIVATE "FLUTTER_VERSION_PATCH=${FLUTTER_VERSION_PATCH}")
+target_compile_definitions(${BINARY_NAME} PRIVATE "FLUTTER_VERSION_BUILD=${FLUTTER_VERSION_BUILD}")
+
+# Disable Windows macros that collide with C++ standard library functions.
+target_compile_definitions(${BINARY_NAME} PRIVATE "NOMINMAX")
+
+# Add dependency libraries and include directories. Add any application-specific
+# dependencies here.
+target_link_libraries(${BINARY_NAME} PRIVATE flutter flutter_wrapper_app)
+target_link_libraries(${BINARY_NAME} PRIVATE "dwmapi.lib")
+target_include_directories(${BINARY_NAME} PRIVATE "${CMAKE_SOURCE_DIR}")
+
+# Run the Flutter tool portions of the build. This must not be removed.
+add_dependencies(${BINARY_NAME} flutter_assemble)
diff --git a/petitpal/windows/runner/Runner.rc b/petitpal/windows/runner/Runner.rc
index 1a87834..08235d7 100644
--- a/petitpal/windows/runner/Runner.rc
+++ b/petitpal/windows/runner/Runner.rc
@@ -1,121 +1,121 @@
-// Microsoft Visual C++ generated resource script.
-//
-#pragma code_page(65001)
-#include "resource.h"
-
-#define APSTUDIO_READONLY_SYMBOLS
-/////////////////////////////////////////////////////////////////////////////
-//
-// Generated from the TEXTINCLUDE 2 resource.
-//
-#include "winres.h"
-
-/////////////////////////////////////////////////////////////////////////////
-#undef APSTUDIO_READONLY_SYMBOLS
-
-/////////////////////////////////////////////////////////////////////////////
-// English (United States) resources
-
-#if !defined(AFX_RESOURCE_DLL) || defined(AFX_TARG_ENU)
-LANGUAGE LANG_ENGLISH, SUBLANG_ENGLISH_US
-
-#ifdef APSTUDIO_INVOKED
-/////////////////////////////////////////////////////////////////////////////
-//
-// TEXTINCLUDE
-//
-
-1 TEXTINCLUDE
-BEGIN
-    "resource.h\0"
-END
-
-2 TEXTINCLUDE
-BEGIN
-    "#include ""winres.h""\r\n"
-    "\0"
-END
-
-3 TEXTINCLUDE
-BEGIN
-    "\r\n"
-    "\0"
-END
-
-#endif    // APSTUDIO_INVOKED
-
-
-/////////////////////////////////////////////////////////////////////////////
-//
-// Icon
-//
-
-// Icon with lowest ID value placed first to ensure application icon
-// remains consistent on all systems.
-IDI_APP_ICON            ICON                    "resources\\app_icon.ico"
-
-
-/////////////////////////////////////////////////////////////////////////////
-//
-// Version
-//
-
-#if defined(FLUTTER_VERSION_MAJOR) && defined(FLUTTER_VERSION_MINOR) && defined(FLUTTER_VERSION_PATCH) && defined(FLUTTER_VERSION_BUILD)
-#define VERSION_AS_NUMBER FLUTTER_VERSION_MAJOR,FLUTTER_VERSION_MINOR,FLUTTER_VERSION_PATCH,FLUTTER_VERSION_BUILD
-#else
-#define VERSION_AS_NUMBER 1,0,0,0
-#endif
-
-#if defined(FLUTTER_VERSION)
-#define VERSION_AS_STRING FLUTTER_VERSION
-#else
-#define VERSION_AS_STRING "1.0.0"
-#endif
-
-VS_VERSION_INFO VERSIONINFO
- FILEVERSION VERSION_AS_NUMBER
- PRODUCTVERSION VERSION_AS_NUMBER
- FILEFLAGSMASK VS_FFI_FILEFLAGSMASK
-#ifdef _DEBUG
- FILEFLAGS VS_FF_DEBUG
-#else
- FILEFLAGS 0x0L
-#endif
- FILEOS VOS__WINDOWS32
- FILETYPE VFT_APP
- FILESUBTYPE 0x0L
-BEGIN
-    BLOCK "StringFileInfo"
-    BEGIN
-        BLOCK "040904e4"
-        BEGIN
-            VALUE "CompanyName", "com.example" "\0"
-            VALUE "FileDescription", "petitpal" "\0"
-            VALUE "FileVersion", VERSION_AS_STRING "\0"
-            VALUE "InternalName", "petitpal" "\0"
-            VALUE "LegalCopyright", "Copyright (C) 2025 com.example. All rights reserved." "\0"
-            VALUE "OriginalFilename", "petitpal.exe" "\0"
-            VALUE "ProductName", "petitpal" "\0"
-            VALUE "ProductVersion", VERSION_AS_STRING "\0"
-        END
-    END
-    BLOCK "VarFileInfo"
-    BEGIN
-        VALUE "Translation", 0x409, 1252
-    END
-END
-
-#endif    // English (United States) resources
-/////////////////////////////////////////////////////////////////////////////
-
-
-
-#ifndef APSTUDIO_INVOKED
-/////////////////////////////////////////////////////////////////////////////
-//
-// Generated from the TEXTINCLUDE 3 resource.
-//
-
-
-/////////////////////////////////////////////////////////////////////////////
-#endif    // not APSTUDIO_INVOKED
+// Microsoft Visual C++ generated resource script.
+//
+#pragma code_page(65001)
+#include "resource.h"
+
+#define APSTUDIO_READONLY_SYMBOLS
+/////////////////////////////////////////////////////////////////////////////
+//
+// Generated from the TEXTINCLUDE 2 resource.
+//
+#include "winres.h"
+
+/////////////////////////////////////////////////////////////////////////////
+#undef APSTUDIO_READONLY_SYMBOLS
+
+/////////////////////////////////////////////////////////////////////////////
+// English (United States) resources
+
+#if !defined(AFX_RESOURCE_DLL) || defined(AFX_TARG_ENU)
+LANGUAGE LANG_ENGLISH, SUBLANG_ENGLISH_US
+
+#ifdef APSTUDIO_INVOKED
+/////////////////////////////////////////////////////////////////////////////
+//
+// TEXTINCLUDE
+//
+
+1 TEXTINCLUDE
+BEGIN
+    "resource.h\0"
+END
+
+2 TEXTINCLUDE
+BEGIN
+    "#include ""winres.h""\r\n"
+    "\0"
+END
+
+3 TEXTINCLUDE
+BEGIN
+    "\r\n"
+    "\0"
+END
+
+#endif    // APSTUDIO_INVOKED
+
+
+/////////////////////////////////////////////////////////////////////////////
+//
+// Icon
+//
+
+// Icon with lowest ID value placed first to ensure application icon
+// remains consistent on all systems.
+IDI_APP_ICON            ICON                    "resources\\app_icon.ico"
+
+
+/////////////////////////////////////////////////////////////////////////////
+//
+// Version
+//
+
+#if defined(FLUTTER_VERSION_MAJOR) && defined(FLUTTER_VERSION_MINOR) && defined(FLUTTER_VERSION_PATCH) && defined(FLUTTER_VERSION_BUILD)
+#define VERSION_AS_NUMBER FLUTTER_VERSION_MAJOR,FLUTTER_VERSION_MINOR,FLUTTER_VERSION_PATCH,FLUTTER_VERSION_BUILD
+#else
+#define VERSION_AS_NUMBER 1,0,0,0
+#endif
+
+#if defined(FLUTTER_VERSION)
+#define VERSION_AS_STRING FLUTTER_VERSION
+#else
+#define VERSION_AS_STRING "1.0.0"
+#endif
+
+VS_VERSION_INFO VERSIONINFO
+ FILEVERSION VERSION_AS_NUMBER
+ PRODUCTVERSION VERSION_AS_NUMBER
+ FILEFLAGSMASK VS_FFI_FILEFLAGSMASK
+#ifdef _DEBUG
+ FILEFLAGS VS_FF_DEBUG
+#else
+ FILEFLAGS 0x0L
+#endif
+ FILEOS VOS__WINDOWS32
+ FILETYPE VFT_APP
+ FILESUBTYPE 0x0L
+BEGIN
+    BLOCK "StringFileInfo"
+    BEGIN
+        BLOCK "040904e4"
+        BEGIN
+            VALUE "CompanyName", "com.example" "\0"
+            VALUE "FileDescription", "petitpal" "\0"
+            VALUE "FileVersion", VERSION_AS_STRING "\0"
+            VALUE "InternalName", "petitpal" "\0"
+            VALUE "LegalCopyright", "Copyright (C) 2025 com.example. All rights reserved." "\0"
+            VALUE "OriginalFilename", "petitpal.exe" "\0"
+            VALUE "ProductName", "petitpal" "\0"
+            VALUE "ProductVersion", VERSION_AS_STRING "\0"
+        END
+    END
+    BLOCK "VarFileInfo"
+    BEGIN
+        VALUE "Translation", 0x409, 1252
+    END
+END
+
+#endif    // English (United States) resources
+/////////////////////////////////////////////////////////////////////////////
+
+
+
+#ifndef APSTUDIO_INVOKED
+/////////////////////////////////////////////////////////////////////////////
+//
+// Generated from the TEXTINCLUDE 3 resource.
+//
+
+
+/////////////////////////////////////////////////////////////////////////////
+#endif    // not APSTUDIO_INVOKED
diff --git a/petitpal/windows/runner/flutter_window.cpp b/petitpal/windows/runner/flutter_window.cpp
index 955ee30..c819cb0 100644
--- a/petitpal/windows/runner/flutter_window.cpp
+++ b/petitpal/windows/runner/flutter_window.cpp
@@ -1,71 +1,71 @@
-#include "flutter_window.h"
-
-#include <optional>
-
-#include "flutter/generated_plugin_registrant.h"
-
-FlutterWindow::FlutterWindow(const flutter::DartProject& project)
-    : project_(project) {}
-
-FlutterWindow::~FlutterWindow() {}
-
-bool FlutterWindow::OnCreate() {
-  if (!Win32Window::OnCreate()) {
-    return false;
-  }
-
-  RECT frame = GetClientArea();
-
-  // The size here must match the window dimensions to avoid unnecessary surface
-  // creation / destruction in the startup path.
-  flutter_controller_ = std::make_unique<flutter::FlutterViewController>(
-      frame.right - frame.left, frame.bottom - frame.top, project_);
-  // Ensure that basic setup of the controller was successful.
-  if (!flutter_controller_->engine() || !flutter_controller_->view()) {
-    return false;
-  }
-  RegisterPlugins(flutter_controller_->engine());
-  SetChildContent(flutter_controller_->view()->GetNativeWindow());
-
-  flutter_controller_->engine()->SetNextFrameCallback([&]() {
-    this->Show();
-  });
-
-  // Flutter can complete the first frame before the "show window" callback is
-  // registered. The following call ensures a frame is pending to ensure the
-  // window is shown. It is a no-op if the first frame hasn't completed yet.
-  flutter_controller_->ForceRedraw();
-
-  return true;
-}
-
-void FlutterWindow::OnDestroy() {
-  if (flutter_controller_) {
-    flutter_controller_ = nullptr;
-  }
-
-  Win32Window::OnDestroy();
-}
-
-LRESULT
-FlutterWindow::MessageHandler(HWND hwnd, UINT const message,
-                              WPARAM const wparam,
-                              LPARAM const lparam) noexcept {
-  // Give Flutter, including plugins, an opportunity to handle window messages.
-  if (flutter_controller_) {
-    std::optional<LRESULT> result =
-        flutter_controller_->HandleTopLevelWindowProc(hwnd, message, wparam,
-                                                      lparam);
-    if (result) {
-      return *result;
-    }
-  }
-
-  switch (message) {
-    case WM_FONTCHANGE:
-      flutter_controller_->engine()->ReloadSystemFonts();
-      break;
-  }
-
-  return Win32Window::MessageHandler(hwnd, message, wparam, lparam);
-}
+#include "flutter_window.h"
+
+#include <optional>
+
+#include "flutter/generated_plugin_registrant.h"
+
+FlutterWindow::FlutterWindow(const flutter::DartProject& project)
+    : project_(project) {}
+
+FlutterWindow::~FlutterWindow() {}
+
+bool FlutterWindow::OnCreate() {
+  if (!Win32Window::OnCreate()) {
+    return false;
+  }
+
+  RECT frame = GetClientArea();
+
+  // The size here must match the window dimensions to avoid unnecessary surface
+  // creation / destruction in the startup path.
+  flutter_controller_ = std::make_unique<flutter::FlutterViewController>(
+      frame.right - frame.left, frame.bottom - frame.top, project_);
+  // Ensure that basic setup of the controller was successful.
+  if (!flutter_controller_->engine() || !flutter_controller_->view()) {
+    return false;
+  }
+  RegisterPlugins(flutter_controller_->engine());
+  SetChildContent(flutter_controller_->view()->GetNativeWindow());
+
+  flutter_controller_->engine()->SetNextFrameCallback([&]() {
+    this->Show();
+  });
+
+  // Flutter can complete the first frame before the "show window" callback is
+  // registered. The following call ensures a frame is pending to ensure the
+  // window is shown. It is a no-op if the first frame hasn't completed yet.
+  flutter_controller_->ForceRedraw();
+
+  return true;
+}
+
+void FlutterWindow::OnDestroy() {
+  if (flutter_controller_) {
+    flutter_controller_ = nullptr;
+  }
+
+  Win32Window::OnDestroy();
+}
+
+LRESULT
+FlutterWindow::MessageHandler(HWND hwnd, UINT const message,
+                              WPARAM const wparam,
+                              LPARAM const lparam) noexcept {
+  // Give Flutter, including plugins, an opportunity to handle window messages.
+  if (flutter_controller_) {
+    std::optional<LRESULT> result =
+        flutter_controller_->HandleTopLevelWindowProc(hwnd, message, wparam,
+                                                      lparam);
+    if (result) {
+      return *result;
+    }
+  }
+
+  switch (message) {
+    case WM_FONTCHANGE:
+      flutter_controller_->engine()->ReloadSystemFonts();
+      break;
+  }
+
+  return Win32Window::MessageHandler(hwnd, message, wparam, lparam);
+}
diff --git a/petitpal/windows/runner/flutter_window.h b/petitpal/windows/runner/flutter_window.h
index 6da0652..28c2383 100644
--- a/petitpal/windows/runner/flutter_window.h
+++ b/petitpal/windows/runner/flutter_window.h
@@ -1,33 +1,33 @@
-#ifndef RUNNER_FLUTTER_WINDOW_H_
-#define RUNNER_FLUTTER_WINDOW_H_
-
-#include <flutter/dart_project.h>
-#include <flutter/flutter_view_controller.h>
-
-#include <memory>
-
-#include "win32_window.h"
-
-// A window that does nothing but host a Flutter view.
-class FlutterWindow : public Win32Window {
- public:
-  // Creates a new FlutterWindow hosting a Flutter view running |project|.
-  explicit FlutterWindow(const flutter::DartProject& project);
-  virtual ~FlutterWindow();
-
- protected:
-  // Win32Window:
-  bool OnCreate() override;
-  void OnDestroy() override;
-  LRESULT MessageHandler(HWND window, UINT const message, WPARAM const wparam,
-                         LPARAM const lparam) noexcept override;
-
- private:
-  // The project to run.
-  flutter::DartProject project_;
-
-  // The Flutter instance hosted by this window.
-  std::unique_ptr<flutter::FlutterViewController> flutter_controller_;
-};
-
-#endif  // RUNNER_FLUTTER_WINDOW_H_
+#ifndef RUNNER_FLUTTER_WINDOW_H_
+#define RUNNER_FLUTTER_WINDOW_H_
+
+#include <flutter/dart_project.h>
+#include <flutter/flutter_view_controller.h>
+
+#include <memory>
+
+#include "win32_window.h"
+
+// A window that does nothing but host a Flutter view.
+class FlutterWindow : public Win32Window {
+ public:
+  // Creates a new FlutterWindow hosting a Flutter view running |project|.
+  explicit FlutterWindow(const flutter::DartProject& project);
+  virtual ~FlutterWindow();
+
+ protected:
+  // Win32Window:
+  bool OnCreate() override;
+  void OnDestroy() override;
+  LRESULT MessageHandler(HWND window, UINT const message, WPARAM const wparam,
+                         LPARAM const lparam) noexcept override;
+
+ private:
+  // The project to run.
+  flutter::DartProject project_;
+
+  // The Flutter instance hosted by this window.
+  std::unique_ptr<flutter::FlutterViewController> flutter_controller_;
+};
+
+#endif  // RUNNER_FLUTTER_WINDOW_H_
diff --git a/petitpal/windows/runner/main.cpp b/petitpal/windows/runner/main.cpp
index 213981e..d607449 100644
--- a/petitpal/windows/runner/main.cpp
+++ b/petitpal/windows/runner/main.cpp
@@ -1,43 +1,43 @@
-#include <flutter/dart_project.h>
-#include <flutter/flutter_view_controller.h>
-#include <windows.h>
-
-#include "flutter_window.h"
-#include "utils.h"
-
-int APIENTRY wWinMain(_In_ HINSTANCE instance, _In_opt_ HINSTANCE prev,
-                      _In_ wchar_t *command_line, _In_ int show_command) {
-  // Attach to console when present (e.g., 'flutter run') or create a
-  // new console when running with a debugger.
-  if (!::AttachConsole(ATTACH_PARENT_PROCESS) && ::IsDebuggerPresent()) {
-    CreateAndAttachConsole();
-  }
-
-  // Initialize COM, so that it is available for use in the library and/or
-  // plugins.
-  ::CoInitializeEx(nullptr, COINIT_APARTMENTTHREADED);
-
-  flutter::DartProject project(L"data");
-
-  std::vector<std::string> command_line_arguments =
-      GetCommandLineArguments();
-
-  project.set_dart_entrypoint_arguments(std::move(command_line_arguments));
-
-  FlutterWindow window(project);
-  Win32Window::Point origin(10, 10);
-  Win32Window::Size size(1280, 720);
-  if (!window.Create(L"petitpal", origin, size)) {
-    return EXIT_FAILURE;
-  }
-  window.SetQuitOnClose(true);
-
-  ::MSG msg;
-  while (::GetMessage(&msg, nullptr, 0, 0)) {
-    ::TranslateMessage(&msg);
-    ::DispatchMessage(&msg);
-  }
-
-  ::CoUninitialize();
-  return EXIT_SUCCESS;
-}
+#include <flutter/dart_project.h>
+#include <flutter/flutter_view_controller.h>
+#include <windows.h>
+
+#include "flutter_window.h"
+#include "utils.h"
+
+int APIENTRY wWinMain(_In_ HINSTANCE instance, _In_opt_ HINSTANCE prev,
+                      _In_ wchar_t *command_line, _In_ int show_command) {
+  // Attach to console when present (e.g., 'flutter run') or create a
+  // new console when running with a debugger.
+  if (!::AttachConsole(ATTACH_PARENT_PROCESS) && ::IsDebuggerPresent()) {
+    CreateAndAttachConsole();
+  }
+
+  // Initialize COM, so that it is available for use in the library and/or
+  // plugins.
+  ::CoInitializeEx(nullptr, COINIT_APARTMENTTHREADED);
+
+  flutter::DartProject project(L"data");
+
+  std::vector<std::string> command_line_arguments =
+      GetCommandLineArguments();
+
+  project.set_dart_entrypoint_arguments(std::move(command_line_arguments));
+
+  FlutterWindow window(project);
+  Win32Window::Point origin(10, 10);
+  Win32Window::Size size(1280, 720);
+  if (!window.Create(L"petitpal", origin, size)) {
+    return EXIT_FAILURE;
+  }
+  window.SetQuitOnClose(true);
+
+  ::MSG msg;
+  while (::GetMessage(&msg, nullptr, 0, 0)) {
+    ::TranslateMessage(&msg);
+    ::DispatchMessage(&msg);
+  }
+
+  ::CoUninitialize();
+  return EXIT_SUCCESS;
+}
diff --git a/petitpal/windows/runner/resource.h b/petitpal/windows/runner/resource.h
index 66a65d1..ddc7f3e 100644
--- a/petitpal/windows/runner/resource.h
+++ b/petitpal/windows/runner/resource.h
@@ -1,16 +1,16 @@
-//{{NO_DEPENDENCIES}}
-// Microsoft Visual C++ generated include file.
-// Used by Runner.rc
-//
-#define IDI_APP_ICON                    101
-
-// Next default values for new objects
-//
-#ifdef APSTUDIO_INVOKED
-#ifndef APSTUDIO_READONLY_SYMBOLS
-#define _APS_NEXT_RESOURCE_VALUE        102
-#define _APS_NEXT_COMMAND_VALUE         40001
-#define _APS_NEXT_CONTROL_VALUE         1001
-#define _APS_NEXT_SYMED_VALUE           101
-#endif
-#endif
+//{{NO_DEPENDENCIES}}
+// Microsoft Visual C++ generated include file.
+// Used by Runner.rc
+//
+#define IDI_APP_ICON                    101
+
+// Next default values for new objects
+//
+#ifdef APSTUDIO_INVOKED
+#ifndef APSTUDIO_READONLY_SYMBOLS
+#define _APS_NEXT_RESOURCE_VALUE        102
+#define _APS_NEXT_COMMAND_VALUE         40001
+#define _APS_NEXT_CONTROL_VALUE         1001
+#define _APS_NEXT_SYMED_VALUE           101
+#endif
+#endif
diff --git a/petitpal/windows/runner/runner.exe.manifest b/petitpal/windows/runner/runner.exe.manifest
index 153653e..4b962bb 100644
--- a/petitpal/windows/runner/runner.exe.manifest
+++ b/petitpal/windows/runner/runner.exe.manifest
@@ -1,14 +1,14 @@
-<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
-<assembly xmlns="urn:schemas-microsoft-com:asm.v1" manifestVersion="1.0">
-  <application xmlns="urn:schemas-microsoft-com:asm.v3">
-    <windowsSettings>
-      <dpiAwareness xmlns="http://schemas.microsoft.com/SMI/2016/WindowsSettings">PerMonitorV2</dpiAwareness>
-    </windowsSettings>
-  </application>
-  <compatibility xmlns="urn:schemas-microsoft-com:compatibility.v1">
-    <application>
-      <!-- Windows 10 and Windows 11 -->
-      <supportedOS Id="{8e0f7a12-bfb3-4fe8-b9a5-48fd50a15a9a}"/>
-    </application>
-  </compatibility>
-</assembly>
+<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
+<assembly xmlns="urn:schemas-microsoft-com:asm.v1" manifestVersion="1.0">
+  <application xmlns="urn:schemas-microsoft-com:asm.v3">
+    <windowsSettings>
+      <dpiAwareness xmlns="http://schemas.microsoft.com/SMI/2016/WindowsSettings">PerMonitorV2</dpiAwareness>
+    </windowsSettings>
+  </application>
+  <compatibility xmlns="urn:schemas-microsoft-com:compatibility.v1">
+    <application>
+      <!-- Windows 10 and Windows 11 -->
+      <supportedOS Id="{8e0f7a12-bfb3-4fe8-b9a5-48fd50a15a9a}"/>
+    </application>
+  </compatibility>
+</assembly>
diff --git a/petitpal/windows/runner/utils.cpp b/petitpal/windows/runner/utils.cpp
index 3a0b465..259d85b 100644
--- a/petitpal/windows/runner/utils.cpp
+++ b/petitpal/windows/runner/utils.cpp
@@ -1,65 +1,65 @@
-#include "utils.h"
-
-#include <flutter_windows.h>
-#include <io.h>
-#include <stdio.h>
-#include <windows.h>
-
-#include <iostream>
-
-void CreateAndAttachConsole() {
-  if (::AllocConsole()) {
-    FILE *unused;
-    if (freopen_s(&unused, "CONOUT$", "w", stdout)) {
-      _dup2(_fileno(stdout), 1);
-    }
-    if (freopen_s(&unused, "CONOUT$", "w", stderr)) {
-      _dup2(_fileno(stdout), 2);
-    }
-    std::ios::sync_with_stdio();
-    FlutterDesktopResyncOutputStreams();
-  }
-}
-
-std::vector<std::string> GetCommandLineArguments() {
-  // Convert the UTF-16 command line arguments to UTF-8 for the Engine to use.
-  int argc;
-  wchar_t** argv = ::CommandLineToArgvW(::GetCommandLineW(), &argc);
-  if (argv == nullptr) {
-    return std::vector<std::string>();
-  }
-
-  std::vector<std::string> command_line_arguments;
-
-  // Skip the first argument as it's the binary name.
-  for (int i = 1; i < argc; i++) {
-    command_line_arguments.push_back(Utf8FromUtf16(argv[i]));
-  }
-
-  ::LocalFree(argv);
-
-  return command_line_arguments;
-}
-
-std::string Utf8FromUtf16(const wchar_t* utf16_string) {
-  if (utf16_string == nullptr) {
-    return std::string();
-  }
-  unsigned int target_length = ::WideCharToMultiByte(
-      CP_UTF8, WC_ERR_INVALID_CHARS, utf16_string,
-      -1, nullptr, 0, nullptr, nullptr)
-    -1; // remove the trailing null character
-  int input_length = (int)wcslen(utf16_string);
-  std::string utf8_string;
-  if (target_length == 0 || target_length > utf8_string.max_size()) {
-    return utf8_string;
-  }
-  utf8_string.resize(target_length);
-  int converted_length = ::WideCharToMultiByte(
-      CP_UTF8, WC_ERR_INVALID_CHARS, utf16_string,
-      input_length, utf8_string.data(), target_length, nullptr, nullptr);
-  if (converted_length == 0) {
-    return std::string();
-  }
-  return utf8_string;
-}
+#include "utils.h"
+
+#include <flutter_windows.h>
+#include <io.h>
+#include <stdio.h>
+#include <windows.h>
+
+#include <iostream>
+
+void CreateAndAttachConsole() {
+  if (::AllocConsole()) {
+    FILE *unused;
+    if (freopen_s(&unused, "CONOUT$", "w", stdout)) {
+      _dup2(_fileno(stdout), 1);
+    }
+    if (freopen_s(&unused, "CONOUT$", "w", stderr)) {
+      _dup2(_fileno(stdout), 2);
+    }
+    std::ios::sync_with_stdio();
+    FlutterDesktopResyncOutputStreams();
+  }
+}
+
+std::vector<std::string> GetCommandLineArguments() {
+  // Convert the UTF-16 command line arguments to UTF-8 for the Engine to use.
+  int argc;
+  wchar_t** argv = ::CommandLineToArgvW(::GetCommandLineW(), &argc);
+  if (argv == nullptr) {
+    return std::vector<std::string>();
+  }
+
+  std::vector<std::string> command_line_arguments;
+
+  // Skip the first argument as it's the binary name.
+  for (int i = 1; i < argc; i++) {
+    command_line_arguments.push_back(Utf8FromUtf16(argv[i]));
+  }
+
+  ::LocalFree(argv);
+
+  return command_line_arguments;
+}
+
+std::string Utf8FromUtf16(const wchar_t* utf16_string) {
+  if (utf16_string == nullptr) {
+    return std::string();
+  }
+  unsigned int target_length = ::WideCharToMultiByte(
+      CP_UTF8, WC_ERR_INVALID_CHARS, utf16_string,
+      -1, nullptr, 0, nullptr, nullptr)
+    -1; // remove the trailing null character
+  int input_length = (int)wcslen(utf16_string);
+  std::string utf8_string;
+  if (target_length == 0 || target_length > utf8_string.max_size()) {
+    return utf8_string;
+  }
+  utf8_string.resize(target_length);
+  int converted_length = ::WideCharToMultiByte(
+      CP_UTF8, WC_ERR_INVALID_CHARS, utf16_string,
+      input_length, utf8_string.data(), target_length, nullptr, nullptr);
+  if (converted_length == 0) {
+    return std::string();
+  }
+  return utf8_string;
+}
diff --git a/petitpal/windows/runner/utils.h b/petitpal/windows/runner/utils.h
index 3879d54..3f0e05c 100644
--- a/petitpal/windows/runner/utils.h
+++ b/petitpal/windows/runner/utils.h
@@ -1,19 +1,19 @@
-#ifndef RUNNER_UTILS_H_
-#define RUNNER_UTILS_H_
-
-#include <string>
-#include <vector>
-
-// Creates a console for the process, and redirects stdout and stderr to
-// it for both the runner and the Flutter library.
-void CreateAndAttachConsole();
-
-// Takes a null-terminated wchar_t* encoded in UTF-16 and returns a std::string
-// encoded in UTF-8. Returns an empty std::string on failure.
-std::string Utf8FromUtf16(const wchar_t* utf16_string);
-
-// Gets the command line arguments passed in as a std::vector<std::string>,
-// encoded in UTF-8. Returns an empty std::vector<std::string> on failure.
-std::vector<std::string> GetCommandLineArguments();
-
-#endif  // RUNNER_UTILS_H_
+#ifndef RUNNER_UTILS_H_
+#define RUNNER_UTILS_H_
+
+#include <string>
+#include <vector>
+
+// Creates a console for the process, and redirects stdout and stderr to
+// it for both the runner and the Flutter library.
+void CreateAndAttachConsole();
+
+// Takes a null-terminated wchar_t* encoded in UTF-16 and returns a std::string
+// encoded in UTF-8. Returns an empty std::string on failure.
+std::string Utf8FromUtf16(const wchar_t* utf16_string);
+
+// Gets the command line arguments passed in as a std::vector<std::string>,
+// encoded in UTF-8. Returns an empty std::vector<std::string> on failure.
+std::vector<std::string> GetCommandLineArguments();
+
+#endif  // RUNNER_UTILS_H_
diff --git a/petitpal/windows/runner/win32_window.cpp b/petitpal/windows/runner/win32_window.cpp
index 60608d0..b5ba2a0 100644
--- a/petitpal/windows/runner/win32_window.cpp
+++ b/petitpal/windows/runner/win32_window.cpp
@@ -1,288 +1,288 @@
-#include "win32_window.h"
-
-#include <dwmapi.h>
-#include <flutter_windows.h>
-
-#include "resource.h"
-
-namespace {
-
-/// Window attribute that enables dark mode window decorations.
-///
-/// Redefined in case the developer's machine has a Windows SDK older than
-/// version 10.0.22000.0.
-/// See: https://docs.microsoft.com/windows/win32/api/dwmapi/ne-dwmapi-dwmwindowattribute
-#ifndef DWMWA_USE_IMMERSIVE_DARK_MODE
-#define DWMWA_USE_IMMERSIVE_DARK_MODE 20
-#endif
-
-constexpr const wchar_t kWindowClassName[] = L"FLUTTER_RUNNER_WIN32_WINDOW";
-
-/// Registry key for app theme preference.
-///
-/// A value of 0 indicates apps should use dark mode. A non-zero or missing
-/// value indicates apps should use light mode.
-constexpr const wchar_t kGetPreferredBrightnessRegKey[] =
-  L"Software\\Microsoft\\Windows\\CurrentVersion\\Themes\\Personalize";
-constexpr const wchar_t kGetPreferredBrightnessRegValue[] = L"AppsUseLightTheme";
-
-// The number of Win32Window objects that currently exist.
-static int g_active_window_count = 0;
-
-using EnableNonClientDpiScaling = BOOL __stdcall(HWND hwnd);
-
-// Scale helper to convert logical scaler values to physical using passed in
-// scale factor
-int Scale(int source, double scale_factor) {
-  return static_cast<int>(source * scale_factor);
-}
-
-// Dynamically loads the |EnableNonClientDpiScaling| from the User32 module.
-// This API is only needed for PerMonitor V1 awareness mode.
-void EnableFullDpiSupportIfAvailable(HWND hwnd) {
-  HMODULE user32_module = LoadLibraryA("User32.dll");
-  if (!user32_module) {
-    return;
-  }
-  auto enable_non_client_dpi_scaling =
-      reinterpret_cast<EnableNonClientDpiScaling*>(
-          GetProcAddress(user32_module, "EnableNonClientDpiScaling"));
-  if (enable_non_client_dpi_scaling != nullptr) {
-    enable_non_client_dpi_scaling(hwnd);
-  }
-  FreeLibrary(user32_module);
-}
-
-}  // namespace
-
-// Manages the Win32Window's window class registration.
-class WindowClassRegistrar {
- public:
-  ~WindowClassRegistrar() = default;
-
-  // Returns the singleton registrar instance.
-  static WindowClassRegistrar* GetInstance() {
-    if (!instance_) {
-      instance_ = new WindowClassRegistrar();
-    }
-    return instance_;
-  }
-
-  // Returns the name of the window class, registering the class if it hasn't
-  // previously been registered.
-  const wchar_t* GetWindowClass();
-
-  // Unregisters the window class. Should only be called if there are no
-  // instances of the window.
-  void UnregisterWindowClass();
-
- private:
-  WindowClassRegistrar() = default;
-
-  static WindowClassRegistrar* instance_;
-
-  bool class_registered_ = false;
-};
-
-WindowClassRegistrar* WindowClassRegistrar::instance_ = nullptr;
-
-const wchar_t* WindowClassRegistrar::GetWindowClass() {
-  if (!class_registered_) {
-    WNDCLASS window_class{};
-    window_class.hCursor = LoadCursor(nullptr, IDC_ARROW);
-    window_class.lpszClassName = kWindowClassName;
-    window_class.style = CS_HREDRAW | CS_VREDRAW;
-    window_class.cbClsExtra = 0;
-    window_class.cbWndExtra = 0;
-    window_class.hInstance = GetModuleHandle(nullptr);
-    window_class.hIcon =
-        LoadIcon(window_class.hInstance, MAKEINTRESOURCE(IDI_APP_ICON));
-    window_class.hbrBackground = 0;
-    window_class.lpszMenuName = nullptr;
-    window_class.lpfnWndProc = Win32Window::WndProc;
-    RegisterClass(&window_class);
-    class_registered_ = true;
-  }
-  return kWindowClassName;
-}
-
-void WindowClassRegistrar::UnregisterWindowClass() {
-  UnregisterClass(kWindowClassName, nullptr);
-  class_registered_ = false;
-}
-
-Win32Window::Win32Window() {
-  ++g_active_window_count;
-}
-
-Win32Window::~Win32Window() {
-  --g_active_window_count;
-  Destroy();
-}
-
-bool Win32Window::Create(const std::wstring& title,
-                         const Point& origin,
-                         const Size& size) {
-  Destroy();
-
-  const wchar_t* window_class =
-      WindowClassRegistrar::GetInstance()->GetWindowClass();
-
-  const POINT target_point = {static_cast<LONG>(origin.x),
-                              static_cast<LONG>(origin.y)};
-  HMONITOR monitor = MonitorFromPoint(target_point, MONITOR_DEFAULTTONEAREST);
-  UINT dpi = FlutterDesktopGetDpiForMonitor(monitor);
-  double scale_factor = dpi / 96.0;
-
-  HWND window = CreateWindow(
-      window_class, title.c_str(), WS_OVERLAPPEDWINDOW,
-      Scale(origin.x, scale_factor), Scale(origin.y, scale_factor),
-      Scale(size.width, scale_factor), Scale(size.height, scale_factor),
-      nullptr, nullptr, GetModuleHandle(nullptr), this);
-
-  if (!window) {
-    return false;
-  }
-
-  UpdateTheme(window);
-
-  return OnCreate();
-}
-
-bool Win32Window::Show() {
-  return ShowWindow(window_handle_, SW_SHOWNORMAL);
-}
-
-// static
-LRESULT CALLBACK Win32Window::WndProc(HWND const window,
-                                      UINT const message,
-                                      WPARAM const wparam,
-                                      LPARAM const lparam) noexcept {
-  if (message == WM_NCCREATE) {
-    auto window_struct = reinterpret_cast<CREATESTRUCT*>(lparam);
-    SetWindowLongPtr(window, GWLP_USERDATA,
-                     reinterpret_cast<LONG_PTR>(window_struct->lpCreateParams));
-
-    auto that = static_cast<Win32Window*>(window_struct->lpCreateParams);
-    EnableFullDpiSupportIfAvailable(window);
-    that->window_handle_ = window;
-  } else if (Win32Window* that = GetThisFromHandle(window)) {
-    return that->MessageHandler(window, message, wparam, lparam);
-  }
-
-  return DefWindowProc(window, message, wparam, lparam);
-}
-
-LRESULT
-Win32Window::MessageHandler(HWND hwnd,
-                            UINT const message,
-                            WPARAM const wparam,
-                            LPARAM const lparam) noexcept {
-  switch (message) {
-    case WM_DESTROY:
-      window_handle_ = nullptr;
-      Destroy();
-      if (quit_on_close_) {
-        PostQuitMessage(0);
-      }
-      return 0;
-
-    case WM_DPICHANGED: {
-      auto newRectSize = reinterpret_cast<RECT*>(lparam);
-      LONG newWidth = newRectSize->right - newRectSize->left;
-      LONG newHeight = newRectSize->bottom - newRectSize->top;
-
-      SetWindowPos(hwnd, nullptr, newRectSize->left, newRectSize->top, newWidth,
-                   newHeight, SWP_NOZORDER | SWP_NOACTIVATE);
-
-      return 0;
-    }
-    case WM_SIZE: {
-      RECT rect = GetClientArea();
-      if (child_content_ != nullptr) {
-        // Size and position the child window.
-        MoveWindow(child_content_, rect.left, rect.top, rect.right - rect.left,
-                   rect.bottom - rect.top, TRUE);
-      }
-      return 0;
-    }
-
-    case WM_ACTIVATE:
-      if (child_content_ != nullptr) {
-        SetFocus(child_content_);
-      }
-      return 0;
-
-    case WM_DWMCOLORIZATIONCOLORCHANGED:
-      UpdateTheme(hwnd);
-      return 0;
-  }
-
-  return DefWindowProc(window_handle_, message, wparam, lparam);
-}
-
-void Win32Window::Destroy() {
-  OnDestroy();
-
-  if (window_handle_) {
-    DestroyWindow(window_handle_);
-    window_handle_ = nullptr;
-  }
-  if (g_active_window_count == 0) {
-    WindowClassRegistrar::GetInstance()->UnregisterWindowClass();
-  }
-}
-
-Win32Window* Win32Window::GetThisFromHandle(HWND const window) noexcept {
-  return reinterpret_cast<Win32Window*>(
-      GetWindowLongPtr(window, GWLP_USERDATA));
-}
-
-void Win32Window::SetChildContent(HWND content) {
-  child_content_ = content;
-  SetParent(content, window_handle_);
-  RECT frame = GetClientArea();
-
-  MoveWindow(content, frame.left, frame.top, frame.right - frame.left,
-             frame.bottom - frame.top, true);
-
-  SetFocus(child_content_);
-}
-
-RECT Win32Window::GetClientArea() {
-  RECT frame;
-  GetClientRect(window_handle_, &frame);
-  return frame;
-}
-
-HWND Win32Window::GetHandle() {
-  return window_handle_;
-}
-
-void Win32Window::SetQuitOnClose(bool quit_on_close) {
-  quit_on_close_ = quit_on_close;
-}
-
-bool Win32Window::OnCreate() {
-  // No-op; provided for subclasses.
-  return true;
-}
-
-void Win32Window::OnDestroy() {
-  // No-op; provided for subclasses.
-}
-
-void Win32Window::UpdateTheme(HWND const window) {
-  DWORD light_mode;
-  DWORD light_mode_size = sizeof(light_mode);
-  LSTATUS result = RegGetValue(HKEY_CURRENT_USER, kGetPreferredBrightnessRegKey,
-                               kGetPreferredBrightnessRegValue,
-                               RRF_RT_REG_DWORD, nullptr, &light_mode,
-                               &light_mode_size);
-
-  if (result == ERROR_SUCCESS) {
-    BOOL enable_dark_mode = light_mode == 0;
-    DwmSetWindowAttribute(window, DWMWA_USE_IMMERSIVE_DARK_MODE,
-                          &enable_dark_mode, sizeof(enable_dark_mode));
-  }
-}
+#include "win32_window.h"
+
+#include <dwmapi.h>
+#include <flutter_windows.h>
+
+#include "resource.h"
+
+namespace {
+
+/// Window attribute that enables dark mode window decorations.
+///
+/// Redefined in case the developer's machine has a Windows SDK older than
+/// version 10.0.22000.0.
+/// See: https://docs.microsoft.com/windows/win32/api/dwmapi/ne-dwmapi-dwmwindowattribute
+#ifndef DWMWA_USE_IMMERSIVE_DARK_MODE
+#define DWMWA_USE_IMMERSIVE_DARK_MODE 20
+#endif
+
+constexpr const wchar_t kWindowClassName[] = L"FLUTTER_RUNNER_WIN32_WINDOW";
+
+/// Registry key for app theme preference.
+///
+/// A value of 0 indicates apps should use dark mode. A non-zero or missing
+/// value indicates apps should use light mode.
+constexpr const wchar_t kGetPreferredBrightnessRegKey[] =
+  L"Software\\Microsoft\\Windows\\CurrentVersion\\Themes\\Personalize";
+constexpr const wchar_t kGetPreferredBrightnessRegValue[] = L"AppsUseLightTheme";
+
+// The number of Win32Window objects that currently exist.
+static int g_active_window_count = 0;
+
+using EnableNonClientDpiScaling = BOOL __stdcall(HWND hwnd);
+
+// Scale helper to convert logical scaler values to physical using passed in
+// scale factor
+int Scale(int source, double scale_factor) {
+  return static_cast<int>(source * scale_factor);
+}
+
+// Dynamically loads the |EnableNonClientDpiScaling| from the User32 module.
+// This API is only needed for PerMonitor V1 awareness mode.
+void EnableFullDpiSupportIfAvailable(HWND hwnd) {
+  HMODULE user32_module = LoadLibraryA("User32.dll");
+  if (!user32_module) {
+    return;
+  }
+  auto enable_non_client_dpi_scaling =
+      reinterpret_cast<EnableNonClientDpiScaling*>(
+          GetProcAddress(user32_module, "EnableNonClientDpiScaling"));
+  if (enable_non_client_dpi_scaling != nullptr) {
+    enable_non_client_dpi_scaling(hwnd);
+  }
+  FreeLibrary(user32_module);
+}
+
+}  // namespace
+
+// Manages the Win32Window's window class registration.
+class WindowClassRegistrar {
+ public:
+  ~WindowClassRegistrar() = default;
+
+  // Returns the singleton registrar instance.
+  static WindowClassRegistrar* GetInstance() {
+    if (!instance_) {
+      instance_ = new WindowClassRegistrar();
+    }
+    return instance_;
+  }
+
+  // Returns the name of the window class, registering the class if it hasn't
+  // previously been registered.
+  const wchar_t* GetWindowClass();
+
+  // Unregisters the window class. Should only be called if there are no
+  // instances of the window.
+  void UnregisterWindowClass();
+
+ private:
+  WindowClassRegistrar() = default;
+
+  static WindowClassRegistrar* instance_;
+
+  bool class_registered_ = false;
+};
+
+WindowClassRegistrar* WindowClassRegistrar::instance_ = nullptr;
+
+const wchar_t* WindowClassRegistrar::GetWindowClass() {
+  if (!class_registered_) {
+    WNDCLASS window_class{};
+    window_class.hCursor = LoadCursor(nullptr, IDC_ARROW);
+    window_class.lpszClassName = kWindowClassName;
+    window_class.style = CS_HREDRAW | CS_VREDRAW;
+    window_class.cbClsExtra = 0;
+    window_class.cbWndExtra = 0;
+    window_class.hInstance = GetModuleHandle(nullptr);
+    window_class.hIcon =
+        LoadIcon(window_class.hInstance, MAKEINTRESOURCE(IDI_APP_ICON));
+    window_class.hbrBackground = 0;
+    window_class.lpszMenuName = nullptr;
+    window_class.lpfnWndProc = Win32Window::WndProc;
+    RegisterClass(&window_class);
+    class_registered_ = true;
+  }
+  return kWindowClassName;
+}
+
+void WindowClassRegistrar::UnregisterWindowClass() {
+  UnregisterClass(kWindowClassName, nullptr);
+  class_registered_ = false;
+}
+
+Win32Window::Win32Window() {
+  ++g_active_window_count;
+}
+
+Win32Window::~Win32Window() {
+  --g_active_window_count;
+  Destroy();
+}
+
+bool Win32Window::Create(const std::wstring& title,
+                         const Point& origin,
+                         const Size& size) {
+  Destroy();
+
+  const wchar_t* window_class =
+      WindowClassRegistrar::GetInstance()->GetWindowClass();
+
+  const POINT target_point = {static_cast<LONG>(origin.x),
+                              static_cast<LONG>(origin.y)};
+  HMONITOR monitor = MonitorFromPoint(target_point, MONITOR_DEFAULTTONEAREST);
+  UINT dpi = FlutterDesktopGetDpiForMonitor(monitor);
+  double scale_factor = dpi / 96.0;
+
+  HWND window = CreateWindow(
+      window_class, title.c_str(), WS_OVERLAPPEDWINDOW,
+      Scale(origin.x, scale_factor), Scale(origin.y, scale_factor),
+      Scale(size.width, scale_factor), Scale(size.height, scale_factor),
+      nullptr, nullptr, GetModuleHandle(nullptr), this);
+
+  if (!window) {
+    return false;
+  }
+
+  UpdateTheme(window);
+
+  return OnCreate();
+}
+
+bool Win32Window::Show() {
+  return ShowWindow(window_handle_, SW_SHOWNORMAL);
+}
+
+// static
+LRESULT CALLBACK Win32Window::WndProc(HWND const window,
+                                      UINT const message,
+                                      WPARAM const wparam,
+                                      LPARAM const lparam) noexcept {
+  if (message == WM_NCCREATE) {
+    auto window_struct = reinterpret_cast<CREATESTRUCT*>(lparam);
+    SetWindowLongPtr(window, GWLP_USERDATA,
+                     reinterpret_cast<LONG_PTR>(window_struct->lpCreateParams));
+
+    auto that = static_cast<Win32Window*>(window_struct->lpCreateParams);
+    EnableFullDpiSupportIfAvailable(window);
+    that->window_handle_ = window;
+  } else if (Win32Window* that = GetThisFromHandle(window)) {
+    return that->MessageHandler(window, message, wparam, lparam);
+  }
+
+  return DefWindowProc(window, message, wparam, lparam);
+}
+
+LRESULT
+Win32Window::MessageHandler(HWND hwnd,
+                            UINT const message,
+                            WPARAM const wparam,
+                            LPARAM const lparam) noexcept {
+  switch (message) {
+    case WM_DESTROY:
+      window_handle_ = nullptr;
+      Destroy();
+      if (quit_on_close_) {
+        PostQuitMessage(0);
+      }
+      return 0;
+
+    case WM_DPICHANGED: {
+      auto newRectSize = reinterpret_cast<RECT*>(lparam);
+      LONG newWidth = newRectSize->right - newRectSize->left;
+      LONG newHeight = newRectSize->bottom - newRectSize->top;
+
+      SetWindowPos(hwnd, nullptr, newRectSize->left, newRectSize->top, newWidth,
+                   newHeight, SWP_NOZORDER | SWP_NOACTIVATE);
+
+      return 0;
+    }
+    case WM_SIZE: {
+      RECT rect = GetClientArea();
+      if (child_content_ != nullptr) {
+        // Size and position the child window.
+        MoveWindow(child_content_, rect.left, rect.top, rect.right - rect.left,
+                   rect.bottom - rect.top, TRUE);
+      }
+      return 0;
+    }
+
+    case WM_ACTIVATE:
+      if (child_content_ != nullptr) {
+        SetFocus(child_content_);
+      }
+      return 0;
+
+    case WM_DWMCOLORIZATIONCOLORCHANGED:
+      UpdateTheme(hwnd);
+      return 0;
+  }
+
+  return DefWindowProc(window_handle_, message, wparam, lparam);
+}
+
+void Win32Window::Destroy() {
+  OnDestroy();
+
+  if (window_handle_) {
+    DestroyWindow(window_handle_);
+    window_handle_ = nullptr;
+  }
+  if (g_active_window_count == 0) {
+    WindowClassRegistrar::GetInstance()->UnregisterWindowClass();
+  }
+}
+
+Win32Window* Win32Window::GetThisFromHandle(HWND const window) noexcept {
+  return reinterpret_cast<Win32Window*>(
+      GetWindowLongPtr(window, GWLP_USERDATA));
+}
+
+void Win32Window::SetChildContent(HWND content) {
+  child_content_ = content;
+  SetParent(content, window_handle_);
+  RECT frame = GetClientArea();
+
+  MoveWindow(content, frame.left, frame.top, frame.right - frame.left,
+             frame.bottom - frame.top, true);
+
+  SetFocus(child_content_);
+}
+
+RECT Win32Window::GetClientArea() {
+  RECT frame;
+  GetClientRect(window_handle_, &frame);
+  return frame;
+}
+
+HWND Win32Window::GetHandle() {
+  return window_handle_;
+}
+
+void Win32Window::SetQuitOnClose(bool quit_on_close) {
+  quit_on_close_ = quit_on_close;
+}
+
+bool Win32Window::OnCreate() {
+  // No-op; provided for subclasses.
+  return true;
+}
+
+void Win32Window::OnDestroy() {
+  // No-op; provided for subclasses.
+}
+
+void Win32Window::UpdateTheme(HWND const window) {
+  DWORD light_mode;
+  DWORD light_mode_size = sizeof(light_mode);
+  LSTATUS result = RegGetValue(HKEY_CURRENT_USER, kGetPreferredBrightnessRegKey,
+                               kGetPreferredBrightnessRegValue,
+                               RRF_RT_REG_DWORD, nullptr, &light_mode,
+                               &light_mode_size);
+
+  if (result == ERROR_SUCCESS) {
+    BOOL enable_dark_mode = light_mode == 0;
+    DwmSetWindowAttribute(window, DWMWA_USE_IMMERSIVE_DARK_MODE,
+                          &enable_dark_mode, sizeof(enable_dark_mode));
+  }
+}
diff --git a/petitpal/windows/runner/win32_window.h b/petitpal/windows/runner/win32_window.h
index e901dde..49b847f 100644
--- a/petitpal/windows/runner/win32_window.h
+++ b/petitpal/windows/runner/win32_window.h
@@ -1,102 +1,102 @@
-#ifndef RUNNER_WIN32_WINDOW_H_
-#define RUNNER_WIN32_WINDOW_H_
-
-#include <windows.h>
-
-#include <functional>
-#include <memory>
-#include <string>
-
-// A class abstraction for a high DPI-aware Win32 Window. Intended to be
-// inherited from by classes that wish to specialize with custom
-// rendering and input handling
-class Win32Window {
- public:
-  struct Point {
-    unsigned int x;
-    unsigned int y;
-    Point(unsigned int x, unsigned int y) : x(x), y(y) {}
-  };
-
-  struct Size {
-    unsigned int width;
-    unsigned int height;
-    Size(unsigned int width, unsigned int height)
-        : width(width), height(height) {}
-  };
-
-  Win32Window();
-  virtual ~Win32Window();
-
-  // Creates a win32 window with |title| that is positioned and sized using
-  // |origin| and |size|. New windows are created on the default monitor. Window
-  // sizes are specified to the OS in physical pixels, hence to ensure a
-  // consistent size this function will scale the inputted width and height as
-  // as appropriate for the default monitor. The window is invisible until
-  // |Show| is called. Returns true if the window was created successfully.
-  bool Create(const std::wstring& title, const Point& origin, const Size& size);
-
-  // Show the current window. Returns true if the window was successfully shown.
-  bool Show();
-
-  // Release OS resources associated with window.
-  void Destroy();
-
-  // Inserts |content| into the window tree.
-  void SetChildContent(HWND content);
-
-  // Returns the backing Window handle to enable clients to set icon and other
-  // window properties. Returns nullptr if the window has been destroyed.
-  HWND GetHandle();
-
-  // If true, closing this window will quit the application.
-  void SetQuitOnClose(bool quit_on_close);
-
-  // Return a RECT representing the bounds of the current client area.
-  RECT GetClientArea();
-
- protected:
-  // Processes and route salient window messages for mouse handling,
-  // size change and DPI. Delegates handling of these to member overloads that
-  // inheriting classes can handle.
-  virtual LRESULT MessageHandler(HWND window,
-                                 UINT const message,
-                                 WPARAM const wparam,
-                                 LPARAM const lparam) noexcept;
-
-  // Called when CreateAndShow is called, allowing subclass window-related
-  // setup. Subclasses should return false if setup fails.
-  virtual bool OnCreate();
-
-  // Called when Destroy is called.
-  virtual void OnDestroy();
-
- private:
-  friend class WindowClassRegistrar;
-
-  // OS callback called by message pump. Handles the WM_NCCREATE message which
-  // is passed when the non-client area is being created and enables automatic
-  // non-client DPI scaling so that the non-client area automatically
-  // responds to changes in DPI. All other messages are handled by
-  // MessageHandler.
-  static LRESULT CALLBACK WndProc(HWND const window,
-                                  UINT const message,
-                                  WPARAM const wparam,
-                                  LPARAM const lparam) noexcept;
-
-  // Retrieves a class instance pointer for |window|
-  static Win32Window* GetThisFromHandle(HWND const window) noexcept;
-
-  // Update the window frame's theme to match the system theme.
-  static void UpdateTheme(HWND const window);
-
-  bool quit_on_close_ = false;
-
-  // window handle for top level window.
-  HWND window_handle_ = nullptr;
-
-  // window handle for hosted content.
-  HWND child_content_ = nullptr;
-};
-
-#endif  // RUNNER_WIN32_WINDOW_H_
+#ifndef RUNNER_WIN32_WINDOW_H_
+#define RUNNER_WIN32_WINDOW_H_
+
+#include <windows.h>
+
+#include <functional>
+#include <memory>
+#include <string>
+
+// A class abstraction for a high DPI-aware Win32 Window. Intended to be
+// inherited from by classes that wish to specialize with custom
+// rendering and input handling
+class Win32Window {
+ public:
+  struct Point {
+    unsigned int x;
+    unsigned int y;
+    Point(unsigned int x, unsigned int y) : x(x), y(y) {}
+  };
+
+  struct Size {
+    unsigned int width;
+    unsigned int height;
+    Size(unsigned int width, unsigned int height)
+        : width(width), height(height) {}
+  };
+
+  Win32Window();
+  virtual ~Win32Window();
+
+  // Creates a win32 window with |title| that is positioned and sized using
+  // |origin| and |size|. New windows are created on the default monitor. Window
+  // sizes are specified to the OS in physical pixels, hence to ensure a
+  // consistent size this function will scale the inputted width and height as
+  // as appropriate for the default monitor. The window is invisible until
+  // |Show| is called. Returns true if the window was created successfully.
+  bool Create(const std::wstring& title, const Point& origin, const Size& size);
+
+  // Show the current window. Returns true if the window was successfully shown.
+  bool Show();
+
+  // Release OS resources associated with window.
+  void Destroy();
+
+  // Inserts |content| into the window tree.
+  void SetChildContent(HWND content);
+
+  // Returns the backing Window handle to enable clients to set icon and other
+  // window properties. Returns nullptr if the window has been destroyed.
+  HWND GetHandle();
+
+  // If true, closing this window will quit the application.
+  void SetQuitOnClose(bool quit_on_close);
+
+  // Return a RECT representing the bounds of the current client area.
+  RECT GetClientArea();
+
+ protected:
+  // Processes and route salient window messages for mouse handling,
+  // size change and DPI. Delegates handling of these to member overloads that
+  // inheriting classes can handle.
+  virtual LRESULT MessageHandler(HWND window,
+                                 UINT const message,
+                                 WPARAM const wparam,
+                                 LPARAM const lparam) noexcept;
+
+  // Called when CreateAndShow is called, allowing subclass window-related
+  // setup. Subclasses should return false if setup fails.
+  virtual bool OnCreate();
+
+  // Called when Destroy is called.
+  virtual void OnDestroy();
+
+ private:
+  friend class WindowClassRegistrar;
+
+  // OS callback called by message pump. Handles the WM_NCCREATE message which
+  // is passed when the non-client area is being created and enables automatic
+  // non-client DPI scaling so that the non-client area automatically
+  // responds to changes in DPI. All other messages are handled by
+  // MessageHandler.
+  static LRESULT CALLBACK WndProc(HWND const window,
+                                  UINT const message,
+                                  WPARAM const wparam,
+                                  LPARAM const lparam) noexcept;
+
+  // Retrieves a class instance pointer for |window|
+  static Win32Window* GetThisFromHandle(HWND const window) noexcept;
+
+  // Update the window frame's theme to match the system theme.
+  static void UpdateTheme(HWND const window);
+
+  bool quit_on_close_ = false;
+
+  // window handle for top level window.
+  HWND window_handle_ = nullptr;
+
+  // window handle for hosted content.
+  HWND child_content_ = nullptr;
+};
+
+#endif  // RUNNER_WIN32_WINDOW_H_
diff --git a/run.sh b/run.sh
new file mode 100644
index 0000000..a54e9bb
--- /dev/null
+++ b/run.sh
@@ -0,0 +1,2056 @@
+#!/usr/bin/env bash
+set -euo pipefail
+
+# PetitPal MVP - complete project generator
+# Creates:
+#   /petitpal_mvp/
+#       petitpal/                 # Flutter app
+#       cloudflare-worker/        # Worker backend + KV
+#       docs/                     # Setup & API docs, troubleshooting
+#       scripts/compat_check.sh   # Quick env sanity checker
+#   petitpal_mvp.zip              # Full zip archive
+#   petitpal_mvp.patch            # Git patch of all files
+
+ROOT="$(pwd)"
+APP="$ROOT/petitpal"
+WKR="$ROOT/cloudflare-worker"
+DOCS="$ROOT/docs"
+SCRIPTS="$ROOT/scripts"
+
+mkdir -p "$APP" "$WKR" "$DOCS" "$SCRIPTS"
+
+w() { # write a file from heredoc
+  local file="$1"; shift
+  mkdir -p "$(dirname "$file")"
+  cat > "$file" <<'EOF'
+'"$@"'
+EOF
+}
+
+wb() { # base64->binary file
+  local file="$1" b64="$2"
+  mkdir -p "$(dirname "$file")"
+  printf '%s' "$b64" | base64 -d > "$file"
+}
+
+# -----------------------------
+# Top-level README + BUILD CONFIG
+# -----------------------------
+w "$ROOT/README.md" '
+# PetitPal (MVP)
+
+Voice-first assistant for seniors (Android first). Backend: Cloudflare Worker + KV.
+This bundle includes:
+
+- **/petitpal** — Flutter app with Riverpod, go_router, STT/TTS, JSON-driven themes/onboarding, secure key backup, QR invites, deep links, provider proxy via Worker.
+- **/cloudflare-worker** — Worker with complete MVP endpoints.
+- **/docs** — Setup guide, API spec, troubleshooting, deployment checklist.
+- **/scripts/compat_check.sh** — Environment sanity checker.
+
+Follow **docs/SETUP_GUIDE.md** to go from zero → working app in ~30 minutes.
+'
+
+w "$ROOT/BUILD_CONFIG.md" '
+# BUILD_CONFIG.md
+
+**Recommended, known-good versions**
+
+- Flutter SDK: 3.22.2 (stable)
+- Dart: 3.3.x
+- Android Gradle Plugin (AGP): 8.4.2
+- Kotlin: 1.9.24
+- Android SDK: 35
+- minSdk: 24
+- NDK: 27.0.12077973
+- JDK: 17
+
+These combinations are tested to build cleanly for this project.
+'
+
+# -----------------------------
+# Flutter app: pubspec + analysis options
+# -----------------------------
+w "$APP/pubspec.yaml" '
+name: petitpal
+description: Voice-first assistant for seniors. Flutter + Riverpod + Cloudflare Worker backend.
+publish_to: "none"
+version: 0.5.0+5
+
+environment:
+  sdk: ">=3.3.0 <4.0.0"
+
+dependencies:
+  flutter:
+    sdk: flutter
+  flutter_riverpod: ^2.5.1
+  go_router: ^14.2.3
+  http: ^1.2.2
+  shared_preferences: ^2.2.3
+  flutter_secure_storage: ^9.2.2
+  speech_to_text: ^6.6.2
+  flutter_tts: ^4.0.2
+  uuid: ^4.4.0
+  qr_flutter: ^4.1.0
+  mobile_scanner: ^6.0.2
+  uni_links: ^0.5.1
+  url_launcher: ^6.3.0
+  cryptography: ^2.7.0
+  connectivity_plus: ^6.1.0
+  package_info_plus: ^8.0.2
+
+  # Firebase (integrated but disabled by default; safe if google-services.json not present)
+  firebase_core: ^3.4.1
+  firebase_analytics: ^11.3.0
+  firebase_crashlytics: ^4.1.3
+
+dev_dependencies:
+  flutter_test:
+    sdk: flutter
+  flutter_lints: ^3.0.2
+
+flutter:
+  uses-material-design: true
+  assets:
+    - assets/themes/themes.json
+    - assets/themes/theme_voice_descriptions.json
+    - assets/config/onboarding.json
+    - assets/config/provider_setup.json
+'
+
+w "$APP/analysis_options.yaml" '
+include: package:flutter_lints/flutter.yaml
+linter:
+  rules:
+    prefer_final_locals: true
+    avoid_redundant_argument_values: true
+    avoid_print: true
+'
+
+# -----------------------------
+# Flutter app: lib/config
+# -----------------------------
+mkdir -p "$APP/lib/config"
+
+w "$APP/lib/config/internal_config.dart" '
+// Single source of truth for launch toggles and URLs.
+class InternalConfig {
+  InternalConfig._();
+
+  // Base URL of your Cloudflare Worker backend
+  static const String workerBaseUrl = "https://petitpal-api.kristyc.workers.dev";
+
+  // Analytics & diagnostics (off by default until you drop google-services.json)
+  static const bool analyticsEnabled = false;
+  static const bool crashlyticsEnabled = false;
+  static const bool sentryEnabled = false;
+
+  // Motion and accessibility defaults
+  static const bool premiumMotionDefault = true;
+
+  // Security headers
+  static const String appUserAgent = "PetitPal/0.5.0 (Flutter)";
+}
+'
+
+w "$APP/lib/config/launch_config.dart" '
+// Flip these when preparing for production launch.
+class LaunchConfig {
+  LaunchConfig._();
+
+  // Set to true when you are launching to production and have Firebase configured.
+  static const bool LAUNCH_MODE = false;
+
+  static const bool analytics => LAUNCH_MODE ? true : false;
+  static const bool crashlytics => LAUNCH_MODE ? true : false;
+  static const bool sentry => LAUNCH_MODE ? true : false;
+}
+'
+
+w "$APP/lib/config/strings_config.dart" '
+// Centralized strings so a non-developer can change copy without hunting in widgets.
+class StringsConfig {
+  StringsConfig._();
+
+  static const appName = "PetitPal";
+
+  static const voiceScreenTitle = "Ask PetitPal";
+  static const tapMicToSpeak = "Tap the mic and speak";
+  static const listening = "Listening…";
+  static const processing = "Thinking…";
+  static const speaking = "Speaking…";
+
+  static const setupTitle = "Set up your keys";
+  static const setupBody = "Enter at least one provider key so PetitPal can answer your questions.";
+  static const save = "Save";
+  static const test = "Test";
+  static const openai = "OpenAI";
+  static const gemini = "Gemini";
+  static const grok = "Grok";
+  static const deepseek = "DeepSeek";
+
+  static const family = "Family";
+  static const inviteFamily = "Invite Family Member";
+  static const acceptInvite = "Accept Invite";
+  static const scanQr = "Scan QR";
+  static const showQr = "Show QR";
+  static const yourName = "Your Name";
+
+  static const onboardingTitle = "Welcome to PetitPal";
+  static const onboardingNext = "Next";
+  static const startUsingApp = "Start using PetitPal";
+}
+'
+
+w "$APP/lib/config/api_config.dart" '
+// API routes, headers, and timeouts.
+class ApiConfig {
+  ApiConfig._();
+  static const healthPath = "/health";
+  static const keysSavePath = "/api/keys/save";
+  static const keysGetPath = "/api/keys/get";
+  static const chatPath = "/api/chat";
+  static const familyCreateInvitePath = "/api/family/create_invite";
+  static const familyAcceptInvitePath = "/api/family/accept_invite";
+  static const familyListPath = "/api/family/list";
+
+  static const requestTimeoutSeconds = 30;
+}
+'
+
+# -----------------------------
+# Flutter app: analytics
+# -----------------------------
+mkdir -p "$APP/lib/src/analytics"
+
+w "$APP/lib/src/analytics/events.dart" '
+// Canonical event names and parameters to avoid typos.
+class AnalyticsEvents {
+  AnalyticsEvents._();
+
+  static const appFirstOpen = "app_first_open";
+  static const themeSelected = "theme_selected";
+  static const setupCompleted = "setup_completed";
+
+  static const voiceActivationStarted = "voice_activation_started";
+  static const questionAsked = "question_asked";
+  static const ttsSpoken = "tts_spoken";
+  static const interactionCompleted = "interaction_completed";
+
+  static const providerRequestFailed = "provider_request_failed";
+  static const backendCallResult = "backend_call_result";
+
+  static const familyInviteCreated = "family_invite_created";
+  static const familyInviteJoined = "family_invite_joined";
+}
+'
+
+w "$APP/lib/src/analytics/analytics.dart" '
+import "package:firebase_analytics/firebase_analytics.dart";
+import "package:firebase_core/firebase_core.dart";
+import "package:firebase_crashlytics/firebase_crashlytics.dart";
+import "../../config/launch_config.dart";
+
+class AppAnalytics {
+  AppAnalytics._();
+  static FirebaseAnalytics? _analytics;
+
+  static Future<void> init() async {
+    if (!LaunchConfig.analytics && !LaunchConfig.crashlytics) {
+      return;
+    }
+    await Firebase.initializeApp();
+    if (LaunchConfig.analytics) {
+      _analytics = FirebaseAnalytics.instance;
+    }
+    if (LaunchConfig.crashlytics) {
+      FlutterError.onError = FirebaseCrashlytics.instance.recordFlutterFatalError;
+    }
+  }
+
+  static Future<void> log(String name, [Map<String, Object?>? params]) async {
+    final a = _analytics;
+    if (a == null || !LaunchConfig.analytics) return;
+    await a.logEvent(name: name, parameters: params);
+  }
+}
+'
+
+# -----------------------------
+# Flutter app: security (AES-GCM + PBKDF2)
+# -----------------------------
+mkdir -p "$APP/lib/src/security"
+
+w "$APP/lib/src/security/keystore.dart" '
+import "dart:convert";
+import "dart:math";
+import "package:cryptography/cryptography.dart";
+
+class Keystore {
+  Keystore._();
+
+  static const int _pbkdf2Iterations = 500000;
+  static const int _saltLength = 16;
+  static const int _nonceLength = 12;
+
+  static Future<Map<String, dynamic>> encrypt(String password, Map<String, String> data) async {
+    final secretKey = await _deriveKey(password);
+    final algorithm = AesGcm.with256bits();
+    final nonce = _randomBytes(_nonceLength);
+    final message = utf8.encode(jsonEncode(data));
+    final secretBox = await algorithm.encrypt(message, secretKey: secretKey, nonce: nonce);
+    return {
+      "ciphertext": base64Encode(secretBox.cipherText),
+      "nonce": base64Encode(nonce),
+      "salt": base64Encode(_lastSalt),
+      "algo": "AES-GCM-256",
+      "kdf": "PBKDF2-HMAC-SHA256",
+      "iterations": _pbkdf2Iterations,
+      "created_at": DateTime.now().toUtc().toIso8601String(),
+    };
+  }
+
+  static Future<Map<String, String>> decrypt(String password, Map<String, dynamic> payload) async {
+    final secretKey = await _deriveKey(password, saltOverride: base64Decode(payload["salt"] as String));
+    final algorithm = AesGcm.with256bits();
+    final nonce = base64Decode(payload["nonce"] as String);
+    final cipherText = base64Decode(payload["ciphertext"] as String);
+    final box = SecretBox(cipherText, nonce: nonce, mac: Mac.empty);
+    final clear = await algorithm.decrypt(box, secretKey: secretKey);
+    final map = jsonDecode(utf8.decode(clear)) as Map<String, dynamic>;
+    return map.map((k, v) => MapEntry(k, v.toString()));
+  }
+
+  static late List<int> _lastSalt;
+
+  static Future<SecretKey> _deriveKey(String password, {List<int>? saltOverride}) async {
+    final pbkdf2 = Pbkdf2(
+      macAlgorithm: Hmac.sha256(),
+      iterations: _pbkdf2Iterations,
+      bits: 256,
+    );
+    _lastSalt = saltOverride ?? _randomBytes(_saltLength);
+    final secretKey = await pbkdf2.deriveKey(
+      secretKey: SecretKey(utf8.encode(password)),
+      nonce: _lastSalt,
+    );
+    return secretKey;
+  }
+
+  static List<int> _randomBytes(int length) {
+    final rnd = Random.secure();
+    return List<int>.generate(length, (_) => rnd.nextInt(256));
+  }
+}
+'
+
+# -----------------------------
+# Flutter app: Worker API client
+# -----------------------------
+w "$APP/lib/src/worker_api.dart" '
+import "dart:convert";
+import "package:http/http.dart" as http;
+import "package:uuid/uuid.dart";
+import "../config/internal_config.dart";
+import "../config/api_config.dart";
+
+class WorkerApi {
+  WorkerApi({http.Client? client}) : _client = client ?? http.Client();
+
+  final http.Client _client;
+  static final _uuid = const Uuid();
+
+  Future<Map<String, dynamic>> health() async {
+    final uri = Uri.parse(InternalConfig.workerBaseUrl + ApiConfig.healthPath);
+    final res = await _client.get(uri, headers: _headers());
+    _ensureOk(res);
+    return jsonDecode(res.body) as Map<String, dynamic>;
+  }
+
+  Future<void> saveEncryptedKeys(String deviceId, Map<String, dynamic> encrypted) async {
+    final uri = Uri.parse(InternalConfig.workerBaseUrl + ApiConfig.keysSavePath);
+    final res = await _client.post(uri, headers: _headers(extra: {"X-Device-ID": deviceId}), body: jsonEncode(encrypted));
+    _ensureOk(res);
+  }
+
+  Future<Map<String, dynamic>> chat({
+    required String deviceId,
+    required String text,
+    required String provider,
+    required String providerKey,
+    bool familyContext = false,
+  }) async {
+    final uri = Uri.parse(InternalConfig.workerBaseUrl + ApiConfig.chatPath);
+    final res = await _client.post(
+      uri,
+      headers: _headers(extra: {"X-Device-ID": deviceId}),
+      body: jsonEncode({
+        "text": text,
+        "provider_hint": provider,
+        "provider_key": providerKey,
+        "family_context": familyContext,
+      }),
+    );
+    _ensureOk(res);
+    return jsonDecode(res.body) as Map<String, dynamic>;
+  }
+
+  Future<Map<String, dynamic>> createInvite({required String deviceId, required String memberName}) async {
+    final uri = Uri.parse(InternalConfig.workerBaseUrl + ApiConfig.familyCreateInvitePath);
+    final res = await _client.post(
+      uri,
+      headers: _headers(extra: {"X-Device-ID": deviceId}),
+      body: jsonEncode({"member_name": memberName}),
+    );
+    _ensureOk(res);
+    return jsonDecode(res.body) as Map<String, dynamic>;
+  }
+
+  Future<Map<String, dynamic>> acceptInvite({required String deviceId, required String inviteToken}) async {
+    final uri = Uri.parse(InternalConfig.workerBaseUrl + ApiConfig.familyAcceptInvitePath);
+    final res = await _client.post(
+      uri,
+      headers: _headers(extra: {"X-Device-ID": deviceId}),
+      body: jsonEncode({"invite_token": inviteToken}),
+    );
+    _ensureOk(res);
+    return jsonDecode(res.body) as Map<String, dynamic>;
+  }
+
+  Future<Map<String, dynamic>> listFamily({required String familyId}) async {
+    final uri = Uri.parse(InternalConfig.workerBaseUrl + ApiConfig.familyListPath);
+    final res = await _client.get(
+      uri,
+      headers: _headers(extra: {"X-Family-ID": familyId}),
+    );
+    _ensureOk(res);
+    return jsonDecode(res.body) as Map<String, dynamic>;
+  }
+
+  Map<String, String> _headers({Map<String, String>? extra}) {
+    return {
+      "Content-Type": "application/json",
+      "Accept": "application/json",
+      "User-Agent": InternalConfig.appUserAgent,
+      if (extra != null) ...extra,
+    };
+  }
+
+  void _ensureOk(http.Response res) {
+    if (res.statusCode < 200 || res.statusCode >= 300) {
+      throw Exception("Backend error ${res.statusCode}: ${res.body}");
+    }
+  }
+}
+'
+
+# -----------------------------
+# Flutter app: providers & storage
+# -----------------------------
+mkdir -p "$APP/lib/src/providers"
+
+w "$APP/lib/src/providers/providers.dart" '
+import "package:flutter_riverpod/flutter_riverpod.dart";
+import "package:shared_preferences/shared_preferences.dart";
+import "package:flutter_secure_storage/flutter_secure_storage.dart";
+import "package:uuid/uuid.dart";
+
+final _prefsProvider = FutureProvider<SharedPreferences>((ref) async {
+  return SharedPreferences.getInstance();
+});
+
+final deviceIdProvider = FutureProvider<String>((ref) async {
+  const key = "device_id";
+  final prefs = await ref.watch(_prefsProvider.future);
+  var id = prefs.getString(key);
+  if (id == null || id.isEmpty) {
+    id = const Uuid().v4();
+    await prefs.setString(key, id);
+  }
+  return id;
+});
+
+final isFirstRunProvider = FutureProvider<bool>((ref) async {
+  final prefs = await ref.watch(_prefsProvider.future);
+  final seen = prefs.getBool("seen_onboarding") ?? false;
+  return !seen;
+});
+
+final secureStorageProvider = Provider<FlutterSecureStorage>((ref) {
+  return const FlutterSecureStorage();
+});
+
+class ProviderKeys {
+  final String? openai;
+  final String? gemini;
+  final String? grok;
+  final String? deepseek;
+  const ProviderKeys({this.openai, this.gemini, this.grok, this.deepseek});
+
+  Map<String, String> toMap() {
+    final m = <String, String>{};
+    if (openai != null && openai!.isNotEmpty) m["openai"] = openai!;
+    if (gemini != null && gemini!.isNotEmpty) m["gemini"] = gemini!;
+    if (grok != null && grok!.isNotEmpty) m["grok"] = grok!;
+    if (deepseek != null && deepseek!.isNotEmpty) m["deepseek"] = deepseek!;
+    return m;
+  }
+}
+
+final providerKeysProvider = FutureProvider<ProviderKeys>((ref) async {
+  final storage = ref.watch(secureStorageProvider);
+  final o = await storage.read(key: "key_openai");
+  final g = await storage.read(key: "key_gemini");
+  final x = await storage.read(key: "key_grok");
+  final d = await storage.read(key: "key_deepseek");
+  return ProviderKeys(openai: o, gemini: g, grok: x, deepseek: d);
+});
+'
+
+# -----------------------------
+# Flutter app: voice module
+# -----------------------------
+mkdir -p "$APP/lib/src/voice"
+
+w "$APP/lib/src/voice/voice_controller.dart" '
+import "package:flutter_riverpod/flutter_riverpod.dart";
+import "package:speech_to_text/speech_to_text.dart" as stt;
+import "package:flutter_tts/flutter_tts.dart";
+
+enum VoiceState { idle, listening, processing, speaking }
+
+class VoiceController extends StateNotifier<VoiceState> {
+  VoiceController() : super(VoiceState.idle) {
+    _stt = stt.SpeechToText();
+    _tts = FlutterTts();
+  }
+
+  late final stt.SpeechToText _stt;
+  late final FlutterTts _tts;
+  String _lastTranscript = "";
+
+  String get transcript => _lastTranscript;
+
+  Future<bool> initializeStt() async {
+    final available = await _stt.initialize();
+    return available;
+  }
+
+  Future<void> startListening(Function(String) onChange) async {
+    final ok = await initializeStt();
+    if (!ok) {
+      return;
+    }
+    state = VoiceState.listening;
+    _lastTranscript = "";
+    await _stt.listen(onResult: (r) {
+      _lastTranscript = r.recognizedWords;
+      onChange(_lastTranscript);
+    });
+  }
+
+  Future<void> stopListening() async {
+    await _stt.stop();
+    state = VoiceState.processing;
+  }
+
+  Future<void> speak(String text) async {
+    state = VoiceState.speaking;
+    await _tts.stop();
+    await _tts.speak(text);
+    state = VoiceState.idle;
+  }
+
+  void reset() {
+    state = VoiceState.idle;
+    _lastTranscript = "";
+  }
+}
+
+final voiceControllerProvider = StateNotifierProvider<VoiceController, VoiceState>((ref) {
+  return VoiceController();
+});
+'
+
+w "$APP/lib/src/voice/voice_screen.dart" '
+import "package:flutter/material.dart";
+import "package:flutter_riverpod/flutter_riverpod.dart";
+import "../../config/strings_config.dart";
+import "../providers/providers.dart";
+import "../worker_api.dart";
+import "voice_controller.dart";
+
+class VoiceScreen extends ConsumerStatefulWidget {
+  const VoiceScreen({super.key});
+  @override
+  ConsumerState<VoiceScreen> createState() => _VoiceScreenState();
+}
+
+class _VoiceScreenState extends ConsumerState<VoiceScreen> {
+  String _preview = "";
+  String _response = "";
+  String _provider = "openai";
+
+  @override
+  Widget build(BuildContext context) {
+    final state = ref.watch(voiceControllerProvider);
+    final controller = ref.read(voiceControllerProvider.notifier);
+
+    return Scaffold(
+      appBar: AppBar(title: const Text(StringsConfig.voiceScreenTitle)),
+      body: Padding(
+        padding: const EdgeInsets.all(16),
+        child: Column(
+          children: [
+            Row(
+              children: [
+                const Text("Provider:"),
+                const SizedBox(width: 8),
+                DropdownButton<String>(
+                  value: _provider,
+                  items: const [
+                    DropdownMenuItem(value: "openai", child: Text("OpenAI")),
+                    DropdownMenuItem(value: "gemini", child: Text("Gemini")),
+                    DropdownMenuItem(value: "grok", child: Text("Grok")),
+                    DropdownMenuItem(value: "deepseek", child: Text("DeepSeek")),
+                  ],
+                  onChanged: (v) {
+                    if (v != null) setState(() => _provider = v);
+                  },
+                )
+              ],
+            ),
+            const SizedBox(height: 8),
+            Container(
+              padding: const EdgeInsets.all(12),
+              decoration: BoxDecoration(
+                border: Border.all(color: Colors.grey.shade600, width: 1.5),
+                borderRadius: BorderRadius.circular(12),
+              ),
+              height: 120,
+              width: double.infinity,
+              alignment: Alignment.topLeft,
+              child: SingleChildScrollView(
+                child: Text(_preview.isEmpty ? StringsConfig.tapMicToSpeak : _preview),
+              ),
+            ),
+            const SizedBox(height: 12),
+            Expanded(
+              child: Container(
+                padding: const EdgeInsets.all(12),
+                width: double.infinity,
+                decoration: BoxDecoration(
+                  color: Theme.of(context).colorScheme.surfaceVariant,
+                  borderRadius: BorderRadius.circular(12),
+                ),
+                child: SingleChildScrollView(child: Text(_response)),
+              ),
+            ),
+            const SizedBox(height: 12),
+            Row(
+              mainAxisAlignment: MainAxisAlignment.spaceEvenly,
+              children: [
+                ElevatedButton.icon(
+                  onPressed: state == VoiceState.listening
+                      ? null
+                      : () async {
+                          await controller.startListening((s) {
+                            setState(() => _preview = s);
+                          });
+                        },
+                  icon: const Icon(Icons.mic),
+                  label: const Text("Start"),
+                ),
+                ElevatedButton.icon(
+                  onPressed: state == VoiceState.listening ? () => controller.stopListening() : null,
+                  icon: const Icon(Icons.stop),
+                  label: const Text("Stop"),
+                ),
+                ElevatedButton.icon(
+                  onPressed: () async {
+                    final deviceId = await ref.read(deviceIdProvider.future);
+                    final keys = await ref.read(providerKeysProvider.future);
+                    final keyMap = keys.toMap();
+                    final providerKey = keyMap[_provider];
+                    if (providerKey == null || providerKey.isEmpty) {
+                      if (mounted) {
+                        ScaffoldMessenger.of(context).showSnackBar(
+                          const SnackBar(content: Text("Please add a provider key first on the Setup screen.")),
+                        );
+                      }
+                      return;
+                    }
+                    final api = WorkerApi();
+                    try {
+                      final res = await api.chat(
+                        deviceId: deviceId,
+                        text: _preview,
+                        provider: _provider,
+                        providerKey: providerKey,
+                      );
+                      final text = (res["text"] ?? "").toString();
+                      setState(() => _response = text);
+                      await ref.read(voiceControllerProvider.notifier).speak(text);
+                    } catch (e) {
+                      if (mounted) {
+                        ScaffoldMessenger.of(context).showSnackBar(SnackBar(content: Text("Error: $e")));
+                      }
+                    }
+                  },
+                  icon: const Icon(Icons.send),
+                  label: const Text("Ask"),
+                ),
+              ],
+            ),
+          ],
+        ),
+      ),
+    );
+  }
+}
+'
+
+# -----------------------------
+# Flutter app: provider setup UI
+# -----------------------------
+w "$APP/lib/src/providers/provider_setup_screen.dart" '
+import "package:flutter/material.dart";
+import "package:flutter_riverpod/flutter_riverpod.dart";
+import "../../config/strings_config.dart";
+import "../providers/providers.dart";
+import "../security/keystore.dart";
+import "../worker_api.dart";
+
+class ProviderSetupScreen extends ConsumerStatefulWidget {
+  const ProviderSetupScreen({super.key});
+
+  @override
+  ConsumerState<ProviderSetupScreen> createState() => _ProviderSetupScreenState();
+}
+
+class _ProviderSetupScreenState extends ConsumerState<ProviderSetupScreen> {
+  final _openai = TextEditingController();
+  final _gemini = TextEditingController();
+  final _grok = TextEditingController();
+  final _deepseek = TextEditingController();
+  final _backupPass = TextEditingController();
+
+  @override
+  void dispose() {
+    _openai.dispose();
+    _gemini.dispose();
+    _grok.dispose();
+    _deepseek.dispose();
+    _backupPass.dispose();
+    super.dispose();
+  }
+
+  @override
+  Widget build(BuildContext context) {
+    return Scaffold(
+      appBar: AppBar(title: const Text("Provider Keys")),
+      body: ListView(
+        padding: const EdgeInsets.all(16),
+        children: [
+          Text(StringsConfig.setupBody),
+          const SizedBox(height: 12),
+          _field("OpenAI API Key", _openai, hint: "sk-..."),
+          _field("Gemini API Key", _gemini, hint: "AIza..."),
+          _field("Grok API Key", _grok, hint: "grok-..."),
+          _field("DeepSeek API Key", _deepseek, hint: "sk-..."),
+          const Divider(height: 24),
+          _field("Backup password (to encrypt keys)", _backupPass, hint: "A phrase only you know", obscure: true),
+          const SizedBox(height: 8),
+          FilledButton(
+            onPressed: () async {
+              final storage = ref.read(secureStorageProvider);
+              if (_openai.text.isNotEmpty) await storage.write(key: "key_openai", value: _openai.text.trim());
+              if (_gemini.text.isNotEmpty) await storage.write(key: "key_gemini", value: _gemini.text.trim());
+              if (_grok.text.isNotEmpty) await storage.write(key: "key_grok", value: _grok.text.trim());
+              if (_deepseek.text.isNotEmpty) await storage.write(key: "key_deepseek", value: _deepseek.text.trim());
+              if (mounted) {
+                ScaffoldMessenger.of(context).showSnackBar(const SnackBar(content: Text("Saved locally.")));
+              }
+              if (_backupPass.text.isNotEmpty) {
+                final keys = await ref.read(providerKeysProvider.future);
+                final encrypted = await Keystore.encrypt(_backupPass.text, keys.toMap());
+                final deviceId = await ref.read(deviceIdProvider.future);
+                await WorkerApi().saveEncryptedKeys(deviceId, encrypted);
+                if (mounted) {
+                  ScaffoldMessenger.of(context).showSnackBar(const SnackBar(content: Text("Encrypted backup uploaded.")));
+                }
+              }
+            },
+            child: const Text("Save & Backup"),
+          ),
+        ],
+      ),
+    );
+  }
+
+  Widget _field(String label, TextEditingController c, {String? hint, bool obscure = false}) {
+    return Padding(
+      padding: const EdgeInsets.only(bottom: 12),
+      child: TextField(
+        controller: c,
+        decoration: InputDecoration(labelText: label, hintText: hint),
+        obscureText: obscure,
+        enableSuggestions: !obscure,
+        autocorrect: !obscure,
+      ),
+    );
+  }
+}
+'
+
+# -----------------------------
+# Flutter app: family (QR invites + accept + list)
+# -----------------------------
+mkdir -p "$APP/lib/src/family"
+
+w "$APP/lib/src/family/invite_screen.dart" '
+import "package:flutter/material.dart";
+import "package:flutter_riverpod/flutter_riverpod.dart";
+import "package:qr_flutter/qr_flutter.dart";
+import "../providers/providers.dart";
+import "../worker_api.dart";
+
+class InviteScreen extends ConsumerStatefulWidget {
+  const InviteScreen({super.key});
+  @override
+  ConsumerState<InviteScreen> createState() => _InviteScreenState();
+}
+
+class _InviteScreenState extends ConsumerState<InviteScreen> {
+  String? _deeplink;
+  final _name = TextEditingController();
+
+  @override
+  Widget build(BuildContext context) {
+    return Scaffold(
+      appBar: AppBar(title: const Text("Invite Family Member")),
+      body: Padding(
+        padding: const EdgeInsets.all(16),
+        child: Column(
+          children: [
+            TextField(controller: _name, decoration: const InputDecoration(labelText: "Their name")),
+            const SizedBox(height: 12),
+            FilledButton(
+              onPressed: () async {
+                final deviceId = await ref.read(deviceIdProvider.future);
+                final res = await WorkerApi().createInvite(deviceId: deviceId, memberName: _name.text.trim().isEmpty ? "Member" : _name.text.trim());
+                setState(() => _deeplink = res["deeplink"]?.toString());
+              },
+              child: const Text("Create Invite"),
+            ),
+            const SizedBox(height: 12),
+            if (_deeplink != null)
+              Expanded(
+                child: Center(
+                  child: QrImageView(data: _deeplink!, size: 240),
+                ),
+              ),
+            if (_deeplink != null) SelectableText(_deeplink!),
+          ],
+        ),
+      ),
+    );
+  }
+}
+'
+
+w "$APP/lib/src/family/accept_invite_screen.dart" '
+import "package:flutter/material.dart";
+import "package:flutter_riverpod/flutter_riverpod.dart";
+import "package:mobile_scanner/mobile_scanner.dart";
+import "../providers/providers.dart";
+import "../worker_api.dart";
+
+class AcceptInviteScreen extends ConsumerStatefulWidget {
+  const AcceptInviteScreen({super.key});
+  @override
+  ConsumerState<AcceptInviteScreen> createState() => _AcceptInviteScreenState();
+}
+
+class _AcceptInviteScreenState extends ConsumerState<AcceptInviteScreen> {
+  String _status = "Scan a QR to join.";
+
+  @override
+  Widget build(BuildContext context) {
+    return Scaffold(
+      appBar: AppBar(title: const Text("Accept Invite")),
+      body: Column(
+        children: [
+          Expanded(
+            child: MobileScanner(
+              onDetect: (capture) async {
+                final barcode = capture.barcodes.first;
+                final raw = barcode.rawValue;
+                if (raw == null) return;
+                try {
+                  final uri = Uri.parse(raw);
+                  final token = uri.queryParameters["token"];
+                  if (token == null) return;
+                  final deviceId = await ref.read(deviceIdProvider.future);
+                  final res = await WorkerApi().acceptInvite(deviceId: deviceId, inviteToken: token);
+                  setState(() => _status = "Joined family ${res["family_id"]} as ${res["member_name"]}.");
+                } catch (_) {}
+              },
+            ),
+          ),
+          Padding(
+            padding: const EdgeInsets.all(16),
+            child: Text(_status),
+          )
+        ],
+      ),
+    );
+  }
+}
+'
+
+w "$APP/lib/src/family/family_dashboard_screen.dart" '
+import "package:flutter/material.dart";
+import "package:flutter_riverpod/flutter_riverpod.dart";
+import "../worker_api.dart";
+
+class FamilyDashboardScreen extends ConsumerStatefulWidget {
+  const FamilyDashboardScreen({super.key});
+  @override
+  ConsumerState<FamilyDashboardScreen> createState() => _FamilyDashboardScreenState();
+}
+
+class _FamilyDashboardScreenState extends ConsumerState<FamilyDashboardScreen> {
+  final _familyIdCtrl = TextEditingController();
+  List<Map<String, dynamic>> _members = [];
+
+  @override
+  Widget build(BuildContext context) {
+    return Scaffold(
+      appBar: AppBar(title: const Text("Family Members")),
+      body: Padding(
+        padding: const EdgeInsets.all(16),
+        child: Column(
+          children: [
+            TextField(controller: _familyIdCtrl, decoration: const InputDecoration(labelText: "Family ID")),
+            const SizedBox(height: 8),
+            FilledButton(
+              onPressed: () async {
+                final res = await WorkerApi().listFamily(familyId: _familyIdCtrl.text.trim());
+                final list = (res["members"] as List).cast<Map<String, dynamic>>();
+                setState(() => _members = list);
+              },
+              child: const Text("Load Members"),
+            ),
+            const SizedBox(height: 12),
+            Expanded(
+              child: ListView.separated(
+                itemBuilder: (_, i) => ListTile(
+                  leading: const Icon(Icons.person),
+                  title: Text(_members[i]["name"]?.toString() ?? "Unknown"),
+                  subtitle: Text(_members[i]["device_id"]?.toString() ?? ""),
+                ),
+                separatorBuilder: (_, __) => const Divider(),
+                itemCount: _members.length,
+              ),
+            )
+          ],
+        ),
+      ),
+    );
+  }
+}
+'
+
+w "$APP/lib/src/family/family_hub_screen.dart" '
+import "package:flutter/material.dart";
+
+class FamilyHubScreen extends StatelessWidget {
+  const FamilyHubScreen({super.key});
+
+  @override
+  Widget build(BuildContext context) {
+    return Scaffold(
+      appBar: AppBar(title: const Text("Family")),
+      body: ListView(
+        padding: const EdgeInsets.all(16),
+        children: [
+          Card(
+            child: ListTile(
+              leading: const Icon(Icons.qr_code),
+              title: const Text("Invite Family Member"),
+              onTap: () => Navigator.of(context).pushNamed("/family/invite"),
+            ),
+          ),
+          Card(
+            child: ListTile(
+              leading: const Icon(Icons.qr_code_scanner),
+              title: const Text("Accept Invite"),
+              onTap: () => Navigator.of(context).pushNamed("/family/accept"),
+            ),
+          ),
+          Card(
+            child: ListTile(
+              leading: const Icon(Icons.people),
+              title: const Text("Family Dashboard"),
+              onTap: () => Navigator.of(context).pushNamed("/family/dashboard"),
+            ),
+          ),
+        ],
+      ),
+    );
+  }
+}
+'
+
+# -----------------------------
+# Flutter app: theme system
+# -----------------------------
+mkdir -p "$APP/lib/src/theme" "$APP/assets/themes" "$APP/assets/config" "$APP/lib/src/onboarding" "$APP/lib/src/home"
+
+w "$APP/lib/src/theme/registry.dart" '
+import "dart:convert";
+import "package:flutter/services.dart" show rootBundle;
+import "package:flutter/material.dart";
+
+class PetitTokens extends ThemeExtension<PetitTokens> {
+  final double cornerRadius;
+  final Duration motionFast;
+  final Duration motionNormal;
+  final Duration motionSlow;
+
+  const PetitTokens({
+    required this.cornerRadius,
+    required this.motionFast,
+    required this.motionNormal,
+    required this.motionSlow,
+  });
+
+  @override
+  ThemeExtension<PetitTokens> copyWith({double? cornerRadius, Duration? motionFast, Duration? motionNormal, Duration? motionSlow}) {
+    return PetitTokens(
+      cornerRadius: cornerRadius ?? this.cornerRadius,
+      motionFast: motionFast ?? this.motionFast,
+      motionNormal: motionNormal ?? this.motionNormal,
+      motionSlow: motionSlow ?? this.motionSlow,
+    );
+  }
+
+  @override
+  ThemeExtension<PetitTokens> lerp(ThemeExtension<PetitTokens>? other, double t) {
+    if (other is! PetitTokens) return this;
+    return PetitTokens(
+      cornerRadius: _lerpDouble(cornerRadius, other.cornerRadius, t)!,
+      motionFast: _lerpDuration(motionFast, other.motionFast, t),
+      motionNormal: _lerpDuration(motionNormal, other.motionNormal, t),
+      motionSlow: _lerpDuration(motionSlow, other.motionSlow, t),
+    );
+  }
+
+  static Duration _lerpDuration(Duration a, Duration b, double t) {
+    return Duration(milliseconds: (a.inMilliseconds + (b.inMilliseconds - a.inMilliseconds) * t).round());
+  }
+}
+
+double? _lerpDouble(double a, double b, double t) => a + (b - a) * t;
+
+class ThemeLoader {
+  ThemeLoader._();
+
+  static Future<ThemeData> load(String id, Brightness brightness) async {
+    final data = jsonDecode(await rootBundle.loadString("assets/themes/themes.json")) as Map<String, dynamic>;
+    final themes = (data["themes"] as List).cast<Map<String, dynamic>>();
+    final match = themes.firstWhere((e) => e["id"] == id, orElse: () => themes.first);
+    final colors = (match["colors"] as Map<String, dynamic>)[brightness == Brightness.dark ? "dark" : "light"] as Map<String, dynamic>;
+    final corner = (match["tokens"] as Map<String, dynamic>)["corner_radius"] as num;
+    final motion = (match["tokens"] as Map<String, dynamic>)["motion"] as Map<String, dynamic>;
+    final scheme = ColorScheme(
+      brightness: brightness,
+      primary: Color(int.parse(colors["primary"].toString())),
+      onPrimary: Color(int.parse(colors["onPrimary"].toString())),
+      secondary: Color(int.parse(colors["secondary"].toString())),
+      onSecondary: Color(int.parse(colors["onSecondary"].toString())),
+      error: Color(int.parse(colors["error"].toString())),
+      onError: Color(int.parse(colors["onError"].toString())),
+      background: Color(int.parse(colors["background"].toString())),
+      onBackground: Color(int.parse(colors["onBackground"].toString())),
+      surface: Color(int.parse(colors["surface"].toString())),
+      onSurface: Color(int.parse(colors["onSurface"].toString())),
+    );
+    final tokens = PetitTokens(
+      cornerRadius: corner.toDouble(),
+      motionFast: Duration(milliseconds: motion["fast"] as int),
+      motionNormal: Duration(milliseconds: motion["normal"] as int),
+      motionSlow: Duration(milliseconds: motion["slow"] as int),
+    );
+    return ThemeData(
+      useMaterial3: true,
+      colorScheme: scheme,
+      textTheme: const TextTheme(
+        bodyLarge: TextStyle(fontSize: 18),
+        bodyMedium: TextStyle(fontSize: 16),
+        bodySmall: TextStyle(fontSize: 14),
+      ),
+      visualDensity: VisualDensity.adaptivePlatformDensity,
+      cardTheme: CardTheme(shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(tokens.cornerRadius))),
+      extensions: [tokens],
+    );
+  }
+}
+'
+
+w "$APP/lib/src/theme/theme_preview_screen.dart" '
+import "package:flutter/material.dart";
+import "registry.dart";
+
+class ThemePreviewScreen extends StatefulWidget {
+  const ThemePreviewScreen({super.key});
+
+  @override
+  State<ThemePreviewScreen> createState() => _ThemePreviewScreenState();
+}
+
+class _ThemePreviewScreenState extends State<ThemePreviewScreen> {
+  String _selected = "high_contrast_dark";
+  ThemeData? _theme;
+
+  @override
+  void initState() {
+    super.initState();
+    _load();
+  }
+
+  Future<void> _load() async {
+    _theme = await ThemeLoader.load(_selected, Brightness.dark);
+    if (mounted) setState(() {});
+  }
+
+  @override
+  Widget build(BuildContext context) {
+    return Theme(
+      data: _theme ?? Theme.of(context),
+      child: Scaffold(
+        appBar: AppBar(title: const Text("Theme Preview")),
+        body: Padding(
+          padding: const EdgeInsets.all(16),
+          child: Column(
+            crossAxisAlignment: CrossAxisAlignment.start,
+            children: [
+              DropdownButton<String>(
+                value: _selected,
+                items: const [
+                  DropdownMenuItem(value: "high_contrast_dark", child: Text("High Contrast Dark")),
+                  DropdownMenuItem(value: "high_contrast_light", child: Text("High Contrast Light")),
+                  DropdownMenuItem(value: "modern_dark", child: Text("Modern Dark")),
+                  DropdownMenuItem(value: "modern_light", child: Text("Modern Light")),
+                ],
+                onChanged: (v) {
+                  if (v == null) return;
+                  setState(() => _selected = v);
+                  _load();
+                },
+              ),
+              const SizedBox(height: 12),
+              const Text("Sample Buttons"),
+              const SizedBox(height: 8),
+              Wrap(
+                spacing: 12,
+                children: [
+                  FilledButton(onPressed: () {}, child: const Text("Primary")),
+                  OutlinedButton(onPressed: () {}, child: const Text("Outline")),
+                  TextButton(onPressed: () {}, child: const Text("Text")),
+                ],
+              ),
+              const SizedBox(height: 24),
+              const Text("Cards"),
+              const SizedBox(height: 8),
+              Card(child: Padding(padding: const EdgeInsets.all(16), child: Text("Card with body text"))),
+            ],
+          ),
+        ),
+      ),
+    );
+  }
+}
+'
+
+# Themes JSON (4 themes adult-contrast-friendly)
+cat > "$APP/assets/themes/themes.json" <<'EOF'
+{
+  "version": 1,
+  "default_theme_id": "high_contrast_dark",
+  "themes": [
+    {
+      "id": "high_contrast_dark",
+      "display_name": "High Contrast Dark",
+      "colors": {
+        "dark": {
+          "primary": "4294967295",
+          "onPrimary": "4278190080",
+          "secondary": "4293726455",
+          "onSecondary": "4278190080",
+          "error": "4293977744",
+          "onError": "4278190080",
+          "background": "4278190080",
+          "onBackground": "4294967295",
+          "surface": "4279176978",
+          "onSurface": "4294967295"
+        },
+        "light": {
+          "primary": "4278190080",
+          "onPrimary": "4294967295",
+          "secondary": "4280824639",
+          "onSecondary": "4294967295",
+          "error": "4291821568",
+          "onError": "4294967295",
+          "background": "4294967295",
+          "onBackground": "4278190080",
+          "surface": "4294045938",
+          "onSurface": "4278190080"
+        }
+      },
+      "tokens": { "corner_radius": 16, "motion": { "fast": 80, "normal": 140, "slow": 220 } }
+    },
+    {
+      "id": "high_contrast_light",
+      "display_name": "High Contrast Light",
+      "colors": {
+        "dark": {
+          "primary": "4294967295",
+          "onPrimary": "4278190080",
+          "secondary": "4288657317",
+          "onSecondary": "4278190080",
+          "error": "4293977744",
+          "onError": "4278190080",
+          "background": "4280295454",
+          "onBackground": "4294967295",
+          "surface": "4281611310",
+          "onSurface": "4294967295"
+        },
+        "light": {
+          "primary": "4278190080",
+          "onPrimary": "4294967295",
+          "secondary": "4280824639",
+          "onSecondary": "4294967295",
+          "error": "4291821568",
+          "onError": "4294967295",
+          "background": "4294967295",
+          "onBackground": "4278190080",
+          "surface": "4293980405",
+          "onSurface": "4278190080"
+        }
+      },
+      "tokens": { "corner_radius": 14, "motion": { "fast": 80, "normal": 140, "slow": 220 } }
+    },
+    {
+      "id": "modern_dark",
+      "display_name": "Modern Dark",
+      "colors": {
+        "dark": {
+          "primary": "4286578689",
+          "onPrimary": "4278190080",
+          "secondary": "4289533019",
+          "onSecondary": "4278190080",
+          "error": "4293451674",
+          "onError": "4278190080",
+          "background": "4279178252",
+          "onBackground": "4293858817",
+          "surface": "4279835426",
+          "onSurface": "4293858817"
+        },
+        "light": {
+          "primary": "4278226785",
+          "onPrimary": "4294967295",
+          "secondary": "4279632544",
+          "onSecondary": "4294967295",
+          "error": "4280150456",
+          "onError": "4294967295",
+          "background": "4294967295",
+          "onBackground": "4279308561",
+          "surface": "4294374632",
+          "onSurface": "4279308561"
+        }
+      },
+      "tokens": { "corner_radius": 16, "motion": { "fast": 90, "normal": 160, "slow": 240 } }
+    },
+    {
+      "id": "modern_light",
+      "display_name": "Modern Light",
+      "colors": {
+        "dark": {
+          "primary": "4284776226",
+          "onPrimary": "4278190080",
+          "secondary": "4290519853",
+          "onSecondary": "4278190080",
+          "error": "4293977744",
+          "onError": "4278190080",
+          "background": "4279176975",
+          "onBackground": "4293652223",
+          "surface": "4280295454",
+          "onSurface": "4293652223"
+        },
+        "light": {
+          "primary": "4278196897",
+          "onPrimary": "4294967295",
+          "secondary": "4289139760",
+          "onSecondary": "4294967295",
+          "error": "4281007768",
+          "onError": "4294967295",
+          "background": "4294967295",
+          "onBackground": "4279173137",
+          "surface": "4294046197",
+          "onSurface": "4279173137"
+        }
+      },
+      "tokens": { "corner_radius": 14, "motion": { "fast": 90, "normal": 160, "slow": 240 } }
+    }
+  ]
+}
+EOF
+
+w "$APP/assets/themes/theme_voice_descriptions.json" '
+{ "theme_desc_system_adaptive": "Follows your phone’s system colors automatically." }
+'
+
+# Onboarding + provider labels
+w "$APP/assets/config/onboarding.json" '
+{
+  "steps": [
+    { "title": "Welcome to PetitPal", "body": "Voice-first help for everyday tasks.", "tts": "Welcome to PetitPal. I can listen and help."},
+    { "title": "Pick a Theme", "body": "Choose colors you can see clearly.", "tts": "Pick a theme that is easy for your eyes."},
+    { "title": "Add a Key", "body": "Enter an API key from OpenAI or Gemini.", "tts": "Please add at least one provider key so I can answer."}
+  ],
+  "finish": { "title": "All Set", "body": "You can change settings any time.", "tts": "All set. Tap the mic to speak."}
+}
+'
+
+w "$APP/assets/config/provider_setup.json" '
+{
+  "providers": [
+    {"id": "openai", "label": "OpenAI", "help_url": "https://platform.openai.com/"},
+    {"id": "gemini", "label": "Gemini", "help_url": "https://aistudio.google.com/app/apikey"},
+    {"id": "grok", "label": "Grok", "help_url": "https://x.ai/"},
+    {"id": "deepseek", "label": "DeepSeek", "help_url": "https://platform.deepseek.com/"}
+  ]
+}
+'
+
+# -----------------------------
+# Flutter app: onboarding + home + router + main
+# -----------------------------
+w "$APP/lib/src/onboarding/onboarding_screen.dart" '
+import "dart:convert";
+import "package:flutter/material.dart";
+import "package:flutter/services.dart" show rootBundle;
+import "package:flutter_riverpod/flutter_riverpod.dart";
+import "package:shared_preferences/shared_preferences.dart";
+import "../../config/strings_config.dart";
+
+class OnboardingScreen extends ConsumerStatefulWidget {
+  const OnboardingScreen({super.key});
+  @override
+  ConsumerState<OnboardingScreen> createState() => _OnboardingScreenState();
+}
+
+class _OnboardingScreenState extends ConsumerState<OnboardingScreen> {
+  int _index = 0;
+  List<Map<String, dynamic>> _steps = [];
+
+  @override
+  void initState() {
+    super.initState();
+    _load();
+  }
+
+  Future<void> _load() async {
+    final data = jsonDecode(await rootBundle.loadString("assets/config/onboarding.json")) as Map<String, dynamic>;
+    _steps = (data["steps"] as List).cast<Map<String, dynamic>>();
+    if (mounted) setState(() {});
+  }
+
+  @override
+  Widget build(BuildContext context) {
+    final step = _steps.isEmpty ? null : _steps[_index];
+    return Scaffold(
+      appBar: AppBar(title: const Text(StringsConfig.onboardingTitle)),
+      body: Padding(
+        padding: const EdgeInsets.all(16),
+        child: Column(
+          crossAxisAlignment: CrossAxisAlignment.start,
+          children: [
+            if (step != null) ...[
+              Text(step["title"]?.toString() ?? "", style: Theme.of(context).textTheme.headlineSmall),
+              const SizedBox(height: 8),
+              Text(step["body"]?.toString() ?? "")
+            ],
+            const Spacer(),
+            Align(
+              alignment: Alignment.bottomRight,
+              child: FilledButton(
+                onPressed: () async {
+                  if (_steps.isEmpty) return;
+                  if (_index < _steps.length - 1) {
+                    setState(() => _index += 1);
+                  } else {
+                    final prefs = await SharedPreferences.getInstance();
+                    await prefs.setBool("seen_onboarding", true);
+                    if (!mounted) return;
+                    Navigator.of(context).pushReplacementNamed("/home");
+                  }
+                },
+                child: Text(_index < _steps.length - 1 ? StringsConfig.onboardingNext : StringsConfig.startUsingApp),
+              ),
+            )
+          ],
+        ),
+      ),
+    );
+  }
+}
+'
+
+w "$APP/lib/src/home/home_screen.dart" '
+import "package:flutter/material.dart";
+
+class HomeScreen extends StatelessWidget {
+  const HomeScreen({super.key});
+
+  @override
+  Widget build(BuildContext context) {
+    return Scaffold(
+      appBar: AppBar(title: const Text("PetitPal")),
+      body: ListView(
+        padding: const EdgeInsets.all(16),
+        children: [
+          Card(
+            child: ListTile(
+              leading: const Icon(Icons.mic),
+              title: const Text("Voice Assistant"),
+              subtitle: const Text("Speak and hear answers"),
+              onTap: () => Navigator.of(context).pushNamed("/voice"),
+            ),
+          ),
+          Card(
+            child: ListTile(
+              leading: const Icon(Icons.vpn_key),
+              title: const Text("Provider Keys"),
+              subtitle: const Text("Add or update keys"),
+              onTap: () => Navigator.of(context).pushNamed("/providers"),
+            ),
+          ),
+          Card(
+            child: ListTile(
+              leading: const Icon(Icons.palette),
+              title: const Text("Theme Preview"),
+              subtitle: const Text("Pick colors that suit your eyes"),
+              onTap: () => Navigator.of(context).pushNamed("/themes"),
+            ),
+          ),
+          Card(
+            child: ListTile(
+              leading: const Icon(Icons.group),
+              title: const Text("Family"),
+              subtitle: const Text("Invite or accept via QR"),
+              onTap: () => Navigator.of(context).pushNamed("/family"),
+            ),
+          )
+        ],
+      ),
+    );
+  }
+}
+'
+
+w "$APP/lib/app_router.dart" '
+import "package:flutter/material.dart";
+import "package:flutter_riverpod/flutter_riverpod.dart";
+import "src/home/home_screen.dart";
+import "src/onboarding/onboarding_screen.dart";
+import "src/theme/theme_preview_screen.dart";
+import "src/providers/provider_setup_screen.dart";
+import "src/family/family_hub_screen.dart";
+import "src/family/invite_screen.dart";
+import "src/family/accept_invite_screen.dart";
+import "src/family/family_dashboard_screen.dart";
+import "src/voice/voice_screen.dart";
+import "src/providers/providers.dart";
+
+class AppRouter extends ConsumerWidget {
+  const AppRouter({super.key});
+
+  @override
+  Widget build(BuildContext context, WidgetRef ref) {
+    return FutureBuilder<bool>(
+      future: ref.read(isFirstRunProvider.future),
+      builder: (context, snap) {
+        final firstRun = (snap.data ?? true);
+        final initial = firstRun ? "/onboarding" : "/home";
+        return Navigator(
+          initialRoute: initial,
+          onGenerateRoute: (settings) {
+            switch (settings.name) {
+              case "/home":
+                return MaterialPageRoute(builder: (_) => const HomeScreen());
+              case "/onboarding":
+                return MaterialPageRoute(builder: (_) => const OnboardingScreen());
+              case "/themes":
+                return MaterialPageRoute(builder: (_) => const ThemePreviewScreen());
+              case "/providers":
+                return MaterialPageRoute(builder: (_) => const ProviderSetupScreen());
+              case "/family":
+                return MaterialPageRoute(builder: (_) => const FamilyHubScreen());
+              case "/family/invite":
+                return MaterialPageRoute(builder: (_) => const InviteScreen());
+              case "/family/accept":
+                return MaterialPageRoute(builder: (_) => const AcceptInviteScreen());
+              case "/family/dashboard":
+                return MaterialPageRoute(builder: (_) => const FamilyDashboardScreen());
+              case "/voice":
+                return MaterialPageRoute(builder: (_) => const VoiceScreen());
+            }
+            return MaterialPageRoute(builder: (_) => const HomeScreen());
+          },
+        );
+      },
+    );
+  }
+}
+'
+
+w "$APP/lib/main.dart" '
+import "package:flutter/material.dart";
+import "package:flutter_riverpod/flutter_riverpod.dart";
+import "src/theme/registry.dart";
+import "app_router.dart";
+
+void main() {
+  WidgetsFlutterBinding.ensureInitialized();
+  runApp(const ProviderScope(child: PetitPalApp()));
+}
+
+class PetitPalApp extends StatefulWidget {
+  const PetitPalApp({super.key});
+  @override
+  State<PetitPalApp> createState() => _PetitPalAppState();
+}
+
+class _PetitPalAppState extends State<PetitPalApp> {
+  ThemeData? _theme;
+
+  @override
+  void initState() {
+    super.initState();
+    _loadTheme();
+  }
+
+  Future<void> _loadTheme() async {
+    _theme = await ThemeLoader.load("high_contrast_dark", Brightness.dark);
+    if (mounted) setState(() {});
+  }
+
+  @override
+  Widget build(BuildContext context) {
+    return MaterialApp(
+      title: "PetitPal",
+      theme: _theme ?? ThemeData.dark(useMaterial3: true),
+      home: const AppRouter(),
+      debugShowCheckedModeBanner: false,
+    );
+  }
+}
+'
+
+# -----------------------------
+# Android app structure (minimal, builds on Android)
+# -----------------------------
+mkdir -p "$APP/android/app/src/main/kotlin/com/petitpal/app" "$APP/android/app/src/main/res/mipmap-mdpi" "$APP/android/app/src/main/res/mipmap-hdpi" "$APP/android/app/src/main/res/mipmap-xhdpi" "$APP/android/app/src/main/res/mipmap-xxhdpi" "$APP/android/app/src/main/res/mipmap-xxxhdpi"
+
+w "$APP/android/gradle.properties" '
+org.gradle.jvmargs=-Xmx4g -XX:MaxMetaspaceSize=1g -Dkotlin.daemon.jvm.options\="-Xmx2g"
+android.useAndroidX=true
+android.enableJetifier=true
+kotlin.code.style=official
+'
+
+w "$APP/android/settings.gradle" '
+pluginManagement {
+    repositories {
+        google()
+        mavenCentral()
+        gradlePluginPortal()
+    }
+}
+dependencyResolutionManagement {
+    repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)
+    repositories {
+        google()
+        mavenCentral()
+    }
+}
+rootProject.name = "petitpal"
+include(":app")
+'
+
+w "$APP/android/build.gradle" '
+buildscript {
+    repositories {
+        google()
+        mavenCentral()
+    }
+    dependencies {
+        classpath "com.android.tools.build:gradle:8.4.2"
+        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.9.24"
+        classpath "com.google.gms:google-services:4.4.2"
+    }
+}
+
+allprojects {
+    repositories {
+        google()
+        mavenCentral()
+    }
+}
+
+task clean(type: Delete) {
+    delete rootProject.buildDir
+}
+'
+
+w "$APP/android/app/build.gradle" '
+plugins {
+    id "com.android.application"
+    id "kotlin-android"
+    id "com.google.gms.google-services"
+}
+
+android {
+    namespace "com.petitpal.app"
+    compileSdk 35
+
+    defaultConfig {
+        applicationId "com.petitpal.app"
+        minSdk 24
+        targetSdk 35
+        versionCode 5
+        versionName "0.5.0"
+        multiDexEnabled true
+    }
+
+    buildTypes {
+        release {
+            minifyEnabled false
+            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
+        }
+        debug {
+            debuggable true
+        }
+    }
+
+    compileOptions {
+        sourceCompatibility JavaVersion.VERSION_17
+        targetCompatibility JavaVersion.VERSION_17
+    }
+    kotlinOptions {
+        jvmTarget = "17"
+    }
+
+    ndkVersion "27.0.12077973"
+}
+
+dependencies {
+    implementation "org.jetbrains.kotlin:kotlin-stdlib:1.9.24"
+    implementation platform("com.google.firebase:firebase-bom:33.3.0")
+    implementation "com.google.firebase:firebase-analytics"
+    implementation "com.google.firebase:firebase-crashlytics"
+}
+'
+
+w "$APP/android/app/proguard-rules.pro" '# Keep default rules
+'
+
+w "$APP/android/app/src/main/AndroidManifest.xml" '
+<manifest xmlns:android="http://schemas.android.com/apk/res/android" package="com.petitpal.app">
+    <uses-permission android:name="android.permission.RECORD_AUDIO"/>
+    <uses-permission android:name="android.permission.CAMERA"/>
+    <application android:label="PetitPal" android:icon="@mipmap/ic_launcher" android:usesCleartextTraffic="true">
+        <activity android:name=".MainActivity" android:exported="true" android:launchMode="singleTask">
+            <intent-filter>
+                <action android:name="android.intent.action.MAIN"/>
+                <category android:name="android.intent.category.LAUNCHER"/>
+            </intent-filter>
+            <!-- Deep link for invites -->
+            <intent-filter android:autoVerify="true">
+                <action android:name="android.intent.action.VIEW"/>
+                <category android:name="android.intent.category.DEFAULT"/>
+                <category android:name="android.intent.category.BROWSABLE"/>
+                <data android:scheme="https" android:host="petitpal.page.link"/>
+                <data android:scheme="https" android:host="petitpal-api.kristyc.workers.dev"/>
+            </intent-filter>
+        </activity>
+    </application>
+</manifest>
+'
+
+w "$APP/android/app/src/main/kotlin/com/petitpal/app/MainActivity.kt" '
+package com.petitpal.app
+
+import io.flutter.embedding.android.FlutterActivity
+
+class MainActivity: FlutterActivity() {}
+'
+
+# tiny 8x8 png for all mipmaps
+ICON_B64="iVBORw0KGgoAAAANSUhEUgAAAAgAAAAICAYAAADED76LAAAADUlEQVQYV2NkYGD4z0ABAAjaA2CIOqKoAAAAAElFTkSuQmCC"
+for d in mdpi hdpi xhdpi xxhdpi xxxhdpi; do
+  wb "$APP/android/app/src/main/res/mipmap-$d/ic_launcher.png" "$ICON_B64"
+done
+
+# -----------------------------
+# Cloudflare Worker
+# -----------------------------
+w "$WKR/worker.js" '
+export default {
+  async fetch(request, env, ctx) {
+    const url = new URL(request.url);
+    const corsHeaders = {
+      "Access-Control-Allow-Origin": "*",
+      "Access-Control-Allow-Methods": "GET,POST,OPTIONS",
+      "Access-Control-Allow-Headers": "Content-Type,X-Device-ID,X-Family-ID",
+    };
+    if (request.method === "OPTIONS") {
+      return new Response("", { headers: corsHeaders });
+    }
+    try {
+      if (url.pathname === "/health") {
+        return json({ ok: true, version: "1.0.0" }, corsHeaders);
+      }
+      if (url.pathname === "/api/keys/save" && request.method === "POST") {
+        const deviceId = request.headers.get("X-Device-ID");
+        if (!deviceId) return error(400, "Missing X-Device-ID", corsHeaders);
+        const body = await request.json();
+        if (!body.ciphertext || !body.nonce || !body.salt) {
+          return error(400, "Expecting encrypted payload", corsHeaders);
+        }
+        const key = `keys:${deviceId}`;
+        await env["petitpal-kv"].put(key, JSON.stringify(body));
+        return json({ stored: true, key }, corsHeaders);
+      }
+      if (url.pathname === "/api/keys/get" && request.method === "GET") {
+        const deviceId = request.headers.get("X-Device-ID");
+        if (!deviceId) return error(400, "Missing X-Device-ID", corsHeaders);
+        const key = `keys:${deviceId}`;
+        const v = await env["petitpal-kv"].get(key);
+        if (!v) return error(404, "Not found", corsHeaders);
+        return new Response(v, { headers: { "Content-Type": "application/json", ...corsHeaders } });
+      }
+      if (url.pathname === "/api/chat" && request.method === "POST") {
+        const deviceId = request.headers.get("X-Device-ID");
+        if (!deviceId) return error(400, "Missing X-Device-ID", corsHeaders);
+        const body = await request.json();
+        const text = (body.text || "").toString();
+        const provider = (body.provider_hint || "openai").toString();
+        const providerKey = (body.provider_key || "").toString();
+        if (!providerKey) return error(401, "Missing provider key", corsHeaders);
+
+        const start = Date.now();
+        const out = await chatViaProvider(provider, providerKey, text);
+        const duration = Date.now() - start;
+        return json({ model_used: out.model, auto_switched: false, reason: "provider_hint", summary_tts: out.text, text: out.text, duration_ms: duration, telemetry_id: crypto.randomUUID() }, corsHeaders);
+      }
+      if (url.pathname === "/api/family/create_invite" && request.method === "POST") {
+        const deviceId = request.headers.get("X-Device-ID");
+        if (!deviceId) return error(400, "Missing X-Device-ID", corsHeaders);
+        const body = await request.json();
+        const memberName = (body.member_name || "Member").toString();
+        const familiesKey = `family_by_owner:${deviceId}`;
+        let familyId = await env["petitpal-kv"].get(familiesKey);
+        if (!familyId) {
+          familyId = crypto.randomUUID();
+          await env["petitpal-kv"].put(familiesKey, familyId);
+          await env["petitpal-kv"].put(`family:${familyId}`, JSON.stringify({ members: [{ device_id: deviceId, name: "Owner" }], created_at: new Date().toISOString(), owner_device_id: deviceId }));
+        }
+        const token = [...crypto.getRandomValues(new Uint8Array(16))].map(b => b.toString(16).padStart(2,"0")).join("");
+        const deeplink = `https://petitpal-api.kristyc.workers.dev/accept?token=${token}`;
+        await env["petitpal-kv"].put(`invites:${token}`, JSON.stringify({ family_id: familyId, member_name: memberName, issued_at: new Date().toISOString() }), { expirationTtl: 86400 });
+        return json({ family_id: familyId, invite_token: token, deeplink }, corsHeaders);
+      }
+      if (url.pathname === "/api/family/accept_invite" && request.method === "POST") {
+        const deviceId = request.headers.get("X-Device-ID");
+        if (!deviceId) return error(400, "Missing X-Device-ID", corsHeaders);
+        const body = await request.json();
+        const token = (body.invite_token || "").toString();
+        const inviteRaw = await env["petitpal-kv"].get(`invites:${token}`);
+        if (!inviteRaw) return error(400, "Invalid or expired token", corsHeaders);
+        const invite = JSON.parse(inviteRaw);
+        const famKey = `family:${invite.family_id}`;
+        const famRaw = await env["petitpal-kv"].get(famKey);
+        const family = famRaw ? JSON.parse(famRaw) : { members: [], created_at: new Date().toISOString(), owner_device_id: "" };
+        const exists = (family.members || []).some((m) => m.device_id === deviceId);
+        if (!exists) {
+          family.members = [...(family.members || []), { device_id: deviceId, name: invite.member_name }];
+          await env["petitpal-kv"].put(famKey, JSON.stringify(family));
+        }
+        await env["petitpal-kv"].delete(`invites:${token}`);
+        return json({ family_id: invite.family_id, member_name: invite.member_name }, corsHeaders);
+      }
+      if (url.pathname === "/api/family/list" && request.method === "GET") {
+        const familyId = request.headers.get("X-Family-ID");
+        if (!familyId) return error(400, "Missing X-Family-ID", corsHeaders);
+        const famRaw = await env["petitpal-kv"].get(`family:${familyId}`);
+        if (!famRaw) return error(404, "Not found", corsHeaders);
+        return new Response(famRaw, { headers: { "Content-Type": "application/json", ...corsHeaders } });
+      }
+      return error(404, "Not found", corsHeaders);
+    } catch (e) {
+      return error(500, "Server error: " + (e && e.message ? e.message : String(e)), { "Access-Control-Allow-Origin": "*" });
+    }
+  }
+};
+
+async function chatViaProvider(provider, key, text) {
+  provider = provider.toLowerCase();
+  if (provider === "openai") {
+    const res = await fetch("https://api.openai.com/v1/chat/completions", {
+      method: "POST",
+      headers: {
+        "Authorization": `Bearer ${key}`,
+        "Content-Type": "application/json",
+      },
+      body: JSON.stringify({
+        model: "gpt-4o-mini",
+        messages: [{ role: "user", content: text }],
+        temperature: 0.7,
+      }),
+    });
+    if (!res.ok) {
+      const t = await res.text();
+      throw new Error("OpenAI error " + res.status + ": " + t);
+    }
+    const data = await res.json();
+    const out = data.choices?.[0]?.message?.content || "";
+    return { model: "gpt-4o-mini", text: out };
+  }
+  if (provider === "gemini") {
+    const res = await fetch(`https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-pro:generateContent?key=${key}`, {
+      method: "POST",
+      headers: { "Content-Type": "application/json" },
+      body: JSON.stringify({ contents: [{ parts: [{ text }]}] }),
+    });
+    if (!res.ok) {
+      const t = await res.text();
+      throw new Error("Gemini error " + res.status + ": " + t);
+    }
+    const data = await res.json();
+    const out = data.candidates?.[0]?.content?.parts?.[0]?.text || "";
+    return { model: "gemini-1.5-pro", text: out };
+  }
+  if (provider === "grok") {
+    const res = await fetch("https://api.x.ai/v1/chat/completions", {
+      method: "POST",
+      headers: { "Authorization": `Bearer ${key}`, "Content-Type": "application/json" },
+      body: JSON.stringify({ model: "grok-2-latest", messages: [{ role: "user", content: text }] }),
+    });
+    if (!res.ok) {
+      const t = await res.text();
+      throw new Error("Grok error " + res.status + ": " + t);
+    }
+    const data = await res.json();
+    const out = data.choices?.[0]?.message?.content || "";
+    return { model: "grok-2-latest", text: out };
+  }
+  if (provider === "deepseek") {
+    const res = await fetch("https://api.deepseek.com/chat/completions", {
+      method: "POST",
+      headers: { "Authorization": `Bearer ${key}", "Content-Type": "application/json" },
+      body: JSON.stringify({ model: "deepseek-chat", messages: [{ role: "user", content: text }] }),
+    });
+    if (!res.ok) {
+      const t = await res.text();
+      throw new Error("DeepSeek error " + res.status + ": " + t);
+    }
+    const data = await res.json();
+    const out = data.choices?.[0]?.message?.content || "";
+    return { model: "deepseek-chat", text: out };
+  }
+  throw new Error("Unsupported provider: " + provider);
+}
+
+function json(obj, headers = {}) {
+  return new Response(JSON.stringify(obj), { headers: { "Content-Type": "application/json; charset=utf-8", ...headers } });
+}
+
+function error(code, message, headers = {}) {
+  return new Response(JSON.stringify({ error: message }), { status: code, headers: { "Content-Type": "application/json; charset=utf-8", ...headers } });
+}
+'
+
+w "$WKR/wrangler.toml" '
+name = "petitpal-api"
+main = "worker.js"
+compatibility_date = "2024-11-01"
+
+kv_namespaces = [
+  { binding = "petitpal-kv", id = "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx", preview_id = "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" }
+]
+
+[vars]
+# Feature toggles or DSNs can be added via wrangler secrets/vars
+'
+
+w "$WKR/.env.example" '
+# Example environment entries for Cloudflare Worker
+# SENTRY_DSN=
+'
+
+# -----------------------------
+# Docs
+# -----------------------------
+w "$DOCS/SETUP_GUIDE.md" '
+# Setup Guide (30 minutes)
+
+## Prereqs
+- Flutter SDK (stable). Recommended: 3.22.2+
+- Android Studio with SDK 35 and NDK 27.0.12077973
+- Cloudflare account (free tier)
+
+## 1) Deploy the Worker
+1. Install Wrangler: `npm i -g wrangler`
+2. In `cloudflare-worker/`:
+   - `wrangler login`
+   - `wrangler kv namespace create petitpal-kv` (copy IDs)
+   - Edit `wrangler.toml` and paste IDs under `kv_namespaces`
+   - `wrangler deploy`
+3. Verify health: open `https://<your-worker>.workers.dev/health` (should return `{ ok: true }`)
+
+## 2) Configure & Run the Flutter App
+1. Open `petitpal/` in Android Studio
+2. Run `flutter pub get`
+3. Connect an Android device/emulator (Android 8.0+)
+4. `flutter run`
+5. (Optional now / later) If you use Firebase Analytics/Crashlytics:
+   - Put `google-services.json` under `android/app/`
+   - Flip `LaunchConfig.LAUNCH_MODE` to `true` to enable
+
+## 3) First Run
+- Onboarding appears on first launch
+- Go to **Provider Keys** and paste at least one provider key (OpenAI/Gemini/Grok/DeepSeek)
+- Use **Voice Assistant** → Start → Stop → Ask
+
+## 4) Family Invites
+- **Family → Invite Family Member** → creates a token and deep link → shows QR
+- Second device: **Accept Invite** → scan the QR → joined confirmation
+
+## 5) Change Look & Feel
+- **Theme Preview** to audition themes
+- To modify globally, edit JSON: `assets/themes/themes.json`, rebuild the app
+
+See `DEPLOYMENT_CHECKLIST.md` and `TROUBLESHOOTING.md` for more.
+'
+
+w "$DOCS/PetitPal_API_Spec.md" '
+# PetitPal Worker API (MVP)
+
+Base URL: `https://<your-worker>.workers.dev`
+
+Headers:
+- `X-Device-ID`: UUID generated on device
+- `Content-Type`: application/json
+
+## GET /health
+Returns `{ ok: true, version: "1.0.0" }`
+
+## POST /api/keys/save
+Body: `{ "ciphertext": "...", "nonce": "...", "salt": "...", "algo": "AES-GCM-256", "kdf": "PBKDF2-HMAC-SHA256", "iterations": 500000, "created_at": "..." }`
+
+## GET /api/keys/get
+Returns encrypted backup
+
+## POST /api/chat
+Body: `{ "text": "Hello", "provider_hint": "openai|gemini|grok|deepseek", "provider_key": "..." }`
+
+## POST /api/family/create_invite
+Returns `{ family_id, invite_token, deeplink }`
+
+## POST /api/family/accept_invite
+Body: `{ "invite_token": "..." }`
+
+## GET /api/family/list
+Header `X-Family-ID: ...` → returns `{ family_id, members: [{ device_id, name }, ...] }`
+'
+
+w "$DOCS/TROUBLESHOOTING.md" '
+# Troubleshooting
+
+**App builds but crashes**
+- Ensure minSdk 24+, Android 8.0+ emulator/device
+- `flutter clean && flutter pub get`
+
+**Voice capture fails**
+- Grant microphone permission in Android settings
+
+**/api/chat returns 401**
+- Add a provider key on the Provider Keys screen
+
+**Wrangler deploy fails**
+- Ensure `kv_namespaces` IDs are filled
+- `wrangler whoami` to confirm login
+'
+
+w "$DOCS/DEPLOYMENT_CHECKLIST.md" '
+# Deployment Checklist
+
+- [ ] Worker deployed; `/health` returns ok
+- [ ] KV namespace bound as `petitpal-kv` in `wrangler.toml`
+- [ ] Android device/emulator ready (Android 8+)
+- [ ] Provider key pasted on device
+- [ ] Optional: `google-services.json` present (when launching)
+- [ ] `LaunchConfig.LAUNCH_MODE` switched to `true` for production
+'
+
+# -----------------------------
+# Scripts
+# -----------------------------
+w "$SCRIPTS/compat_check.sh" '
+#!/usr/bin/env bash
+set -euo pipefail
+
+echo "Checking Flutter..."
+flutter --version
+
+echo "Checking Java..."
+java -version || true
+
+echo "Recommended versions:"
+cat <<EOF
+Flutter >= 3.22.2
+AGP 8.4.2
+Kotlin 1.9.24
+Android SDK 35
+NDK 27.0.12077973
+JDK 17
+EOF
+'
+chmod +x "$SCRIPTS/compat_check.sh"
+
+# -----------------------------
+# Create ZIP and Git patch
+# -----------------------------
+cd "$(dirname "$ROOT")"
+ZIP="$PWD/petitpal_mvp.zip"
+PATCH="$PWD/petitpal_mvp.patch"
+rm -f "$ZIP" "$PATCH"
+
+# zip
+( cd "$ROOT" && zip -r -q "$ZIP" . )
+
+# git init + patch
+( cd "$ROOT" && git init -q && git add . && git -c user.email=a@b.c -c user.name=gen commit -q -m "PetitPal MVP initial commit" && git format-patch -1 -o "$PWD" >/dev/null )
+# format-patch writes a numbered file; rename to petitpal_mvp.patch
+PATCHFILE="$(ls -1 *.patch | head -n1 || true)"
+if [ -n "$PATCHFILE" ]; then mv "$PATCHFILE" "$PATCH"; fi
+
+echo
+echo "DONE."
+echo "ZIP: $ZIP"
+echo "PATCH: $PATCH"
+echo
+echo "Open docs/SETUP_GUIDE.md and follow the steps."
diff --git a/scripts/compat_check.sh b/scripts/compat_check.sh
new file mode 100644
index 0000000..d9b6e38
--- /dev/null
+++ b/scripts/compat_check.sh
@@ -0,0 +1 @@
+'"$@"'
-- 
2.43.0

